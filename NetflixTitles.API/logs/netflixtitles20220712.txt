2022-07-12 13:06:29.159 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 13:06:29.320 -07:00 [DBG] Hosting starting
2022-07-12 13:06:29.356 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 13:06:29.364 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 13:06:29.392 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 13:06:29.416 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 13:06:29.423 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 13:06:29.434 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 13:06:29.434 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 13:06:29.448 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 13:06:29.450 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 13:06:29.685 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 13:06:29.936 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 13:06:29.938 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 13:06:29.939 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 13:06:29.943 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 13:06:29.944 -07:00 [INF] Hosting environment: Development
2022-07-12 13:06:29.944 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 13:06:29.945 -07:00 [DBG] Hosting started
2022-07-12 13:06:43.512 -07:00 [DBG] Connection id "0HMJ48859RU4L" received FIN.
2022-07-12 13:06:43.532 -07:00 [DBG] Connection id "0HMJ48859RU4L" accepted.
2022-07-12 13:06:43.535 -07:00 [DBG] Connection id "0HMJ48859RU4L" started.
2022-07-12 13:06:43.588 -07:00 [DBG] Connection id "0HMJ48859RU4M" accepted.
2022-07-12 13:06:43.614 -07:00 [DBG] Connection id "0HMJ48859RU4M" started.
2022-07-12 13:06:43.663 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 13:06:43.957 -07:00 [DBG] Connection id "0HMJ48859RU4L" stopped.
2022-07-12 13:06:43.970 -07:00 [DBG] Connection id "0HMJ48859RU4L" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 13:06:43.995 -07:00 [DBG] Connection 0HMJ48859RU4M established using the following protocol: "Tls12"
2022-07-12 13:06:44.057 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists/users - -
2022-07-12 13:06:44.061 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 13:06:44.117 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists/users'
2022-07-12 13:06:44.124 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)' with route pattern 'api/lists/{id}' is valid for the request path '/api/lists/users'
2022-07-12 13:06:44.126 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-12 13:06:44.177 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:06:44.240 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 13:06:44.252 -07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2022-07-12 13:06:44.264 -07:00 [INF] AuthenticationScheme: Bearer was challenged.
2022-07-12 13:06:44.269 -07:00 [DBG] Connection id "0HMJ48859RU4M" completed keep alive response.
2022-07-12 13:06:44.275 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists/users - - - 401 0 - 220.0450ms
2022-07-12 13:06:52.611 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57
2022-07-12 13:06:52.619 -07:00 [DBG] 1 candidate(s) found for the request path '/api/authentication/authenticate'
2022-07-12 13:06:52.620 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)' with route pattern 'api/authentication/authenticate' is valid for the request path '/api/authentication/authenticate'
2022-07-12 13:06:52.620 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:06:52.623 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:06:52.630 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 13:06:52.635 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:06:52.698 -07:00 [INF] Route matched with {action = "Authenticate", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] Authenticate(AuthenticationRequestBody) on controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API).
2022-07-12 13:06:52.701 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:06:52.702 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:06:52.703 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:06:52.704 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:06:52.704 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:06:52.705 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 13:07:06.833 -07:00 [INF] Executed action NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API) in 14122.0509ms
2022-07-12 13:07:06.838 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:07:06.839 -07:00 [ERR] An unhandled exception has occurred while executing the request.
MySqlConnector.MySqlException (0x80004005): Unable to connect to any of the specified MySQL hosts.
   at MySqlConnector.Core.ServerSession.ConnectAsync(ConnectionSettings cs, MySqlConnection connection, Int32 startTickCount, ILoadBalancer loadBalancer, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/ServerSession.cs:line 433
   at MySqlConnector.Core.ConnectionPool.ConnectSessionAsync(MySqlConnection connection, String logMessage, Int32 startTickCount, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/ConnectionPool.cs:line 363
   at MySqlConnector.Core.ConnectionPool.GetSessionAsync(MySqlConnection connection, Int32 startTickCount, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/ConnectionPool.cs:line 94
   at MySqlConnector.Core.ConnectionPool.GetSessionAsync(MySqlConnection connection, Int32 startTickCount, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/ConnectionPool.cs:line 124
   at MySqlConnector.MySqlConnection.CreateSessionAsync(ConnectionPool pool, Int32 startTickCount, Nullable`1 ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlConnection.cs:line 915
   at MySqlConnector.MySqlConnection.OpenAsync(Nullable`1 ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlConnection.cs:line 406
   at MySqlConnector.MySqlConnection.Open() in /_/src/MySqlConnector/MySqlConnection.cs:line 369
   at Microsoft.EntityFrameworkCore.ServerVersion.AutoDetect(String connectionString)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(DbContextOptionsBuilder dbContextOptions) in /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/Program.cs:line 37
   at Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.<>c__DisplayClass3_0`2.<AddDbContextPool>b__0(IServiceProvider _, DbContextOptionsBuilder ob)
   at Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.<>c__DisplayClass6_0`1.<AddPoolingOptions>b__0(IServiceProvider sp, DbContextOptionsBuilder ob)
   at Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.CreateDbContextOptions[TContext](IServiceProvider applicationServiceProvider, Action`2 optionsAction)
   at Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.<>c__DisplayClass17_0`1.<AddCoreServices>b__0(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.<>c__5`2.<AddDbContextPool>b__5_0(IServiceProvider sp)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)
   at lambda_method9(Closure , IServiceProvider , Object[] )
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass7_0.<CreateActivator>b__0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2022-07-12 13:07:06.866 -07:00 [DBG] Connection id "0HMJ48859RU4M" completed keep alive response.
2022-07-12 13:07:06.868 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57 - 500 - text/plain;+charset=utf-8 14257.2963ms
2022-07-12 13:07:06.869 -07:00 [DBG] Connection id "0HMJ48859RU4M", Request id "0HMJ48859RU4M:00000003": started reading request body.
2022-07-12 13:07:06.870 -07:00 [DBG] Connection id "0HMJ48859RU4M", Request id "0HMJ48859RU4M:00000003": done reading request body.
2022-07-12 13:07:19.881 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 13:07:20.039 -07:00 [DBG] Hosting starting
2022-07-12 13:07:20.070 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 13:07:20.077 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 13:07:20.103 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 13:07:20.123 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 13:07:20.129 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 13:07:20.138 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 13:07:20.139 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 13:07:20.151 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 13:07:20.153 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 13:07:20.371 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 13:07:20.541 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 13:07:20.542 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 13:07:20.542 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 13:07:20.545 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 13:07:20.546 -07:00 [INF] Hosting environment: Development
2022-07-12 13:07:20.546 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 13:07:20.546 -07:00 [DBG] Hosting started
2022-07-12 13:07:27.893 -07:00 [DBG] Connection id "0HMJ488IH3O4N" received FIN.
2022-07-12 13:07:27.912 -07:00 [DBG] Connection id "0HMJ488IH3O4N" accepted.
2022-07-12 13:07:27.915 -07:00 [DBG] Connection id "0HMJ488IH3O4N" started.
2022-07-12 13:07:27.923 -07:00 [DBG] Connection id "0HMJ488IH3O4O" accepted.
2022-07-12 13:07:27.924 -07:00 [DBG] Connection id "0HMJ488IH3O4O" started.
2022-07-12 13:07:27.988 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 13:07:28.090 -07:00 [DBG] Connection id "0HMJ488IH3O4N" stopped.
2022-07-12 13:07:28.146 -07:00 [DBG] Connection id "0HMJ488IH3O4N" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 13:07:28.324 -07:00 [DBG] Connection 0HMJ488IH3O4O established using the following protocol: "Tls12"
2022-07-12 13:07:28.389 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57
2022-07-12 13:07:28.393 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 13:07:28.450 -07:00 [DBG] 1 candidate(s) found for the request path '/api/authentication/authenticate'
2022-07-12 13:07:28.457 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)' with route pattern 'api/authentication/authenticate' is valid for the request path '/api/authentication/authenticate'
2022-07-12 13:07:28.460 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:07:28.491 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:07:28.550 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 13:07:28.554 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:07:28.606 -07:00 [INF] Route matched with {action = "Authenticate", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] Authenticate(AuthenticationRequestBody) on controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API).
2022-07-12 13:07:28.608 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:07:28.608 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:07:28.610 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:07:28.610 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:07:28.610 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:07:28.612 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 13:07:47.892 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 13:07:48.059 -07:00 [DBG] Hosting starting
2022-07-12 13:07:48.092 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 13:07:48.100 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 13:07:48.127 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 13:07:48.147 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 13:07:48.154 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 13:07:48.163 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 13:07:48.164 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 13:07:48.177 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 13:07:48.179 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 13:07:48.387 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 13:07:48.555 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 13:07:48.556 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 13:07:48.557 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 13:07:48.585 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 13:07:48.586 -07:00 [INF] Hosting environment: Development
2022-07-12 13:07:48.586 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 13:07:48.586 -07:00 [DBG] Hosting started
2022-07-12 13:07:52.171 -07:00 [DBG] Connection id "0HMJ488POKNBV" received FIN.
2022-07-12 13:07:52.191 -07:00 [DBG] Connection id "0HMJ488POKNBV" accepted.
2022-07-12 13:07:52.194 -07:00 [DBG] Connection id "0HMJ488POKNBV" started.
2022-07-12 13:07:52.202 -07:00 [DBG] Connection id "0HMJ488POKNC0" accepted.
2022-07-12 13:07:52.203 -07:00 [DBG] Connection id "0HMJ488POKNC0" started.
2022-07-12 13:07:52.269 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 13:07:52.400 -07:00 [DBG] Connection id "0HMJ488POKNBV" stopped.
2022-07-12 13:07:52.432 -07:00 [DBG] Connection id "0HMJ488POKNBV" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 13:07:52.596 -07:00 [DBG] Connection 0HMJ488POKNC0 established using the following protocol: "Tls12"
2022-07-12 13:07:52.658 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57
2022-07-12 13:07:52.661 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 13:07:52.717 -07:00 [DBG] 1 candidate(s) found for the request path '/api/authentication/authenticate'
2022-07-12 13:07:52.724 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)' with route pattern 'api/authentication/authenticate' is valid for the request path '/api/authentication/authenticate'
2022-07-12 13:07:52.726 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:07:52.755 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:07:52.813 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 13:07:52.817 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:07:52.868 -07:00 [INF] Route matched with {action = "Authenticate", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] Authenticate(AuthenticationRequestBody) on controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API).
2022-07-12 13:07:52.870 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:07:52.870 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:07:52.871 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:07:52.872 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:07:52.872 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:07:52.873 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 13:11:01.052 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 13:11:01.212 -07:00 [DBG] Hosting starting
2022-07-12 13:11:01.244 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 13:11:01.252 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 13:11:01.278 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 13:11:01.298 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 13:11:01.305 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 13:11:01.314 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 13:11:01.315 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 13:11:01.328 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 13:11:01.330 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 13:11:01.535 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 13:11:01.732 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 13:11:01.734 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 13:11:01.735 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 13:11:01.737 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 13:11:01.737 -07:00 [INF] Hosting environment: Development
2022-07-12 13:11:01.737 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 13:11:01.737 -07:00 [DBG] Hosting started
2022-07-12 13:11:05.344 -07:00 [DBG] Connection id "0HMJ48AJASOM9" received FIN.
2022-07-12 13:11:05.365 -07:00 [DBG] Connection id "0HMJ48AJASOM9" accepted.
2022-07-12 13:11:05.368 -07:00 [DBG] Connection id "0HMJ48AJASOM9" started.
2022-07-12 13:11:05.402 -07:00 [DBG] Connection id "0HMJ48AJASOMA" accepted.
2022-07-12 13:11:05.404 -07:00 [DBG] Connection id "0HMJ48AJASOMA" started.
2022-07-12 13:11:05.474 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 13:11:05.628 -07:00 [DBG] Connection id "0HMJ48AJASOM9" stopped.
2022-07-12 13:11:05.764 -07:00 [DBG] Connection id "0HMJ48AJASOM9" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 13:11:05.831 -07:00 [DBG] Connection 0HMJ48AJASOMA established using the following protocol: "Tls12"
2022-07-12 13:11:05.898 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57
2022-07-12 13:11:05.902 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 13:11:05.962 -07:00 [DBG] 1 candidate(s) found for the request path '/api/authentication/authenticate'
2022-07-12 13:11:05.970 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)' with route pattern 'api/authentication/authenticate' is valid for the request path '/api/authentication/authenticate'
2022-07-12 13:11:05.972 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:11:06.002 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:11:06.067 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 13:11:06.071 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:11:06.121 -07:00 [INF] Route matched with {action = "Authenticate", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] Authenticate(AuthenticationRequestBody) on controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API).
2022-07-12 13:11:06.123 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:11:06.123 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:11:06.125 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:11:06.125 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:11:06.125 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:11:06.126 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 13:11:06.563 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-12 13:11:07.456 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-12 13:11:07.463 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 13:11:07.471 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 13:11:07.476 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' using the name '' in request data ...
2022-07-12 13:11:07.478 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 13:11:07.480 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 13:11:07.487 -07:00 [DBG] Connection id "0HMJ48AJASOMA", Request id "0HMJ48AJASOMA:00000002": started reading request body.
2022-07-12 13:11:07.488 -07:00 [DBG] Connection id "0HMJ48AJASOMA", Request id "0HMJ48AJASOMA:00000002": done reading request body.
2022-07-12 13:11:07.635 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:11:07.635 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:11:07.635 -07:00 [DBG] Attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 13:11:07.654 -07:00 [DBG] Done attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:11:07.761 -07:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Where(u => u.Email == __userName_0)
    .Where(u => u.Password == __password_1)
    .Include(u => u.Lists)
    .ThenInclude(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-12 13:11:07.813 -07:00 [DBG] Including navigation: 'User.Lists'.
2022-07-12 13:11:07.850 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-12 13:11:07.858 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-12 13:11:08.135 -07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2022-07-12 13:11:08.157 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: new SingleQueryingEnumerable<User>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 1], [Property: User.Email (string) Required MaxLength(255), 2], [Property: User.Password (string) Required MaxLength(255), 3], [Property: User.UserName (string) Required MaxLength(255), 4], [Property: User.UserType (string), 5] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: List.ListName (string) Required MaxLength(255), 7], [Property: List.UserId (int?) FK Index, 8] }
                3 -> 6
                4 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: TitleList.ListId (int?) FK Index, 10], [Property: TitleList.TitleId (int?) FK Index, 11] }
                5 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 12], [Property: Title.Cast (string), 13], [Property: Title.Country (string) MaxLength(255), 14], [Property: Title.DateAdded (DateOnly?), 15], [Property: Title.Description (string) Required, 16], [Property: Title.Director (string) MaxLength(255), 17], [Property: Title.Duration (string) MaxLength(255), 18], [Property: Title.ListedIn (string) Required MaxLength(255), 19], [Property: Title.Rating (string) MaxLength(255), 20], [Property: Title.ReleaseYear (short?), 21], [Property: Title.TitleName (string) Required MaxLength(255), 22], [Property: Title.Type (string), 23], [Property: Title.UserRating (int?), 24], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 25] }
                6 -> 9
                7 -> 12
            SELECT t.user_id, t.date_created, t.email, t.password, t.user_name, t.user_type, t2.list_id, t2.list_name, t2.user_id, t2.id, t2.list_id0, t2.title_id, t2.title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
            FROM 
            (
                SELECT TOP(1) u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
                FROM users AS u
                WHERE (u.email == @__userName_0) && (u.password == @__password_1)
            ) AS t
            LEFT JOIN 
            (
                SELECT l.list_id, l.list_name, l.user_id, t1.id, t1.list_id AS list_id0, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched
                FROM lists AS l
                LEFT JOIN 
                (
                    SELECT t0.id, t0.list_id, t0.title_id, t3.title_id AS title_id0, t3.cast, t3.country, t3.date_added, t3.description, t3.director, t3.duration, t3.listed_in, t3.rating, t3.release_year, t3.title_name, t3.type, t3.user_rating, t3.watched
                    FROM title_lists AS t0
                    LEFT JOIN titles AS t3 ON t0.title_id == t3.title_id
                ) AS t1 ON l.list_id == t1.list_id
            ) AS t2 ON t.user_id == t2.user_id
            ORDER BY t.user_id ASC, t2.list_id ASC, t2.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, User>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 13:11:08.210 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 13:11:08.220 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2022-07-12 13:11:08.246 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:11:08.871 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:11:08.894 -07:00 [DBG] Executing DbCommand [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:11:08.979 -07:00 [INF] Executed DbCommand (91ms) [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:11:09.026 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:11:09.067 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:11:09.086 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:11:09.097 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:11:09.134 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:11:09.136 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:11:09.136 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:11:09.137 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:11:09.137 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:11:09.152 -07:00 [DBG] A data reader was disposed.
2022-07-12 13:11:09.155 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:11:09.157 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:11:09.277 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 13:11:09.280 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 13:11:09.280 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 13:11:09.280 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 13:11:09.282 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2022-07-12 13:11:09.282 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-07-12 13:11:09.297 -07:00 [INF] Executed action NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API) in 3166.8887ms
2022-07-12 13:11:09.301 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:11:09.305 -07:00 [DBG] Connection id "0HMJ48AJASOMA" completed keep alive response.
2022-07-12 13:11:09.321 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57 - 200 - text/plain;+charset=utf-8 3426.7357ms
2022-07-12 13:11:23.669 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists/users - -
2022-07-12 13:11:23.676 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists/users'
2022-07-12 13:11:23.677 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)' with route pattern 'api/lists/{id}' is valid for the request path '/api/lists/users'
2022-07-12 13:11:23.677 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-12 13:11:23.693 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:11:23.788 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:11:23.791 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:11:23.803 -07:00 [DBG] Authorization was successful.
2022-07-12 13:11:23.805 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-12 13:11:23.826 -07:00 [INF] Route matched with {action = "GetList", controller = "Lists"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Models.ListDto]] GetList(Int32) on controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API).
2022-07-12 13:11:23.827 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:11:23.827 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:11:23.827 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:11:23.827 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:11:23.827 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:11:23.827 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 13:11:24.032 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 13:11:24.034 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2022-07-12 13:11:24.035 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2022-07-12 13:11:24.044 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-12 13:11:24.044 -07:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2022-07-12 13:11:24.045 -07:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2022-07-12 13:11:24.046 -07:00 [DBG] The request has model state errors, returning an error response.
2022-07-12 13:11:24.049 -07:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2022-07-12 13:11:24.050 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 13:11:24.050 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 13:11:24.051 -07:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2022-07-12 13:11:24.051 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2022-07-12 13:11:24.052 -07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2022-07-12 13:11:24.143 -07:00 [INF] Executed action NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API) in 315.6854ms
2022-07-12 13:11:24.144 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-12 13:11:24.144 -07:00 [DBG] Connection id "0HMJ48AJASOMA" completed keep alive response.
2022-07-12 13:11:24.146 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists/users - - - 400 243 application/problem+json;+charset=utf-8 477.6297ms
2022-07-12 13:11:53.411 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/users - -
2022-07-12 13:11:53.412 -07:00 [DBG] 1 candidate(s) found for the request path '/api/users'
2022-07-12 13:11:53.413 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)' with route pattern 'api/users' is valid for the request path '/api/users'
2022-07-12 13:11:53.413 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:11:53.416 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:11:53.426 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:11:53.427 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:11:53.430 -07:00 [DBG] Authorization was successful.
2022-07-12 13:11:53.430 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:11:53.437 -07:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Entities.User]]] GetUsers() on controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API).
2022-07-12 13:11:53.438 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:11:53.438 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:11:53.438 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:11:53.438 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:11:53.438 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:11:53.438 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:11:53.442 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:11:53.447 -07:00 [INF] Executing ForbidResult with authentication schemes ([]).
2022-07-12 13:11:53.451 -07:00 [INF] AuthenticationScheme: Bearer was forbidden.
2022-07-12 13:11:53.451 -07:00 [INF] Executed action NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API) in 12.7571ms
2022-07-12 13:11:53.451 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:11:53.452 -07:00 [DBG] Connection id "0HMJ48AJASOMA" completed keep alive response.
2022-07-12 13:11:53.453 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/users - - - 403 0 - 42.8318ms
2022-07-12 13:12:04.418 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 59
2022-07-12 13:12:04.419 -07:00 [DBG] 1 candidate(s) found for the request path '/api/authentication/authenticate'
2022-07-12 13:12:04.420 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)' with route pattern 'api/authentication/authenticate' is valid for the request path '/api/authentication/authenticate'
2022-07-12 13:12:04.420 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:12:04.422 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:12:04.425 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 13:12:04.427 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:12:04.429 -07:00 [INF] Route matched with {action = "Authenticate", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] Authenticate(AuthenticationRequestBody) on controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API).
2022-07-12 13:12:04.435 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:12:04.435 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:12:04.435 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:12:04.436 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:12:04.436 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:12:04.436 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 13:12:04.436 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 13:12:04.438 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 13:12:04.439 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' using the name '' in request data ...
2022-07-12 13:12:04.439 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 13:12:04.440 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 13:12:04.441 -07:00 [DBG] Connection id "0HMJ48AJASOMA", Request id "0HMJ48AJASOMA:00000005": started reading request body.
2022-07-12 13:12:04.441 -07:00 [DBG] Connection id "0HMJ48AJASOMA", Request id "0HMJ48AJASOMA:00000005": done reading request body.
2022-07-12 13:12:04.444 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:12:04.444 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:12:04.444 -07:00 [DBG] Attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 13:12:04.445 -07:00 [DBG] Done attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:12:04.459 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 13:12:04.460 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2022-07-12 13:12:04.463 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:12:04.472 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:12:04.473 -07:00 [DBG] Executing DbCommand [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:12:04.729 -07:00 [INF] Executed DbCommand (209ms) [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:12:04.792 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:12:04.983 -07:00 [DBG] A data reader was disposed.
2022-07-12 13:12:04.988 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:12:04.993 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:12:05.002 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 13:12:05.002 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 13:12:05.003 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 13:12:05.003 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 13:12:05.003 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2022-07-12 13:12:05.003 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-07-12 13:12:05.006 -07:00 [INF] Executed action NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API) in 569.0337ms
2022-07-12 13:12:05.007 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:12:05.008 -07:00 [DBG] Connection id "0HMJ48AJASOMA" completed keep alive response.
2022-07-12 13:12:05.009 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 59 - 200 - text/plain;+charset=utf-8 589.9447ms
2022-07-12 13:12:15.529 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/users - -
2022-07-12 13:12:15.530 -07:00 [DBG] 1 candidate(s) found for the request path '/api/users'
2022-07-12 13:12:15.535 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)' with route pattern 'api/users' is valid for the request path '/api/users'
2022-07-12 13:12:15.536 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:12:15.537 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:12:15.541 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:12:15.542 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:12:15.544 -07:00 [DBG] Authorization was successful.
2022-07-12 13:12:15.545 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:12:15.545 -07:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Entities.User]]] GetUsers() on controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API).
2022-07-12 13:12:15.545 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:12:15.545 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:12:15.545 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:12:15.545 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:12:15.545 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:12:15.545 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:12:15.546 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:12:15.548 -07:00 [INF] Executing ForbidResult with authentication schemes ([]).
2022-07-12 13:12:15.549 -07:00 [INF] AuthenticationScheme: Bearer was forbidden.
2022-07-12 13:12:15.549 -07:00 [INF] Executed action NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API) in 3.541ms
2022-07-12 13:12:15.549 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:12:15.550 -07:00 [DBG] Connection id "0HMJ48AJASOMA" completed keep alive response.
2022-07-12 13:12:15.551 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/users - - - 403 0 - 21.6872ms
2022-07-12 13:12:20.283 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/users - -
2022-07-12 13:12:20.284 -07:00 [DBG] 1 candidate(s) found for the request path '/api/users'
2022-07-12 13:12:20.284 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)' with route pattern 'api/users' is valid for the request path '/api/users'
2022-07-12 13:12:20.284 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:12:20.285 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:12:20.292 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:12:20.293 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:12:20.294 -07:00 [DBG] Authorization was successful.
2022-07-12 13:12:20.294 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:12:20.297 -07:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Entities.User]]] GetUsers() on controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API).
2022-07-12 13:12:20.298 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:12:20.299 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:12:20.299 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:12:20.299 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:12:20.299 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:12:20.299 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:12:20.300 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:12:20.301 -07:00 [INF] Executing ForbidResult with authentication schemes ([]).
2022-07-12 13:12:20.301 -07:00 [INF] AuthenticationScheme: Bearer was forbidden.
2022-07-12 13:12:20.301 -07:00 [INF] Executed action NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API) in 1.763ms
2022-07-12 13:12:20.301 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:12:20.301 -07:00 [DBG] Connection id "0HMJ48AJASOMA" completed keep alive response.
2022-07-12 13:12:20.302 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/users - - - 403 0 - 19.6321ms
2022-07-12 13:12:30.878 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/users - -
2022-07-12 13:12:30.879 -07:00 [DBG] 1 candidate(s) found for the request path '/api/users'
2022-07-12 13:12:30.879 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)' with route pattern 'api/users' is valid for the request path '/api/users'
2022-07-12 13:12:30.879 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:12:30.883 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:12:30.890 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:12:30.890 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:12:30.891 -07:00 [DBG] Authorization was successful.
2022-07-12 13:12:30.891 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:12:30.892 -07:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Entities.User]]] GetUsers() on controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API).
2022-07-12 13:12:30.892 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:12:30.892 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:12:30.892 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:12:30.892 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:12:30.892 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:12:30.892 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:12:30.893 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:13:00.498 -07:00 [INF] Executing ForbidResult with authentication schemes ([]).
2022-07-12 13:13:00.499 -07:00 [INF] AuthenticationScheme: Bearer was forbidden.
2022-07-12 13:13:00.500 -07:00 [INF] Executed action NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API) in 29603.9497ms
2022-07-12 13:13:00.500 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:13:00.501 -07:00 [DBG] Connection id "0HMJ48AJASOMA" completed keep alive response.
2022-07-12 13:13:00.553 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/users - - - 403 0 - 29620.6151ms
2022-07-12 13:13:12.564 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/users - -
2022-07-12 13:13:12.565 -07:00 [DBG] 1 candidate(s) found for the request path '/api/users'
2022-07-12 13:13:12.566 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)' with route pattern 'api/users' is valid for the request path '/api/users'
2022-07-12 13:13:12.566 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:13:12.566 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:13:12.575 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:13:12.575 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:13:12.576 -07:00 [DBG] Authorization was successful.
2022-07-12 13:13:12.576 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:13:12.578 -07:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Entities.User]]] GetUsers() on controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API).
2022-07-12 13:13:12.578 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:13:12.578 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:13:12.579 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:13:12.579 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:13:12.579 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:13:12.579 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:13:12.579 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:14:37.426 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 13:14:37.587 -07:00 [DBG] Hosting starting
2022-07-12 13:14:37.618 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 13:14:37.626 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 13:14:37.650 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 13:14:37.671 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 13:14:37.677 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 13:14:37.686 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 13:14:37.687 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 13:14:37.699 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 13:14:37.702 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 13:14:37.924 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 13:14:38.093 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 13:14:38.094 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 13:14:38.095 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 13:14:38.097 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 13:14:38.097 -07:00 [INF] Hosting environment: Development
2022-07-12 13:14:38.097 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 13:14:38.098 -07:00 [DBG] Hosting started
2022-07-12 13:14:41.507 -07:00 [DBG] Connection id "0HMJ48CJOC8CT" received FIN.
2022-07-12 13:14:41.527 -07:00 [DBG] Connection id "0HMJ48CJOC8CT" accepted.
2022-07-12 13:14:41.530 -07:00 [DBG] Connection id "0HMJ48CJOC8CT" started.
2022-07-12 13:14:41.564 -07:00 [DBG] Connection id "0HMJ48CJOC8CU" accepted.
2022-07-12 13:14:41.565 -07:00 [DBG] Connection id "0HMJ48CJOC8CU" started.
2022-07-12 13:14:41.635 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 13:14:41.786 -07:00 [DBG] Connection id "0HMJ48CJOC8CT" stopped.
2022-07-12 13:14:41.844 -07:00 [DBG] Connection id "0HMJ48CJOC8CT" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 13:14:42.019 -07:00 [DBG] Connection 0HMJ48CJOC8CU established using the following protocol: "Tls12"
2022-07-12 13:14:42.084 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/users - -
2022-07-12 13:14:42.087 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 13:14:42.143 -07:00 [DBG] 1 candidate(s) found for the request path '/api/users'
2022-07-12 13:14:42.149 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)' with route pattern 'api/users' is valid for the request path '/api/users'
2022-07-12 13:14:42.151 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:14:42.202 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:14:42.460 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:14:42.463 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:14:42.474 -07:00 [DBG] Authorization was successful.
2022-07-12 13:14:42.476 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:14:42.514 -07:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Entities.User]]] GetUsers() on controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API).
2022-07-12 13:14:42.516 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:14:42.516 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:14:42.518 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:14:42.518 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:14:42.519 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:14:42.520 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:14:42.918 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-12 13:14:43.799 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-12 13:14:43.993 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:14:44.049 -07:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .OrderBy(u => u.UserId)'
2022-07-12 13:14:44.280 -07:00 [DBG] Generated query execution expression: 
'queryContext => new SingleQueryingEnumerable<User>(
    (RelationalQueryContext)queryContext, 
    RelationalCommandCache.SelectExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 1], [Property: User.Email (string) Required MaxLength(255), 2], [Property: User.Password (string) Required MaxLength(255), 3], [Property: User.UserName (string) Required MaxLength(255), 4], [Property: User.UserType (string), 5] }
        SELECT u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
        FROM users AS u
        ORDER BY u.user_id ASC), 
    Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, User>, 
    NetflixTitles.API.DbContexts.netflix_appContext, 
    False, 
    False, 
    True
)'
2022-07-12 13:14:44.322 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 13:14:44.332 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2022-07-12 13:14:44.340 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:14:45.006 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:14:45.028 -07:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
FROM `users` AS `u`
ORDER BY `u`.`user_id`
2022-07-12 13:14:45.083 -07:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
FROM `users` AS `u`
ORDER BY `u`.`user_id`
2022-07-12 13:14:45.134 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:14:45.167 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:14:45.168 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:14:45.169 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:14:45.182 -07:00 [DBG] A data reader was disposed.
2022-07-12 13:14:45.185 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:14:45.187 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:14:45.196 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 13:14:45.199 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 13:14:45.200 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 13:14:45.200 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 13:14:45.201 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-12 13:14:45.202 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[NetflixTitles.API.Entities.User, NetflixTitles.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-07-12 13:14:45.345 -07:00 [INF] Executed action NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API) in 2820.7055ms
2022-07-12 13:14:45.349 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:14:45.372 -07:00 [DBG] Connection id "0HMJ48CJOC8CU" completed keep alive response.
2022-07-12 13:14:45.387 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/users - - - 200 573 application/json;+charset=utf-8 3307.2585ms
2022-07-12 13:15:09.017 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/users/5 - -
2022-07-12 13:15:09.024 -07:00 [DBG] 1 candidate(s) found for the request path '/api/users/5'
2022-07-12 13:15:09.024 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)' with route pattern 'api/users/{id}' is valid for the request path '/api/users/5'
2022-07-12 13:15:09.025 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)'
2022-07-12 13:15:09.029 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:15:09.207 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:15:09.208 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:15:09.214 -07:00 [DBG] Authorization was successful.
2022-07-12 13:15:09.215 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)'
2022-07-12 13:15:09.261 -07:00 [INF] Route matched with {action = "GetUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Entities.User]] GetUser(Int32) on controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API).
2022-07-12 13:15:09.262 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:15:09.262 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:15:09.262 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:15:09.262 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:15:09.262 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:15:09.262 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:15:09.265 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:15:09.277 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2022-07-12 13:15:09.283 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2022-07-12 13:15:09.285 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-12 13:15:09.286 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-12 13:15:09.286 -07:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2022-07-12 13:15:09.291 -07:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2022-07-12 13:15:09.322 -07:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Where(u => u.UserId == __userId_0)
    .Include(u => u.Lists)
    .ThenInclude(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-12 13:15:09.346 -07:00 [DBG] Including navigation: 'User.Lists'.
2022-07-12 13:15:09.354 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-12 13:15:09.362 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-12 13:15:09.545 -07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2022-07-12 13:15:09.555 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: new SingleQueryingEnumerable<User>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 1], [Property: User.Email (string) Required MaxLength(255), 2], [Property: User.Password (string) Required MaxLength(255), 3], [Property: User.UserName (string) Required MaxLength(255), 4], [Property: User.UserType (string), 5] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: List.ListName (string) Required MaxLength(255), 7], [Property: List.UserId (int?) FK Index, 8] }
                3 -> 6
                4 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: TitleList.ListId (int?) FK Index, 10], [Property: TitleList.TitleId (int?) FK Index, 11] }
                5 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 12], [Property: Title.Cast (string), 13], [Property: Title.Country (string) MaxLength(255), 14], [Property: Title.DateAdded (DateOnly?), 15], [Property: Title.Description (string) Required, 16], [Property: Title.Director (string) MaxLength(255), 17], [Property: Title.Duration (string) MaxLength(255), 18], [Property: Title.ListedIn (string) Required MaxLength(255), 19], [Property: Title.Rating (string) MaxLength(255), 20], [Property: Title.ReleaseYear (short?), 21], [Property: Title.TitleName (string) Required MaxLength(255), 22], [Property: Title.Type (string), 23], [Property: Title.UserRating (int?), 24], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 25] }
                6 -> 9
                7 -> 12
            SELECT t.user_id, t.date_created, t.email, t.password, t.user_name, t.user_type, t2.list_id, t2.list_name, t2.user_id, t2.id, t2.list_id0, t2.title_id, t2.title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
            FROM 
            (
                SELECT TOP(1) u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
                FROM users AS u
                WHERE u.user_id == @__userId_0
            ) AS t
            LEFT JOIN 
            (
                SELECT l.list_id, l.list_name, l.user_id, t1.id, t1.list_id AS list_id0, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched
                FROM lists AS l
                LEFT JOIN 
                (
                    SELECT t0.id, t0.list_id, t0.title_id, t3.title_id AS title_id0, t3.cast, t3.country, t3.date_added, t3.description, t3.director, t3.duration, t3.listed_in, t3.rating, t3.release_year, t3.title_name, t3.type, t3.user_rating, t3.watched
                    FROM title_lists AS t0
                    LEFT JOIN titles AS t3 ON t0.title_id == t3.title_id
                ) AS t1 ON l.list_id == t1.list_id
            ) AS t2 ON t.user_id == t2.user_id
            ORDER BY t.user_id ASC, t2.list_id ASC, t2.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, User>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 13:15:09.570 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 13:15:09.571 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 13:15:09.592 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:15:09.599 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:15:09.604 -07:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE `u`.`user_id` = @__userId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:15:09.680 -07:00 [INF] Executed DbCommand (79ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE `u`.`user_id` = @__userId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:15:09.683 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:15:09.692 -07:00 [DBG] A data reader was disposed.
2022-07-12 13:15:09.693 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:15:09.693 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:15:09.720 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 13:15:09.720 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 13:15:09.720 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 13:15:09.720 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 13:15:09.720 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-12 13:15:09.721 -07:00 [INF] Executing OkObjectResult, writing value of type 'NetflixTitles.API.Models.UserDto'.
2022-07-12 13:15:09.734 -07:00 [INF] Executed action NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API) in 471.7579ms
2022-07-12 13:15:09.735 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)'
2022-07-12 13:15:09.735 -07:00 [DBG] Connection id "0HMJ48CJOC8CU" completed keep alive response.
2022-07-12 13:15:09.737 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/users/5 - - - 200 125 application/json;+charset=utf-8 720.4999ms
2022-07-12 13:16:41.576 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 13:16:41.736 -07:00 [DBG] Hosting starting
2022-07-12 13:16:41.766 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 13:16:41.775 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 13:16:41.799 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 13:16:41.819 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 13:16:41.825 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 13:16:41.834 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 13:16:41.834 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 13:16:41.847 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 13:16:41.849 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 13:16:42.071 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 13:16:42.218 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 13:16:42.219 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 13:16:42.220 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 13:16:42.221 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 13:16:42.222 -07:00 [INF] Hosting environment: Development
2022-07-12 13:16:42.222 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 13:16:42.222 -07:00 [DBG] Hosting started
2022-07-12 13:16:54.297 -07:00 [DBG] Connection id "0HMJ48DRAOO7N" received FIN.
2022-07-12 13:16:54.319 -07:00 [DBG] Connection id "0HMJ48DRAOO7N" accepted.
2022-07-12 13:16:54.321 -07:00 [DBG] Connection id "0HMJ48DRAOO7N" started.
2022-07-12 13:16:54.355 -07:00 [DBG] Connection id "0HMJ48DRAOO7O" accepted.
2022-07-12 13:16:54.357 -07:00 [DBG] Connection id "0HMJ48DRAOO7O" started.
2022-07-12 13:16:54.399 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 13:16:54.445 -07:00 [DBG] Connection id "0HMJ48DRAOO7N" stopped.
2022-07-12 13:16:54.555 -07:00 [DBG] Connection id "0HMJ48DRAOO7N" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 13:16:54.742 -07:00 [DBG] Connection 0HMJ48DRAOO7O established using the following protocol: "Tls12"
2022-07-12 13:16:54.814 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57
2022-07-12 13:16:54.818 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 13:16:54.881 -07:00 [DBG] 1 candidate(s) found for the request path '/api/authentication/authenticate'
2022-07-12 13:16:54.888 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)' with route pattern 'api/authentication/authenticate' is valid for the request path '/api/authentication/authenticate'
2022-07-12 13:16:54.890 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:16:54.921 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:16:54.981 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 13:16:54.987 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:16:55.045 -07:00 [INF] Route matched with {action = "Authenticate", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] Authenticate(AuthenticationRequestBody) on controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API).
2022-07-12 13:16:55.047 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:16:55.047 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:16:55.048 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:16:55.049 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:16:55.049 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:16:55.051 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 13:16:55.477 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-12 13:16:56.393 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-12 13:16:56.400 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 13:16:56.407 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 13:16:56.412 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' using the name '' in request data ...
2022-07-12 13:16:56.413 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 13:16:56.416 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 13:16:56.424 -07:00 [DBG] Connection id "0HMJ48DRAOO7O", Request id "0HMJ48DRAOO7O:00000002": started reading request body.
2022-07-12 13:16:56.424 -07:00 [DBG] Connection id "0HMJ48DRAOO7O", Request id "0HMJ48DRAOO7O:00000002": done reading request body.
2022-07-12 13:16:56.557 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:16:56.557 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:16:56.557 -07:00 [DBG] Attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 13:16:56.573 -07:00 [DBG] Done attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:16:56.672 -07:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Where(u => u.Email == __userName_0)
    .Where(u => u.Password == __password_1)
    .Include(u => u.Lists)
    .ThenInclude(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-12 13:16:56.726 -07:00 [DBG] Including navigation: 'User.Lists'.
2022-07-12 13:16:56.769 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-12 13:16:56.777 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-12 13:16:57.068 -07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2022-07-12 13:16:57.090 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: new SingleQueryingEnumerable<User>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 1], [Property: User.Email (string) Required MaxLength(255), 2], [Property: User.Password (string) Required MaxLength(255), 3], [Property: User.UserName (string) Required MaxLength(255), 4], [Property: User.UserType (string), 5] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: List.ListName (string) Required MaxLength(255), 7], [Property: List.UserId (int?) FK Index, 8] }
                3 -> 6
                4 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: TitleList.ListId (int?) FK Index, 10], [Property: TitleList.TitleId (int?) FK Index, 11] }
                5 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 12], [Property: Title.Cast (string), 13], [Property: Title.Country (string) MaxLength(255), 14], [Property: Title.DateAdded (DateOnly?), 15], [Property: Title.Description (string) Required, 16], [Property: Title.Director (string) MaxLength(255), 17], [Property: Title.Duration (string) MaxLength(255), 18], [Property: Title.ListedIn (string) Required MaxLength(255), 19], [Property: Title.Rating (string) MaxLength(255), 20], [Property: Title.ReleaseYear (short?), 21], [Property: Title.TitleName (string) Required MaxLength(255), 22], [Property: Title.Type (string), 23], [Property: Title.UserRating (int?), 24], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 25] }
                6 -> 9
                7 -> 12
            SELECT t.user_id, t.date_created, t.email, t.password, t.user_name, t.user_type, t2.list_id, t2.list_name, t2.user_id, t2.id, t2.list_id0, t2.title_id, t2.title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
            FROM 
            (
                SELECT TOP(1) u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
                FROM users AS u
                WHERE (u.email == @__userName_0) && (u.password == @__password_1)
            ) AS t
            LEFT JOIN 
            (
                SELECT l.list_id, l.list_name, l.user_id, t1.id, t1.list_id AS list_id0, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched
                FROM lists AS l
                LEFT JOIN 
                (
                    SELECT t0.id, t0.list_id, t0.title_id, t3.title_id AS title_id0, t3.cast, t3.country, t3.date_added, t3.description, t3.director, t3.duration, t3.listed_in, t3.rating, t3.release_year, t3.title_name, t3.type, t3.user_rating, t3.watched
                    FROM title_lists AS t0
                    LEFT JOIN titles AS t3 ON t0.title_id == t3.title_id
                ) AS t1 ON l.list_id == t1.list_id
            ) AS t2 ON t.user_id == t2.user_id
            ORDER BY t.user_id ASC, t2.list_id ASC, t2.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, User>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 13:16:57.143 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 13:16:57.154 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2022-07-12 13:16:57.181 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:16:57.934 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:16:57.959 -07:00 [DBG] Executing DbCommand [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:16:58.030 -07:00 [INF] Executed DbCommand (78ms) [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:16:58.080 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:16:58.121 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:16:58.140 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:16:58.151 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:16:58.184 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:16:58.185 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:16:58.186 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:16:58.187 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:16:58.188 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:16:58.205 -07:00 [DBG] A data reader was disposed.
2022-07-12 13:16:58.210 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:16:58.212 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:16:58.342 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 13:16:58.345 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 13:16:58.345 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 13:16:58.345 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 13:16:58.346 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2022-07-12 13:16:58.346 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-07-12 13:16:58.361 -07:00 [INF] Executed action NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API) in 3306.2654ms
2022-07-12 13:16:58.366 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:16:58.370 -07:00 [DBG] Connection id "0HMJ48DRAOO7O" completed keep alive response.
2022-07-12 13:16:58.387 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57 - 200 - text/plain;+charset=utf-8 3577.0331ms
2022-07-12 13:17:09.519 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/users - -
2022-07-12 13:17:09.526 -07:00 [DBG] 1 candidate(s) found for the request path '/api/users'
2022-07-12 13:17:09.526 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)' with route pattern 'api/users' is valid for the request path '/api/users'
2022-07-12 13:17:09.527 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:17:09.543 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:17:09.638 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:17:09.641 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:17:09.654 -07:00 [INF] Authorization failed. These requirements were not met:
ClaimsAuthorizationRequirement:Claim.Type=user_type and Claim.Value is one of the following values: (admin)
2022-07-12 13:17:09.660 -07:00 [INF] AuthenticationScheme: Bearer was forbidden.
2022-07-12 13:17:09.662 -07:00 [DBG] Connection id "0HMJ48DRAOO7O" completed keep alive response.
2022-07-12 13:17:09.663 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/users - - - 403 0 - 145.2769ms
2022-07-12 13:17:13.731 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/users/3 - -
2022-07-12 13:17:13.733 -07:00 [DBG] 1 candidate(s) found for the request path '/api/users/3'
2022-07-12 13:17:13.734 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)' with route pattern 'api/users/{id}' is valid for the request path '/api/users/3'
2022-07-12 13:17:13.734 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)'
2022-07-12 13:17:13.737 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:17:13.749 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:17:13.750 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:17:13.753 -07:00 [INF] Authorization failed. These requirements were not met:
ClaimsAuthorizationRequirement:Claim.Type=user_type and Claim.Value is one of the following values: (admin)
2022-07-12 13:17:13.754 -07:00 [INF] AuthenticationScheme: Bearer was forbidden.
2022-07-12 13:17:13.754 -07:00 [DBG] Connection id "0HMJ48DRAOO7O" completed keep alive response.
2022-07-12 13:17:13.755 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/users/3 - - - 403 0 - 24.5372ms
2022-07-12 13:17:17.563 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/users/100 - -
2022-07-12 13:17:17.565 -07:00 [DBG] 1 candidate(s) found for the request path '/api/users/100'
2022-07-12 13:17:17.565 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)' with route pattern 'api/users/{id}' is valid for the request path '/api/users/100'
2022-07-12 13:17:17.566 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)'
2022-07-12 13:17:17.566 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:17:17.575 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:17:17.575 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:17:17.581 -07:00 [INF] Authorization failed. These requirements were not met:
ClaimsAuthorizationRequirement:Claim.Type=user_type and Claim.Value is one of the following values: (admin)
2022-07-12 13:17:17.583 -07:00 [INF] AuthenticationScheme: Bearer was forbidden.
2022-07-12 13:17:17.584 -07:00 [DBG] Connection id "0HMJ48DRAOO7O" completed keep alive response.
2022-07-12 13:17:17.584 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/users/100 - - - 403 0 - 23.4317ms
2022-07-12 13:49:16.571 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 13:49:16.729 -07:00 [DBG] Hosting starting
2022-07-12 13:49:16.766 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 13:49:16.773 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 13:49:16.800 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 13:49:16.821 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 13:49:16.827 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 13:49:16.837 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 13:49:16.837 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 13:49:16.850 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 13:49:16.852 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 13:49:17.053 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 13:49:17.247 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 13:49:17.249 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 13:49:17.250 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 13:49:17.251 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 13:49:17.252 -07:00 [INF] Hosting environment: Development
2022-07-12 13:49:17.253 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 13:49:17.279 -07:00 [DBG] Hosting started
2022-07-12 13:49:56.582 -07:00 [DBG] Connection id "0HMJ490A39PU3" received FIN.
2022-07-12 13:49:56.606 -07:00 [DBG] Connection id "0HMJ490A39PU3" accepted.
2022-07-12 13:49:56.610 -07:00 [DBG] Connection id "0HMJ490A39PU3" started.
2022-07-12 13:49:56.669 -07:00 [DBG] Connection id "0HMJ490A39PU4" accepted.
2022-07-12 13:49:56.696 -07:00 [DBG] Connection id "0HMJ490A39PU4" started.
2022-07-12 13:49:56.744 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 13:49:56.872 -07:00 [DBG] Connection id "0HMJ490A39PU3" stopped.
2022-07-12 13:49:56.929 -07:00 [DBG] Connection id "0HMJ490A39PU3" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 13:49:57.146 -07:00 [DBG] Connection 0HMJ490A39PU4 established using the following protocol: "Tls12"
2022-07-12 13:49:57.224 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57
2022-07-12 13:49:57.228 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 13:49:57.295 -07:00 [DBG] 1 candidate(s) found for the request path '/api/authentication/authenticate'
2022-07-12 13:49:57.301 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)' with route pattern 'api/authentication/authenticate' is valid for the request path '/api/authentication/authenticate'
2022-07-12 13:49:57.304 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:49:57.338 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:49:57.410 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 13:49:57.417 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:49:57.477 -07:00 [INF] Route matched with {action = "Authenticate", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] Authenticate(AuthenticationRequestBody) on controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API).
2022-07-12 13:49:57.479 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:49:57.480 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:49:57.481 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:49:57.481 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:49:57.482 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:49:57.483 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 13:49:57.933 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-12 13:49:58.891 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-12 13:49:58.898 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 13:49:58.906 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 13:49:58.911 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' using the name '' in request data ...
2022-07-12 13:49:58.913 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 13:49:58.915 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 13:49:58.924 -07:00 [DBG] Connection id "0HMJ490A39PU4", Request id "0HMJ490A39PU4:00000002": started reading request body.
2022-07-12 13:49:58.924 -07:00 [DBG] Connection id "0HMJ490A39PU4", Request id "0HMJ490A39PU4:00000002": done reading request body.
2022-07-12 13:49:59.065 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:49:59.066 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:49:59.066 -07:00 [DBG] Attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 13:49:59.084 -07:00 [DBG] Done attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:49:59.191 -07:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Where(u => u.Email == __userName_0)
    .Where(u => u.Password == __password_1)
    .Include(u => u.Lists)
    .ThenInclude(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-12 13:49:59.251 -07:00 [DBG] Including navigation: 'User.Lists'.
2022-07-12 13:49:59.296 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-12 13:49:59.304 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-12 13:49:59.611 -07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2022-07-12 13:49:59.634 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: new SingleQueryingEnumerable<User>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 1], [Property: User.Email (string) Required MaxLength(255), 2], [Property: User.Password (string) Required MaxLength(255), 3], [Property: User.UserName (string) Required MaxLength(255), 4], [Property: User.UserType (string), 5] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: List.ListName (string) Required MaxLength(255), 7], [Property: List.UserId (int?) FK Index, 8] }
                3 -> 6
                4 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: TitleList.ListId (int?) FK Index, 10], [Property: TitleList.TitleId (int?) FK Index, 11] }
                5 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 12], [Property: Title.Cast (string), 13], [Property: Title.Country (string) MaxLength(255), 14], [Property: Title.DateAdded (DateOnly?), 15], [Property: Title.Description (string) Required, 16], [Property: Title.Director (string) MaxLength(255), 17], [Property: Title.Duration (string) MaxLength(255), 18], [Property: Title.ListedIn (string) Required MaxLength(255), 19], [Property: Title.Rating (string) MaxLength(255), 20], [Property: Title.ReleaseYear (short?), 21], [Property: Title.TitleName (string) Required MaxLength(255), 22], [Property: Title.Type (string), 23], [Property: Title.UserRating (int?), 24], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 25] }
                6 -> 9
                7 -> 12
            SELECT t.user_id, t.date_created, t.email, t.password, t.user_name, t.user_type, t2.list_id, t2.list_name, t2.user_id, t2.id, t2.list_id0, t2.title_id, t2.title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
            FROM 
            (
                SELECT TOP(1) u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
                FROM users AS u
                WHERE (u.email == @__userName_0) && (u.password == @__password_1)
            ) AS t
            LEFT JOIN 
            (
                SELECT l.list_id, l.list_name, l.user_id, t1.id, t1.list_id AS list_id0, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched
                FROM lists AS l
                LEFT JOIN 
                (
                    SELECT t0.id, t0.list_id, t0.title_id, t3.title_id AS title_id0, t3.cast, t3.country, t3.date_added, t3.description, t3.director, t3.duration, t3.listed_in, t3.rating, t3.release_year, t3.title_name, t3.type, t3.user_rating, t3.watched
                    FROM title_lists AS t0
                    LEFT JOIN titles AS t3 ON t0.title_id == t3.title_id
                ) AS t1 ON l.list_id == t1.list_id
            ) AS t2 ON t.user_id == t2.user_id
            ORDER BY t.user_id ASC, t2.list_id ASC, t2.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, User>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 13:49:59.691 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 13:49:59.703 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2022-07-12 13:49:59.731 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:50:00.111 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:50:00.135 -07:00 [DBG] Executing DbCommand [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:50:00.208 -07:00 [INF] Executed DbCommand (81ms) [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:50:00.259 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:50:00.301 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:50:00.322 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:50:00.335 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:50:00.362 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:50:00.364 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:50:00.364 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:50:00.365 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:50:00.365 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:50:00.382 -07:00 [DBG] A data reader was disposed.
2022-07-12 13:50:00.386 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:50:00.388 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:50:00.517 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 13:50:00.520 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 13:50:00.520 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 13:50:00.520 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 13:50:00.522 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2022-07-12 13:50:00.522 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-07-12 13:50:00.543 -07:00 [INF] Executed action NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API) in 3054.3389ms
2022-07-12 13:50:00.546 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:50:00.551 -07:00 [DBG] Connection id "0HMJ490A39PU4" completed keep alive response.
2022-07-12 13:50:00.568 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57 - 200 - text/plain;+charset=utf-8 3348.5977ms
2022-07-12 13:51:21.030 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/lists application/json 32
2022-07-12 13:51:21.044 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists'
2022-07-12 13:51:21.046 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 13:51:21.046 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 13:51:21.052 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:51:21.147 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:51:21.149 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:51:21.159 -07:00 [DBG] Authorization was successful.
2022-07-12 13:51:21.160 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 13:51:21.173 -07:00 [INF] Route matched with {action = "CreateList", controller = "Lists"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Models.ListDto]] CreateList(NetflixTitles.API.Models.ListForCreationDto) on controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API).
2022-07-12 13:51:21.174 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:51:21.174 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:51:21.174 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:51:21.174 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:51:21.174 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:51:21.175 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 13:51:21.370 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 13:51:21.372 -07:00 [DBG] Attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' ...
2022-07-12 13:51:21.373 -07:00 [DBG] Attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' using the name '' in request data ...
2022-07-12 13:51:21.373 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 13:51:21.374 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 13:51:21.375 -07:00 [DBG] Connection id "0HMJ490A39PU4", Request id "0HMJ490A39PU4:00000003": started reading request body.
2022-07-12 13:51:21.375 -07:00 [DBG] Connection id "0HMJ490A39PU4", Request id "0HMJ490A39PU4:00000003": done reading request body.
2022-07-12 13:51:21.383 -07:00 [DBG] Done attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 13:51:21.383 -07:00 [DBG] Done attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 13:51:21.383 -07:00 [DBG] Attempting to validate the bound parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' ...
2022-07-12 13:51:21.387 -07:00 [DBG] Done attempting to validate the bound parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 13:51:21.487 -07:00 [INF] Executed action NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API) in 312.3433ms
2022-07-12 13:51:21.488 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 13:51:21.490 -07:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.

Mapping types:
ListForCreationDto -> List
NetflixTitles.API.Models.ListForCreationDto -> NetflixTitles.API.Entities.List
   at lambda_method210(Closure , Object , List , ResolutionContext )
   at NetflixTitles.API.Controllers.ListsController.CreateList(ListForCreationDto listForCreationDto) in /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/Controllers/ListsController.cs:line 91
   at lambda_method203(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2022-07-12 13:51:21.529 -07:00 [DBG] Connection id "0HMJ490A39PU4" completed keep alive response.
2022-07-12 13:51:21.532 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/lists application/json 32 - 500 - text/plain;+charset=utf-8 504.0567ms
2022-07-12 13:52:16.067 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 13:52:16.236 -07:00 [DBG] Hosting starting
2022-07-12 13:52:16.269 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 13:52:16.277 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 13:52:16.305 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 13:52:16.325 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 13:52:16.332 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 13:52:16.342 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 13:52:16.342 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 13:52:16.356 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 13:52:16.358 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 13:52:16.563 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 13:52:16.762 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 13:52:16.764 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 13:52:16.764 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 13:52:16.766 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 13:52:16.817 -07:00 [INF] Hosting environment: Development
2022-07-12 13:52:16.868 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 13:52:16.869 -07:00 [DBG] Hosting started
2022-07-12 13:52:19.476 -07:00 [DBG] Connection id "0HMJ491KM1RG9" received FIN.
2022-07-12 13:52:19.495 -07:00 [DBG] Connection id "0HMJ491KM1RG9" accepted.
2022-07-12 13:52:19.498 -07:00 [DBG] Connection id "0HMJ491KM1RG9" started.
2022-07-12 13:52:19.507 -07:00 [DBG] Connection id "0HMJ491KM1RGA" accepted.
2022-07-12 13:52:19.508 -07:00 [DBG] Connection id "0HMJ491KM1RGA" started.
2022-07-12 13:52:19.546 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 13:52:19.729 -07:00 [DBG] Connection id "0HMJ491KM1RG9" stopped.
2022-07-12 13:52:19.868 -07:00 [DBG] Connection id "0HMJ491KM1RG9" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 13:52:19.899 -07:00 [DBG] Connection 0HMJ491KM1RGA established using the following protocol: "Tls12"
2022-07-12 13:52:19.965 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/lists application/json 32
2022-07-12 13:52:19.968 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 13:52:20.033 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists'
2022-07-12 13:52:20.040 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 13:52:20.042 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 13:52:20.076 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:52:20.347 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:52:20.350 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:52:20.361 -07:00 [DBG] Authorization was successful.
2022-07-12 13:52:20.364 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 13:52:20.415 -07:00 [INF] Route matched with {action = "CreateList", controller = "Lists"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Models.ListDto]] CreateList(NetflixTitles.API.Models.ListForCreationDto) on controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API).
2022-07-12 13:52:20.417 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:52:20.418 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:52:20.420 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:52:20.420 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:52:20.421 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:52:20.422 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 13:52:20.818 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-12 13:52:21.733 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-12 13:52:21.928 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 13:52:21.935 -07:00 [DBG] Attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' ...
2022-07-12 13:52:21.941 -07:00 [DBG] Attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' using the name '' in request data ...
2022-07-12 13:52:21.942 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 13:52:21.944 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 13:52:21.951 -07:00 [DBG] Connection id "0HMJ491KM1RGA", Request id "0HMJ491KM1RGA:00000002": started reading request body.
2022-07-12 13:52:21.952 -07:00 [DBG] Connection id "0HMJ491KM1RGA", Request id "0HMJ491KM1RGA:00000002": done reading request body.
2022-07-12 13:52:22.057 -07:00 [DBG] Done attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 13:52:22.058 -07:00 [DBG] Done attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 13:52:22.058 -07:00 [DBG] Attempting to validate the bound parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' ...
2022-07-12 13:52:22.076 -07:00 [DBG] Done attempting to validate the bound parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 13:52:22.195 -07:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Where(u => u.UserId == __userId_0)
    .Include(u => u.Lists)
    .ThenInclude(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-12 13:52:22.246 -07:00 [DBG] Including navigation: 'User.Lists'.
2022-07-12 13:52:22.281 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-12 13:52:22.289 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-12 13:52:22.569 -07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2022-07-12 13:52:22.592 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: new SingleQueryingEnumerable<User>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 1], [Property: User.Email (string) Required MaxLength(255), 2], [Property: User.Password (string) Required MaxLength(255), 3], [Property: User.UserName (string) Required MaxLength(255), 4], [Property: User.UserType (string), 5] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: List.ListName (string) Required MaxLength(255), 7], [Property: List.UserId (int?) FK Index, 8] }
                3 -> 6
                4 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: TitleList.ListId (int?) FK Index, 10], [Property: TitleList.TitleId (int?) FK Index, 11] }
                5 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 12], [Property: Title.Cast (string), 13], [Property: Title.Country (string) MaxLength(255), 14], [Property: Title.DateAdded (DateOnly?), 15], [Property: Title.Description (string) Required, 16], [Property: Title.Director (string) MaxLength(255), 17], [Property: Title.Duration (string) MaxLength(255), 18], [Property: Title.ListedIn (string) Required MaxLength(255), 19], [Property: Title.Rating (string) MaxLength(255), 20], [Property: Title.ReleaseYear (short?), 21], [Property: Title.TitleName (string) Required MaxLength(255), 22], [Property: Title.Type (string), 23], [Property: Title.UserRating (int?), 24], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 25] }
                6 -> 9
                7 -> 12
            SELECT t.user_id, t.date_created, t.email, t.password, t.user_name, t.user_type, t2.list_id, t2.list_name, t2.user_id, t2.id, t2.list_id0, t2.title_id, t2.title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
            FROM 
            (
                SELECT TOP(1) u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
                FROM users AS u
                WHERE u.user_id == @__userId_0
            ) AS t
            LEFT JOIN 
            (
                SELECT l.list_id, l.list_name, l.user_id, t1.id, t1.list_id AS list_id0, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched
                FROM lists AS l
                LEFT JOIN 
                (
                    SELECT t0.id, t0.list_id, t0.title_id, t3.title_id AS title_id0, t3.cast, t3.country, t3.date_added, t3.description, t3.director, t3.duration, t3.listed_in, t3.rating, t3.release_year, t3.title_name, t3.type, t3.user_rating, t3.watched
                    FROM title_lists AS t0
                    LEFT JOIN titles AS t3 ON t0.title_id == t3.title_id
                ) AS t1 ON l.list_id == t1.list_id
            ) AS t2 ON t.user_id == t2.user_id
            ORDER BY t.user_id ASC, t2.list_id ASC, t2.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, User>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 13:52:22.645 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 13:52:22.656 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2022-07-12 13:52:22.683 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:52:23.330 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:52:23.361 -07:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE `u`.`user_id` = @__userId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:52:23.435 -07:00 [INF] Executed DbCommand (87ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE `u`.`user_id` = @__userId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:52:23.484 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:52:23.526 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:52:23.545 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:52:23.556 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:52:23.583 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:52:23.584 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:52:23.600 -07:00 [DBG] A data reader was disposed.
2022-07-12 13:52:23.604 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:52:23.606 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:52:23.630 -07:00 [DBG] 'netflix_appContext' generated a temporary value for the property 'ListId.List'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:52:23.643 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:52:23.648 -07:00 [DBG] SaveChanges starting for 'netflix_appContext'.
2022-07-12 13:52:23.651 -07:00 [DBG] DetectChanges starting for 'netflix_appContext'.
2022-07-12 13:52:23.680 -07:00 [DBG] DetectChanges completed for 'netflix_appContext'.
2022-07-12 13:52:23.697 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:52:23.707 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:52:23.709 -07:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2022-07-12 13:52:23.785 -07:00 [DBG] Began transaction with isolation level 'Unspecified'.
2022-07-12 13:52:23.849 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 13:52:23.850 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 13:52:23.853 -07:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 255), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `lists` (`list_name`, `user_id`)
VALUES (@p0, @p1);
SELECT `list_id`
FROM `lists`
WHERE ROW_COUNT() = 1 AND `list_id` = LAST_INSERT_ID();
2022-07-12 13:52:23.966 -07:00 [INF] Executed DbCommand (88ms) [Parameters=[@p0='?' (Size = 255), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `lists` (`list_name`, `user_id`)
VALUES (@p0, @p1);
SELECT `list_id`
FROM `lists`
WHERE ROW_COUNT() = 1 AND `list_id` = LAST_INSERT_ID();
2022-07-12 13:52:23.993 -07:00 [DBG] The foreign key property 'List.ListId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2022-07-12 13:52:24.002 -07:00 [DBG] A data reader was disposed.
2022-07-12 13:52:24.006 -07:00 [DBG] Committing transaction.
2022-07-12 13:52:24.015 -07:00 [DBG] Committed transaction.
2022-07-12 13:52:24.018 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:52:24.018 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:52:24.020 -07:00 [DBG] Disposing transaction.
2022-07-12 13:52:24.034 -07:00 [DBG] An entity of type 'List' tracked by 'netflix_appContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:52:24.037 -07:00 [DBG] SaveChanges completed for 'netflix_appContext' with 1 entities written to the database.
2022-07-12 13:52:24.047 -07:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2022-07-12 13:52:24.053 -07:00 [INF] Executed action NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API) in 3627.8641ms
2022-07-12 13:52:24.056 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 13:52:24.064 -07:00 [DBG] Connection id "0HMJ491KM1RGA" completed keep alive response.
2022-07-12 13:52:24.080 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/lists application/json 32 - 200 0 - 4119.1450ms
2022-07-12 13:52:32.594 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists application/json 32
2022-07-12 13:52:32.601 -07:00 [DBG] 2 candidate(s) found for the request path '/api/lists'
2022-07-12 13:52:32.601 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 13:52:32.601 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 13:52:32.602 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)'
2022-07-12 13:52:32.622 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:52:32.636 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:52:32.637 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:52:32.640 -07:00 [DBG] Authorization was successful.
2022-07-12 13:52:32.641 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)'
2022-07-12 13:52:32.657 -07:00 [INF] Route matched with {action = "GetLists", controller = "Lists"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Models.ListWithoutTitlesDto]]] GetLists() on controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API).
2022-07-12 13:52:32.658 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:52:32.658 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:52:32.659 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:52:32.659 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:52:32.659 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:52:32.659 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 13:52:32.661 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 13:52:32.687 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .OrderBy(l => l.ListId)
    .Where(l => l.UserId.ToString() == __claimId_0)
    .Include(l => l.User)'
2022-07-12 13:52:32.697 -07:00 [DBG] Including navigation: 'List.User'.
2022-07-12 13:52:32.733 -07:00 [DBG] Generated query execution expression: 
'queryContext => new SingleQueryingEnumerable<List>(
    (RelationalQueryContext)queryContext, 
    RelationalCommandCache.SelectExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: List.ListName (string) Required MaxLength(255), 1], [Property: List.UserId (int?) FK Index, 2] }
            1 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 3], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 4], [Property: User.Email (string) Required MaxLength(255), 5], [Property: User.Password (string) Required MaxLength(255), 6], [Property: User.UserName (string) Required MaxLength(255), 7], [Property: User.UserType (string), 8] }
        SELECT l.list_id, l.list_name, l.user_id, u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
        FROM lists AS l
        LEFT JOIN users AS u ON l.user_id == u.user_id
        WHERE CAST(l.user_id AS longtext) == @__claimId_0
        ORDER BY l.list_id ASC), 
    Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, List>, 
    NetflixTitles.API.DbContexts.netflix_appContext, 
    False, 
    False, 
    True
)'
2022-07-12 13:52:32.747 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 13:52:32.748 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 13:52:32.750 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:52:32.755 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:52:32.756 -07:00 [DBG] Executing DbCommand [Parameters=[@__claimId_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
FROM `lists` AS `l`
LEFT JOIN `users` AS `u` ON `l`.`user_id` = `u`.`user_id`
WHERE CAST(`l`.`user_id` AS char) = @__claimId_0
ORDER BY `l`.`list_id`
2022-07-12 13:52:32.832 -07:00 [INF] Executed DbCommand (77ms) [Parameters=[@__claimId_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
FROM `lists` AS `l`
LEFT JOIN `users` AS `u` ON `l`.`user_id` = `u`.`user_id`
WHERE CAST(`l`.`user_id` AS char) = @__claimId_0
ORDER BY `l`.`list_id`
2022-07-12 13:52:32.834 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:52:32.835 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:52:32.838 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:52:32.838 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:52:32.838 -07:00 [DBG] A data reader was disposed.
2022-07-12 13:52:32.839 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:52:32.839 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:52:32.864 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 13:52:32.867 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 13:52:32.867 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 13:52:32.867 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 13:52:32.869 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-12 13:52:32.869 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[NetflixTitles.API.Models.ListWithoutTitlesDto, NetflixTitles.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-07-12 13:52:32.944 -07:00 [INF] Executed action NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API) in 284.4528ms
2022-07-12 13:52:32.944 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)'
2022-07-12 13:52:32.944 -07:00 [DBG] Connection id "0HMJ491KM1RGA" completed keep alive response.
2022-07-12 13:52:32.946 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists application/json 32 - 200 172 application/json;+charset=utf-8 353.2195ms
2022-07-12 13:52:32.946 -07:00 [DBG] Connection id "0HMJ491KM1RGA", Request id "0HMJ491KM1RGA:00000003": started reading request body.
2022-07-12 13:52:32.947 -07:00 [DBG] Connection id "0HMJ491KM1RGA", Request id "0HMJ491KM1RGA:00000003": done reading request body.
2022-07-12 13:53:01.291 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 59
2022-07-12 13:53:01.293 -07:00 [DBG] 1 candidate(s) found for the request path '/api/authentication/authenticate'
2022-07-12 13:53:01.294 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)' with route pattern 'api/authentication/authenticate' is valid for the request path '/api/authentication/authenticate'
2022-07-12 13:53:01.294 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:53:01.300 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:53:01.305 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 13:53:01.307 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:53:01.319 -07:00 [INF] Route matched with {action = "Authenticate", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] Authenticate(AuthenticationRequestBody) on controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API).
2022-07-12 13:53:01.319 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:53:01.319 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:53:01.319 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:53:01.319 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:53:01.319 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:53:01.319 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 13:53:01.323 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 13:53:01.324 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 13:53:01.326 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' using the name '' in request data ...
2022-07-12 13:53:01.326 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 13:53:01.326 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 13:53:01.327 -07:00 [DBG] Connection id "0HMJ491KM1RGA", Request id "0HMJ491KM1RGA:00000004": started reading request body.
2022-07-12 13:53:01.327 -07:00 [DBG] Connection id "0HMJ491KM1RGA", Request id "0HMJ491KM1RGA:00000004": done reading request body.
2022-07-12 13:53:01.338 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:53:01.339 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:53:01.339 -07:00 [DBG] Attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 13:53:01.343 -07:00 [DBG] Done attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 13:53:01.353 -07:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Where(u => u.Email == __userName_0)
    .Where(u => u.Password == __password_1)
    .Include(u => u.Lists)
    .ThenInclude(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-12 13:53:01.356 -07:00 [DBG] Including navigation: 'User.Lists'.
2022-07-12 13:53:01.357 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-12 13:53:01.357 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-12 13:53:01.378 -07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2022-07-12 13:53:01.395 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: new SingleQueryingEnumerable<User>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 1], [Property: User.Email (string) Required MaxLength(255), 2], [Property: User.Password (string) Required MaxLength(255), 3], [Property: User.UserName (string) Required MaxLength(255), 4], [Property: User.UserType (string), 5] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: List.ListName (string) Required MaxLength(255), 7], [Property: List.UserId (int?) FK Index, 8] }
                3 -> 6
                4 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: TitleList.ListId (int?) FK Index, 10], [Property: TitleList.TitleId (int?) FK Index, 11] }
                5 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 12], [Property: Title.Cast (string), 13], [Property: Title.Country (string) MaxLength(255), 14], [Property: Title.DateAdded (DateOnly?), 15], [Property: Title.Description (string) Required, 16], [Property: Title.Director (string) MaxLength(255), 17], [Property: Title.Duration (string) MaxLength(255), 18], [Property: Title.ListedIn (string) Required MaxLength(255), 19], [Property: Title.Rating (string) MaxLength(255), 20], [Property: Title.ReleaseYear (short?), 21], [Property: Title.TitleName (string) Required MaxLength(255), 22], [Property: Title.Type (string), 23], [Property: Title.UserRating (int?), 24], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 25] }
                6 -> 9
                7 -> 12
            SELECT t.user_id, t.date_created, t.email, t.password, t.user_name, t.user_type, t2.list_id, t2.list_name, t2.user_id, t2.id, t2.list_id0, t2.title_id, t2.title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
            FROM 
            (
                SELECT TOP(1) u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
                FROM users AS u
                WHERE (u.email == @__userName_0) && (u.password == @__password_1)
            ) AS t
            LEFT JOIN 
            (
                SELECT l.list_id, l.list_name, l.user_id, t1.id, t1.list_id AS list_id0, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched
                FROM lists AS l
                LEFT JOIN 
                (
                    SELECT t0.id, t0.list_id, t0.title_id, t3.title_id AS title_id0, t3.cast, t3.country, t3.date_added, t3.description, t3.director, t3.duration, t3.listed_in, t3.rating, t3.release_year, t3.title_name, t3.type, t3.user_rating, t3.watched
                    FROM title_lists AS t0
                    LEFT JOIN titles AS t3 ON t0.title_id == t3.title_id
                ) AS t1 ON l.list_id == t1.list_id
            ) AS t2 ON t.user_id == t2.user_id
            ORDER BY t.user_id ASC, t2.list_id ASC, t2.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, User>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 13:53:01.402 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 13:53:01.402 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 13:53:01.403 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:53:01.454 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:53:01.455 -07:00 [DBG] Executing DbCommand [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:53:01.831 -07:00 [INF] Executed DbCommand (322ms) [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:53:01.936 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:01.940 -07:00 [DBG] A data reader was disposed.
2022-07-12 13:53:01.941 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:53:01.941 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:53:01.986 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 13:53:01.986 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 13:53:01.986 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 13:53:01.986 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 13:53:01.987 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2022-07-12 13:53:01.987 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-07-12 13:53:01.992 -07:00 [INF] Executed action NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API) in 672.3029ms
2022-07-12 13:53:01.992 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 13:53:01.993 -07:00 [DBG] Connection id "0HMJ491KM1RGA" completed keep alive response.
2022-07-12 13:53:01.994 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 59 - 200 - text/plain;+charset=utf-8 704.3456ms
2022-07-12 13:53:15.170 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/users - -
2022-07-12 13:53:15.172 -07:00 [DBG] 1 candidate(s) found for the request path '/api/users'
2022-07-12 13:53:15.173 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)' with route pattern 'api/users' is valid for the request path '/api/users'
2022-07-12 13:53:15.174 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:53:15.176 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:53:15.182 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:53:15.183 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:53:15.185 -07:00 [DBG] Authorization was successful.
2022-07-12 13:53:15.185 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:53:15.191 -07:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Entities.User]]] GetUsers() on controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API).
2022-07-12 13:53:15.191 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:53:15.191 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:53:15.191 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:53:15.192 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:53:15.192 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:53:15.192 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:53:15.193 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:53:15.201 -07:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .OrderBy(u => u.UserId)'
2022-07-12 13:53:15.217 -07:00 [DBG] Generated query execution expression: 
'queryContext => new SingleQueryingEnumerable<User>(
    (RelationalQueryContext)queryContext, 
    RelationalCommandCache.SelectExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 1], [Property: User.Email (string) Required MaxLength(255), 2], [Property: User.Password (string) Required MaxLength(255), 3], [Property: User.UserName (string) Required MaxLength(255), 4], [Property: User.UserType (string), 5] }
        SELECT u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
        FROM users AS u
        ORDER BY u.user_id ASC), 
    Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, User>, 
    NetflixTitles.API.DbContexts.netflix_appContext, 
    False, 
    False, 
    True
)'
2022-07-12 13:53:15.219 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 13:53:15.219 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 13:53:15.219 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:53:15.221 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:53:15.221 -07:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
FROM `users` AS `u`
ORDER BY `u`.`user_id`
2022-07-12 13:53:15.269 -07:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
FROM `users` AS `u`
ORDER BY `u`.`user_id`
2022-07-12 13:53:15.270 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:15.270 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:15.270 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:15.271 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:15.271 -07:00 [DBG] A data reader was disposed.
2022-07-12 13:53:15.271 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:53:15.271 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:53:15.283 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 13:53:15.284 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 13:53:15.284 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 13:53:15.284 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 13:53:15.284 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-12 13:53:15.284 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[NetflixTitles.API.Models.UserWithoutListsDto, NetflixTitles.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-07-12 13:53:15.297 -07:00 [INF] Executed action NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API) in 105.5036ms
2022-07-12 13:53:15.298 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.UserController.GetUsers (NetflixTitles.API)'
2022-07-12 13:53:15.298 -07:00 [DBG] Connection id "0HMJ491KM1RGA" completed keep alive response.
2022-07-12 13:53:15.298 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/users - - - 200 457 application/json;+charset=utf-8 128.6044ms
2022-07-12 13:53:20.252 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/users/4 - -
2022-07-12 13:53:20.253 -07:00 [DBG] 1 candidate(s) found for the request path '/api/users/4'
2022-07-12 13:53:20.256 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)' with route pattern 'api/users/{id}' is valid for the request path '/api/users/4'
2022-07-12 13:53:20.256 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)'
2022-07-12 13:53:20.257 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 13:53:20.260 -07:00 [DBG] Successfully validated the token.
2022-07-12 13:53:20.260 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 13:53:20.261 -07:00 [DBG] Authorization was successful.
2022-07-12 13:53:20.261 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)'
2022-07-12 13:53:20.276 -07:00 [INF] Route matched with {action = "GetUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Entities.User]] GetUser(Int32) on controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API).
2022-07-12 13:53:20.282 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 13:53:20.283 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 13:53:20.283 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 13:53:20.283 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 13:53:20.283 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 13:53:20.283 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:53:20.283 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.UserController (NetflixTitles.API)
2022-07-12 13:53:20.283 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2022-07-12 13:53:20.284 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2022-07-12 13:53:20.287 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-12 13:53:20.287 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-12 13:53:20.287 -07:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2022-07-12 13:53:20.288 -07:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2022-07-12 13:53:20.293 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 13:53:20.293 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 13:53:20.294 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:53:20.415 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:53:20.416 -07:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE `u`.`user_id` = @__userId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:53:20.440 -07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE `u`.`user_id` = @__userId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 13:53:20.442 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:20.444 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:20.446 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:20.447 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:20.448 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:20.448 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:20.448 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:20.448 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:20.448 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:20.448 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 13:53:20.449 -07:00 [DBG] A data reader was disposed.
2022-07-12 13:53:20.449 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:53:20.449 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 13:53:20.479 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 13:53:20.480 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 13:53:20.480 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 13:53:20.480 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 13:53:20.480 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-12 13:53:20.480 -07:00 [INF] Executing OkObjectResult, writing value of type 'NetflixTitles.API.Models.UserDto'.
2022-07-12 13:53:20.517 -07:00 [INF] Executed action NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API) in 233.9793ms
2022-07-12 13:53:20.517 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)'
2022-07-12 13:53:20.517 -07:00 [DBG] Connection id "0HMJ491KM1RGA" completed keep alive response.
2022-07-12 13:53:20.518 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/users/4 - - - 200 2067 application/json;+charset=utf-8 266.9692ms
2022-07-12 16:59:42.726 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 16:59:42.891 -07:00 [DBG] Hosting starting
2022-07-12 16:59:42.930 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 16:59:42.939 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 16:59:42.966 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 16:59:42.988 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 16:59:42.994 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 16:59:43.004 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 16:59:43.004 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 16:59:43.018 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 16:59:43.020 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 16:59:43.232 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 16:59:43.456 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 16:59:43.459 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 16:59:43.459 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 16:59:43.462 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 16:59:43.462 -07:00 [INF] Hosting environment: Development
2022-07-12 16:59:43.462 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 16:59:43.462 -07:00 [DBG] Hosting started
2022-07-12 16:59:49.839 -07:00 [DBG] Connection id "0HMJ4CADHRUMV" received FIN.
2022-07-12 16:59:49.858 -07:00 [DBG] Connection id "0HMJ4CADHRUMV" accepted.
2022-07-12 16:59:49.861 -07:00 [DBG] Connection id "0HMJ4CADHRUMV" started.
2022-07-12 16:59:49.891 -07:00 [DBG] Connection id "0HMJ4CADHRUN0" accepted.
2022-07-12 16:59:49.893 -07:00 [DBG] Connection id "0HMJ4CADHRUN0" started.
2022-07-12 16:59:49.959 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 16:59:50.055 -07:00 [DBG] Connection id "0HMJ4CADHRUMV" stopped.
2022-07-12 16:59:50.112 -07:00 [DBG] Connection id "0HMJ4CADHRUMV" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 16:59:50.360 -07:00 [DBG] Connection 0HMJ4CADHRUN0 established using the following protocol: "Tls12"
2022-07-12 16:59:50.428 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57
2022-07-12 16:59:50.432 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 16:59:50.488 -07:00 [DBG] 1 candidate(s) found for the request path '/api/authentication/authenticate'
2022-07-12 16:59:50.494 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)' with route pattern 'api/authentication/authenticate' is valid for the request path '/api/authentication/authenticate'
2022-07-12 16:59:50.496 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 16:59:50.529 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 16:59:50.591 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 16:59:50.595 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 16:59:50.646 -07:00 [INF] Route matched with {action = "Authenticate", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] Authenticate(AuthenticationRequestBody) on controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API).
2022-07-12 16:59:50.648 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 16:59:50.649 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 16:59:50.650 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 16:59:50.650 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 16:59:50.651 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 16:59:50.652 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 16:59:51.069 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-12 16:59:51.982 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-12 16:59:51.988 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 16:59:51.996 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 16:59:52.001 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' using the name '' in request data ...
2022-07-12 16:59:52.002 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 16:59:52.004 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 16:59:52.012 -07:00 [DBG] Connection id "0HMJ4CADHRUN0", Request id "0HMJ4CADHRUN0:00000002": started reading request body.
2022-07-12 16:59:52.013 -07:00 [DBG] Connection id "0HMJ4CADHRUN0", Request id "0HMJ4CADHRUN0:00000002": done reading request body.
2022-07-12 16:59:52.148 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 16:59:52.148 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 16:59:52.148 -07:00 [DBG] Attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 16:59:52.169 -07:00 [DBG] Done attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 16:59:52.268 -07:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Where(u => u.Email == __userName_0)
    .Where(u => u.Password == __password_1)
    .Include(u => u.Lists)
    .ThenInclude(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-12 16:59:52.320 -07:00 [DBG] Including navigation: 'User.Lists'.
2022-07-12 16:59:52.358 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-12 16:59:52.366 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-12 16:59:52.672 -07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2022-07-12 16:59:52.694 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: new SingleQueryingEnumerable<User>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 1], [Property: User.Email (string) Required MaxLength(255), 2], [Property: User.Password (string) Required MaxLength(255), 3], [Property: User.UserName (string) Required MaxLength(255), 4], [Property: User.UserType (string), 5] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: List.ListName (string) Required MaxLength(255), 7], [Property: List.UserId (int?) FK Index, 8] }
                3 -> 6
                4 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: TitleList.ListId (int?) FK Index, 10], [Property: TitleList.TitleId (int?) FK Index, 11] }
                5 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 12], [Property: Title.Cast (string), 13], [Property: Title.Country (string) MaxLength(255), 14], [Property: Title.DateAdded (DateOnly?), 15], [Property: Title.Description (string) Required, 16], [Property: Title.Director (string) MaxLength(255), 17], [Property: Title.Duration (string) MaxLength(255), 18], [Property: Title.ListedIn (string) Required MaxLength(255), 19], [Property: Title.Rating (string) MaxLength(255), 20], [Property: Title.ReleaseYear (short?), 21], [Property: Title.TitleName (string) Required MaxLength(255), 22], [Property: Title.Type (string), 23], [Property: Title.UserRating (int?), 24], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 25] }
                6 -> 9
                7 -> 12
            SELECT t.user_id, t.date_created, t.email, t.password, t.user_name, t.user_type, t2.list_id, t2.list_name, t2.user_id, t2.id, t2.list_id0, t2.title_id, t2.title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
            FROM 
            (
                SELECT TOP(1) u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
                FROM users AS u
                WHERE (u.email == @__userName_0) && (u.password == @__password_1)
            ) AS t
            LEFT JOIN 
            (
                SELECT l.list_id, l.list_name, l.user_id, t1.id, t1.list_id AS list_id0, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched
                FROM lists AS l
                LEFT JOIN 
                (
                    SELECT t0.id, t0.list_id, t0.title_id, t3.title_id AS title_id0, t3.cast, t3.country, t3.date_added, t3.description, t3.director, t3.duration, t3.listed_in, t3.rating, t3.release_year, t3.title_name, t3.type, t3.user_rating, t3.watched
                    FROM title_lists AS t0
                    LEFT JOIN titles AS t3 ON t0.title_id == t3.title_id
                ) AS t1 ON l.list_id == t1.list_id
            ) AS t2 ON t.user_id == t2.user_id
            ORDER BY t.user_id ASC, t2.list_id ASC, t2.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, User>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 16:59:52.749 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 16:59:52.760 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2022-07-12 16:59:52.787 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 16:59:53.409 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 16:59:53.433 -07:00 [DBG] Executing DbCommand [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 16:59:53.504 -07:00 [INF] Executed DbCommand (79ms) [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 16:59:53.551 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 16:59:53.592 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 16:59:53.610 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 16:59:53.622 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 16:59:53.648 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 16:59:53.649 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 16:59:53.650 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 16:59:53.651 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 16:59:53.651 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 16:59:53.665 -07:00 [DBG] A data reader was disposed.
2022-07-12 16:59:53.669 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 16:59:53.671 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 16:59:53.792 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 16:59:53.795 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 16:59:53.795 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 16:59:53.796 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 16:59:53.797 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2022-07-12 16:59:53.797 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-07-12 16:59:53.813 -07:00 [INF] Executed action NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API) in 3156.8851ms
2022-07-12 16:59:53.816 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 16:59:53.821 -07:00 [DBG] Connection id "0HMJ4CADHRUN0" completed keep alive response.
2022-07-12 16:59:53.837 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57 - 200 - text/plain;+charset=utf-8 3413.0783ms
2022-07-12 17:00:05.991 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/lists application/json 32
2022-07-12 17:00:06.003 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists'
2022-07-12 17:00:06.003 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 17:00:06.003 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 17:00:06.006 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 17:00:06.110 -07:00 [DBG] Successfully validated the token.
2022-07-12 17:00:06.113 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 17:00:06.125 -07:00 [DBG] Authorization was successful.
2022-07-12 17:00:06.127 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 17:00:06.142 -07:00 [INF] Route matched with {action = "CreateList", controller = "Lists"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Models.ListDto]] CreateList(NetflixTitles.API.Models.ListForCreationDto) on controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API).
2022-07-12 17:00:06.143 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 17:00:06.143 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 17:00:06.143 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 17:00:06.143 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 17:00:06.143 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 17:00:06.144 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 17:00:06.339 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 17:00:06.341 -07:00 [DBG] Attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' ...
2022-07-12 17:00:06.342 -07:00 [DBG] Attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' using the name '' in request data ...
2022-07-12 17:00:06.342 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 17:00:06.342 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 17:00:06.343 -07:00 [DBG] Connection id "0HMJ4CADHRUN0", Request id "0HMJ4CADHRUN0:00000003": started reading request body.
2022-07-12 17:00:06.343 -07:00 [DBG] Connection id "0HMJ4CADHRUN0", Request id "0HMJ4CADHRUN0:00000003": done reading request body.
2022-07-12 17:00:06.352 -07:00 [DBG] Done attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 17:00:06.352 -07:00 [DBG] Done attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 17:00:06.352 -07:00 [DBG] Attempting to validate the bound parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' ...
2022-07-12 17:00:06.356 -07:00 [DBG] Done attempting to validate the bound parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 17:00:06.413 -07:00 [DBG] 'netflix_appContext' generated a temporary value for the property 'ListId.List'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 17:00:06.427 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 17:00:06.433 -07:00 [DBG] SaveChanges starting for 'netflix_appContext'.
2022-07-12 17:00:06.437 -07:00 [DBG] DetectChanges starting for 'netflix_appContext'.
2022-07-12 17:00:06.446 -07:00 [DBG] DetectChanges completed for 'netflix_appContext'.
2022-07-12 17:00:06.464 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 17:00:06.471 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 17:00:06.474 -07:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2022-07-12 17:00:06.493 -07:00 [DBG] Began transaction with isolation level 'Unspecified'.
2022-07-12 17:00:06.557 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 17:00:06.558 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 17:00:06.561 -07:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 255), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `lists` (`list_name`, `user_id`)
VALUES (@p0, @p1);
SELECT `list_id`
FROM `lists`
WHERE ROW_COUNT() = 1 AND `list_id` = LAST_INSERT_ID();
2022-07-12 17:00:06.647 -07:00 [INF] Executed DbCommand (64ms) [Parameters=[@p0='?' (Size = 255), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `lists` (`list_name`, `user_id`)
VALUES (@p0, @p1);
SELECT `list_id`
FROM `lists`
WHERE ROW_COUNT() = 1 AND `list_id` = LAST_INSERT_ID();
2022-07-12 17:00:06.783 -07:00 [DBG] The foreign key property 'List.ListId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2022-07-12 17:00:06.792 -07:00 [DBG] A data reader was disposed.
2022-07-12 17:00:06.798 -07:00 [DBG] Committing transaction.
2022-07-12 17:00:06.835 -07:00 [DBG] Committed transaction.
2022-07-12 17:00:06.838 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 17:00:06.839 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 17:00:06.841 -07:00 [DBG] Disposing transaction.
2022-07-12 17:00:06.857 -07:00 [DBG] An entity of type 'List' tracked by 'netflix_appContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 17:00:06.860 -07:00 [DBG] SaveChanges completed for 'netflix_appContext' with 1 entities written to the database.
2022-07-12 17:00:06.866 -07:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2022-07-12 17:00:06.867 -07:00 [INF] Executed action NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API) in 723.242ms
2022-07-12 17:00:06.867 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 17:00:06.869 -07:00 [DBG] Connection id "0HMJ4CADHRUN0" completed keep alive response.
2022-07-12 17:00:06.871 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/lists application/json 32 - 200 0 - 882.6063ms
2022-07-12 17:00:16.061 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists - -
2022-07-12 17:00:16.062 -07:00 [DBG] 2 candidate(s) found for the request path '/api/lists'
2022-07-12 17:00:16.062 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 17:00:16.063 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 17:00:16.063 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)'
2022-07-12 17:00:16.072 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 17:00:16.075 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 17:00:16.079 -07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2022-07-12 17:00:16.087 -07:00 [INF] AuthenticationScheme: Bearer was challenged.
2022-07-12 17:00:16.087 -07:00 [DBG] Connection id "0HMJ4CADHRUN0" completed keep alive response.
2022-07-12 17:00:16.088 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists - - - 401 0 - 26.7612ms
2022-07-12 17:00:23.457 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists - -
2022-07-12 17:00:23.458 -07:00 [DBG] 2 candidate(s) found for the request path '/api/lists'
2022-07-12 17:00:23.459 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 17:00:23.459 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 17:00:23.460 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)'
2022-07-12 17:00:23.461 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 17:00:23.474 -07:00 [DBG] Successfully validated the token.
2022-07-12 17:00:23.474 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 17:00:23.476 -07:00 [DBG] Authorization was successful.
2022-07-12 17:00:23.476 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)'
2022-07-12 17:00:23.481 -07:00 [INF] Route matched with {action = "GetLists", controller = "Lists"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Models.ListWithoutTitlesDto]]] GetLists() on controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API).
2022-07-12 17:00:23.481 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 17:00:23.481 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 17:00:23.481 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 17:00:23.481 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 17:00:23.481 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 17:00:23.481 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 17:00:23.484 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 17:00:23.500 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .OrderBy(l => l.ListId)
    .Where(l => l.UserId.ToString() == __claimId_0)
    .Include(l => l.User)'
2022-07-12 17:00:23.510 -07:00 [DBG] Including navigation: 'List.User'.
2022-07-12 17:00:23.537 -07:00 [DBG] Generated query execution expression: 
'queryContext => new SingleQueryingEnumerable<List>(
    (RelationalQueryContext)queryContext, 
    RelationalCommandCache.SelectExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: List.ListName (string) Required MaxLength(255), 1], [Property: List.UserId (int?) FK Index, 2] }
            1 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 3], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 4], [Property: User.Email (string) Required MaxLength(255), 5], [Property: User.Password (string) Required MaxLength(255), 6], [Property: User.UserName (string) Required MaxLength(255), 7], [Property: User.UserType (string), 8] }
        SELECT l.list_id, l.list_name, l.user_id, u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
        FROM lists AS l
        LEFT JOIN users AS u ON l.user_id == u.user_id
        WHERE CAST(l.user_id AS longtext) == @__claimId_0
        ORDER BY l.list_id ASC), 
    Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, List>, 
    NetflixTitles.API.DbContexts.netflix_appContext, 
    False, 
    False, 
    True
)'
2022-07-12 17:00:23.549 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 17:00:23.549 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 17:00:23.550 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 17:00:23.552 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 17:00:23.552 -07:00 [DBG] Executing DbCommand [Parameters=[@__claimId_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
FROM `lists` AS `l`
LEFT JOIN `users` AS `u` ON `l`.`user_id` = `u`.`user_id`
WHERE CAST(`l`.`user_id` AS char) = @__claimId_0
ORDER BY `l`.`list_id`
2022-07-12 17:00:23.706 -07:00 [INF] Executed DbCommand (129ms) [Parameters=[@__claimId_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
FROM `lists` AS `l`
LEFT JOIN `users` AS `u` ON `l`.`user_id` = `u`.`user_id`
WHERE CAST(`l`.`user_id` AS char) = @__claimId_0
ORDER BY `l`.`list_id`
2022-07-12 17:00:23.737 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 17:00:23.773 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 17:00:23.942 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 17:00:23.944 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 17:00:23.945 -07:00 [DBG] A data reader was disposed.
2022-07-12 17:00:23.946 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 17:00:23.948 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 17:00:23.992 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 17:00:23.993 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 17:00:23.993 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 17:00:23.993 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 17:00:23.994 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-12 17:00:23.994 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[NetflixTitles.API.Models.ListWithoutTitlesDto, NetflixTitles.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-07-12 17:00:24.064 -07:00 [INF] Executed action NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API) in 582.8636ms
2022-07-12 17:00:24.064 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)'
2022-07-12 17:00:24.065 -07:00 [DBG] Connection id "0HMJ4CADHRUN0" completed keep alive response.
2022-07-12 17:00:24.065 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists - - - 200 172 application/json;+charset=utf-8 610.6667ms
2022-07-12 22:07:06.428 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 22:07:06.589 -07:00 [DBG] Hosting starting
2022-07-12 22:07:06.619 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 22:07:06.628 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 22:07:06.653 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 22:07:06.672 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 22:07:06.679 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 22:07:06.688 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 22:07:06.688 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 22:07:06.700 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 22:07:06.702 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 22:07:06.903 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 22:07:07.045 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 22:07:07.046 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 22:07:07.047 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 22:07:07.048 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 22:07:07.049 -07:00 [INF] Hosting environment: Development
2022-07-12 22:07:07.049 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 22:07:07.050 -07:00 [DBG] Hosting started
2022-07-12 22:07:11.991 -07:00 [DBG] Connection id "0HMJ4HM5NUE65" received FIN.
2022-07-12 22:07:12.013 -07:00 [DBG] Connection id "0HMJ4HM5NUE65" accepted.
2022-07-12 22:07:12.016 -07:00 [DBG] Connection id "0HMJ4HM5NUE65" started.
2022-07-12 22:07:12.025 -07:00 [DBG] Connection id "0HMJ4HM5NUE66" accepted.
2022-07-12 22:07:12.026 -07:00 [DBG] Connection id "0HMJ4HM5NUE66" started.
2022-07-12 22:07:12.090 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 22:07:12.131 -07:00 [DBG] Connection id "0HMJ4HM5NUE65" stopped.
2022-07-12 22:07:12.185 -07:00 [DBG] Connection id "0HMJ4HM5NUE65" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 22:07:12.404 -07:00 [DBG] Connection 0HMJ4HM5NUE66 established using the following protocol: "Tls12"
2022-07-12 22:07:12.468 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists - -
2022-07-12 22:07:12.472 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 22:07:12.560 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists'
2022-07-12 22:07:12.567 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 22:07:12.570 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)'
2022-07-12 22:07:12.625 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 22:07:12.885 -07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '07/13/2022 00:59:53', Current time: '07/13/2022 05:07:12'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2022-07-12 22:07:12.890 -07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '07/13/2022 00:59:53', Current time: '07/13/2022 05:07:12'.
2022-07-12 22:07:12.903 -07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2022-07-12 22:07:12.916 -07:00 [INF] AuthenticationScheme: Bearer was challenged.
2022-07-12 22:07:12.922 -07:00 [DBG] Connection id "0HMJ4HM5NUE66" completed keep alive response.
2022-07-12 22:07:12.928 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists - - - 401 0 - 463.1034ms
2022-07-12 22:07:21.353 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/lists application/json 32
2022-07-12 22:07:21.358 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists'
2022-07-12 22:07:21.359 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 22:07:21.359 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 22:07:21.362 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 22:07:21.376 -07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '07/13/2022 00:59:53', Current time: '07/13/2022 05:07:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2022-07-12 22:07:21.378 -07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '07/13/2022 00:59:53', Current time: '07/13/2022 05:07:21'.
2022-07-12 22:07:21.381 -07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2022-07-12 22:07:21.384 -07:00 [INF] AuthenticationScheme: Bearer was challenged.
2022-07-12 22:07:21.385 -07:00 [DBG] Connection id "0HMJ4HM5NUE66" completed keep alive response.
2022-07-12 22:07:21.387 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/lists application/json 32 - 401 0 - 35.0721ms
2022-07-12 22:07:21.388 -07:00 [DBG] Connection id "0HMJ4HM5NUE66", Request id "0HMJ4HM5NUE66:00000003": started reading request body.
2022-07-12 22:07:21.390 -07:00 [DBG] Connection id "0HMJ4HM5NUE66", Request id "0HMJ4HM5NUE66:00000003": done reading request body.
2022-07-12 22:07:25.935 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57
2022-07-12 22:07:25.941 -07:00 [DBG] 1 candidate(s) found for the request path '/api/authentication/authenticate'
2022-07-12 22:07:25.943 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)' with route pattern 'api/authentication/authenticate' is valid for the request path '/api/authentication/authenticate'
2022-07-12 22:07:25.943 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 22:07:25.944 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 22:07:25.946 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 22:07:25.949 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 22:07:26.018 -07:00 [INF] Route matched with {action = "Authenticate", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] Authenticate(AuthenticationRequestBody) on controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API).
2022-07-12 22:07:26.020 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 22:07:26.021 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 22:07:26.022 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 22:07:26.023 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 22:07:26.023 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 22:07:26.024 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 22:07:26.462 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-12 22:07:27.416 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-12 22:07:27.423 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 22:07:27.433 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 22:07:27.437 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' using the name '' in request data ...
2022-07-12 22:07:27.438 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 22:07:27.440 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 22:07:27.448 -07:00 [DBG] Connection id "0HMJ4HM5NUE66", Request id "0HMJ4HM5NUE66:00000004": started reading request body.
2022-07-12 22:07:27.448 -07:00 [DBG] Connection id "0HMJ4HM5NUE66", Request id "0HMJ4HM5NUE66:00000004": done reading request body.
2022-07-12 22:07:27.570 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 22:07:27.570 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 22:07:27.570 -07:00 [DBG] Attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 22:07:27.587 -07:00 [DBG] Done attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 22:07:27.698 -07:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Where(u => u.Email == __userName_0)
    .Where(u => u.Password == __password_1)
    .Include(u => u.Lists)
    .ThenInclude(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-12 22:07:27.759 -07:00 [DBG] Including navigation: 'User.Lists'.
2022-07-12 22:07:27.804 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-12 22:07:27.813 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-12 22:07:28.128 -07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2022-07-12 22:07:28.151 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: new SingleQueryingEnumerable<User>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 1], [Property: User.Email (string) Required MaxLength(255), 2], [Property: User.Password (string) Required MaxLength(255), 3], [Property: User.UserName (string) Required MaxLength(255), 4], [Property: User.UserType (string), 5] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: List.ListName (string) Required MaxLength(255), 7], [Property: List.UserId (int?) FK Index, 8] }
                3 -> 6
                4 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: TitleList.ListId (int?) FK Index, 10], [Property: TitleList.TitleId (int?) FK Index, 11] }
                5 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 12], [Property: Title.Cast (string), 13], [Property: Title.Country (string) MaxLength(255), 14], [Property: Title.DateAdded (DateOnly?), 15], [Property: Title.Description (string) Required, 16], [Property: Title.Director (string) MaxLength(255), 17], [Property: Title.Duration (string) MaxLength(255), 18], [Property: Title.ListedIn (string) Required MaxLength(255), 19], [Property: Title.Rating (string) MaxLength(255), 20], [Property: Title.ReleaseYear (short?), 21], [Property: Title.TitleName (string) Required MaxLength(255), 22], [Property: Title.Type (string), 23], [Property: Title.UserRating (int?), 24], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 25] }
                6 -> 9
                7 -> 12
            SELECT t.user_id, t.date_created, t.email, t.password, t.user_name, t.user_type, t2.list_id, t2.list_name, t2.user_id, t2.id, t2.list_id0, t2.title_id, t2.title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
            FROM 
            (
                SELECT TOP(1) u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
                FROM users AS u
                WHERE (u.email == @__userName_0) && (u.password == @__password_1)
            ) AS t
            LEFT JOIN 
            (
                SELECT l.list_id, l.list_name, l.user_id, t1.id, t1.list_id AS list_id0, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched
                FROM lists AS l
                LEFT JOIN 
                (
                    SELECT t0.id, t0.list_id, t0.title_id, t3.title_id AS title_id0, t3.cast, t3.country, t3.date_added, t3.description, t3.director, t3.duration, t3.listed_in, t3.rating, t3.release_year, t3.title_name, t3.type, t3.user_rating, t3.watched
                    FROM title_lists AS t0
                    LEFT JOIN titles AS t3 ON t0.title_id == t3.title_id
                ) AS t1 ON l.list_id == t1.list_id
            ) AS t2 ON t.user_id == t2.user_id
            ORDER BY t.user_id ASC, t2.list_id ASC, t2.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, User>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 22:07:28.208 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 22:07:28.219 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2022-07-12 22:07:28.247 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:07:28.992 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:07:29.021 -07:00 [DBG] Executing DbCommand [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 22:07:29.095 -07:00 [INF] Executed DbCommand (85ms) [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 22:07:29.145 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:07:29.186 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:07:29.206 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:07:29.218 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:07:29.246 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:07:29.247 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:07:29.247 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:07:29.248 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:07:29.248 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:07:29.248 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:07:29.264 -07:00 [DBG] A data reader was disposed.
2022-07-12 22:07:29.268 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:07:29.270 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:07:29.318 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 22:07:29.321 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 22:07:29.321 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 22:07:29.321 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 22:07:29.323 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2022-07-12 22:07:29.323 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-07-12 22:07:29.336 -07:00 [INF] Executed action NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API) in 3307.0137ms
2022-07-12 22:07:29.338 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 22:07:29.341 -07:00 [DBG] Connection id "0HMJ4HM5NUE66" completed keep alive response.
2022-07-12 22:07:29.354 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57 - 200 - text/plain;+charset=utf-8 3420.9588ms
2022-07-12 22:07:43.101 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/lists application/json 33
2022-07-12 22:07:43.103 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists'
2022-07-12 22:07:43.103 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 22:07:43.104 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 22:07:43.105 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 22:07:43.124 -07:00 [DBG] Successfully validated the token.
2022-07-12 22:07:43.128 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 22:07:43.131 -07:00 [DBG] Authorization was successful.
2022-07-12 22:07:43.132 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 22:07:43.148 -07:00 [INF] Route matched with {action = "CreateList", controller = "Lists"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Models.ListDto]] CreateList(NetflixTitles.API.Models.ListForCreationDto) on controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API).
2022-07-12 22:07:43.148 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 22:07:43.148 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 22:07:43.149 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 22:07:43.149 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 22:07:43.149 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 22:07:43.149 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 22:07:43.373 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 22:07:43.375 -07:00 [DBG] Attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' ...
2022-07-12 22:07:43.375 -07:00 [DBG] Attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' using the name '' in request data ...
2022-07-12 22:07:43.376 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 22:07:43.376 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 22:07:43.377 -07:00 [DBG] Connection id "0HMJ4HM5NUE66", Request id "0HMJ4HM5NUE66:00000005": started reading request body.
2022-07-12 22:07:43.377 -07:00 [DBG] Connection id "0HMJ4HM5NUE66", Request id "0HMJ4HM5NUE66:00000005": done reading request body.
2022-07-12 22:07:43.386 -07:00 [DBG] Done attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 22:07:43.386 -07:00 [DBG] Done attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 22:07:43.386 -07:00 [DBG] Attempting to validate the bound parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' ...
2022-07-12 22:07:43.390 -07:00 [DBG] Done attempting to validate the bound parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 22:07:43.452 -07:00 [DBG] 'netflix_appContext' generated a temporary value for the property 'ListId.List'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:07:43.469 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:07:43.475 -07:00 [DBG] SaveChanges starting for 'netflix_appContext'.
2022-07-12 22:07:43.480 -07:00 [DBG] DetectChanges starting for 'netflix_appContext'.
2022-07-12 22:07:43.490 -07:00 [DBG] DetectChanges completed for 'netflix_appContext'.
2022-07-12 22:07:43.511 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:07:43.520 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:07:43.522 -07:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2022-07-12 22:07:43.870 -07:00 [DBG] Began transaction with isolation level 'Unspecified'.
2022-07-12 22:07:44.001 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 22:07:44.002 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 22:07:44.005 -07:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 255), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `lists` (`list_name`, `user_id`)
VALUES (@p0, @p1);
SELECT `list_id`
FROM `lists`
WHERE ROW_COUNT() = 1 AND `list_id` = LAST_INSERT_ID();
2022-07-12 22:07:44.065 -07:00 [INF] Executed DbCommand (35ms) [Parameters=[@p0='?' (Size = 255), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `lists` (`list_name`, `user_id`)
VALUES (@p0, @p1);
SELECT `list_id`
FROM `lists`
WHERE ROW_COUNT() = 1 AND `list_id` = LAST_INSERT_ID();
2022-07-12 22:07:44.089 -07:00 [DBG] The foreign key property 'List.ListId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2022-07-12 22:07:44.098 -07:00 [DBG] A data reader was disposed.
2022-07-12 22:07:44.101 -07:00 [DBG] Committing transaction.
2022-07-12 22:07:44.292 -07:00 [DBG] Committed transaction.
2022-07-12 22:07:44.299 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:07:44.300 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:07:44.305 -07:00 [DBG] Disposing transaction.
2022-07-12 22:07:44.329 -07:00 [DBG] An entity of type 'List' tracked by 'netflix_appContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:07:44.332 -07:00 [DBG] SaveChanges completed for 'netflix_appContext' with 1 entities written to the database.
2022-07-12 22:07:44.353 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 22:07:44.354 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 22:07:44.354 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 22:07:44.354 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 22:07:44.354 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-12 22:07:44.354 -07:00 [INF] Executing CreatedAtRouteResult, writing value of type 'NetflixTitles.API.Models.ListDto'.
2022-07-12 22:07:44.382 -07:00 [DBG] Found the endpoints ["NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2022-07-12 22:07:44.391 -07:00 [DBG] Failed to process the template api/lists/{id} for NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API). A required route value is missing, or has a different value from the required default values. Supplied ambient values { "action": "CreateList", "controller": "Lists" } and { "ListId": "15", "ListName": "test list2" } with default values { "action": "GetList", "controller": "Lists" }
2022-07-12 22:07:44.392 -07:00 [DBG] Link generation failed for endpoints ["NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)"]
2022-07-12 22:07:44.424 -07:00 [INF] Executed action NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API) in 1274.0457ms
2022-07-12 22:07:44.425 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 22:07:44.428 -07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No route matches the supplied values.
   at Microsoft.AspNetCore.Mvc.CreatedAtRouteResult.OnFormatting(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor.ExecuteAsyncCore(ActionContext context, ObjectResult result, Type objectType, Object value)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor.ExecuteAsync(ActionContext context, ObjectResult result)
   at Microsoft.AspNetCore.Mvc.ObjectResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2022-07-12 22:07:44.442 -07:00 [DBG] Connection id "0HMJ4HM5NUE66" completed keep alive response.
2022-07-12 22:07:44.444 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/lists application/json 33 - 500 - text/plain;+charset=utf-8 1345.3962ms
2022-07-12 22:11:32.447 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 22:11:32.613 -07:00 [DBG] Hosting starting
2022-07-12 22:11:32.646 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 22:11:32.656 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 22:11:32.682 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 22:11:32.702 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 22:11:32.708 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 22:11:32.718 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 22:11:32.718 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 22:11:32.731 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 22:11:32.733 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 22:11:32.932 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 22:11:33.121 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 22:11:33.121 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 22:11:33.122 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 22:11:33.125 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 22:11:33.125 -07:00 [INF] Hosting environment: Development
2022-07-12 22:11:33.126 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 22:11:33.126 -07:00 [DBG] Hosting started
2022-07-12 22:11:42.730 -07:00 [DBG] Connection id "0HMJ4HOMDTBGN" received FIN.
2022-07-12 22:11:42.751 -07:00 [DBG] Connection id "0HMJ4HOMDTBGN" accepted.
2022-07-12 22:11:42.754 -07:00 [DBG] Connection id "0HMJ4HOMDTBGN" started.
2022-07-12 22:11:42.763 -07:00 [DBG] Connection id "0HMJ4HOMDTBGO" accepted.
2022-07-12 22:11:42.790 -07:00 [DBG] Connection id "0HMJ4HOMDTBGO" started.
2022-07-12 22:11:42.829 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 22:11:43.026 -07:00 [DBG] Connection id "0HMJ4HOMDTBGN" stopped.
2022-07-12 22:11:43.056 -07:00 [DBG] Connection id "0HMJ4HOMDTBGN" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 22:11:43.074 -07:00 [DBG] Connection 0HMJ4HOMDTBGO established using the following protocol: "Tls12"
2022-07-12 22:11:43.141 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/lists application/json 33
2022-07-12 22:11:43.145 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 22:11:43.212 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists'
2022-07-12 22:11:43.218 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 22:11:43.220 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 22:11:43.252 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 22:11:43.531 -07:00 [DBG] Successfully validated the token.
2022-07-12 22:11:43.534 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 22:11:43.545 -07:00 [DBG] Authorization was successful.
2022-07-12 22:11:43.548 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 22:11:43.601 -07:00 [INF] Route matched with {action = "CreateList", controller = "Lists"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Models.ListDto]] CreateList(NetflixTitles.API.Models.ListForCreationDto) on controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API).
2022-07-12 22:11:43.604 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 22:11:43.604 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 22:11:43.606 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 22:11:43.606 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 22:11:43.606 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 22:11:43.608 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 22:11:44.033 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-12 22:11:44.962 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-12 22:11:45.169 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 22:11:45.178 -07:00 [DBG] Attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' ...
2022-07-12 22:11:45.182 -07:00 [DBG] Attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' using the name '' in request data ...
2022-07-12 22:11:45.184 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 22:11:45.185 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 22:11:45.193 -07:00 [DBG] Connection id "0HMJ4HOMDTBGO", Request id "0HMJ4HOMDTBGO:00000002": started reading request body.
2022-07-12 22:11:45.193 -07:00 [DBG] Connection id "0HMJ4HOMDTBGO", Request id "0HMJ4HOMDTBGO:00000002": done reading request body.
2022-07-12 22:11:45.301 -07:00 [DBG] Done attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 22:11:45.302 -07:00 [DBG] Done attempting to bind parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 22:11:45.302 -07:00 [DBG] Attempting to validate the bound parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto' ...
2022-07-12 22:11:45.320 -07:00 [DBG] Done attempting to validate the bound parameter 'listForCreationDto' of type 'NetflixTitles.API.Models.ListForCreationDto'.
2022-07-12 22:11:45.402 -07:00 [DBG] 'netflix_appContext' generated a temporary value for the property 'ListId.List'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:11:45.470 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:11:45.476 -07:00 [DBG] SaveChanges starting for 'netflix_appContext'.
2022-07-12 22:11:45.481 -07:00 [DBG] DetectChanges starting for 'netflix_appContext'.
2022-07-12 22:11:45.490 -07:00 [DBG] DetectChanges completed for 'netflix_appContext'.
2022-07-12 22:11:45.517 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:11:46.153 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:11:46.163 -07:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2022-07-12 22:11:46.235 -07:00 [DBG] Began transaction with isolation level 'Unspecified'.
2022-07-12 22:11:46.312 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 22:11:46.320 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2022-07-12 22:11:46.354 -07:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 255), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `lists` (`list_name`, `user_id`)
VALUES (@p0, @p1);
SELECT `list_id`
FROM `lists`
WHERE ROW_COUNT() = 1 AND `list_id` = LAST_INSERT_ID();
2022-07-12 22:11:46.622 -07:00 [INF] Executed DbCommand (252ms) [Parameters=[@p0='?' (Size = 255), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `lists` (`list_name`, `user_id`)
VALUES (@p0, @p1);
SELECT `list_id`
FROM `lists`
WHERE ROW_COUNT() = 1 AND `list_id` = LAST_INSERT_ID();
2022-07-12 22:11:46.663 -07:00 [DBG] The foreign key property 'List.ListId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2022-07-12 22:11:46.676 -07:00 [DBG] A data reader was disposed.
2022-07-12 22:11:46.683 -07:00 [DBG] Committing transaction.
2022-07-12 22:11:46.694 -07:00 [DBG] Committed transaction.
2022-07-12 22:11:46.698 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:11:46.699 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:11:46.702 -07:00 [DBG] Disposing transaction.
2022-07-12 22:11:46.716 -07:00 [DBG] An entity of type 'List' tracked by 'netflix_appContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:11:46.719 -07:00 [DBG] SaveChanges completed for 'netflix_appContext' with 1 entities written to the database.
2022-07-12 22:11:46.744 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 22:11:46.747 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 22:11:46.748 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 22:11:46.748 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 22:11:46.749 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-12 22:11:46.750 -07:00 [INF] Executing CreatedAtRouteResult, writing value of type 'NetflixTitles.API.Models.ListDto'.
2022-07-12 22:11:46.775 -07:00 [DBG] Found the endpoints ["NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2022-07-12 22:11:46.789 -07:00 [DBG] Successfully processed template api/lists/{id} for NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API) resulting in /api/lists/16 and 
2022-07-12 22:11:46.791 -07:00 [DBG] Link generation succeeded for endpoints ["NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)"] with result /api/lists/16
2022-07-12 22:11:46.876 -07:00 [INF] Executed action NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API) in 3264.3272ms
2022-07-12 22:11:46.881 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.ListsController.CreateList (NetflixTitles.API)'
2022-07-12 22:11:46.885 -07:00 [DBG] Connection id "0HMJ4HOMDTBGO" completed keep alive response.
2022-07-12 22:11:46.904 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/lists application/json 33 - 201 84 application/json;+charset=utf-8 3767.4625ms
2022-07-12 22:12:58.323 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists - -
2022-07-12 22:12:58.337 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists'
2022-07-12 22:12:58.338 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)' with route pattern 'api/lists' is valid for the request path '/api/lists'
2022-07-12 22:12:58.339 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)'
2022-07-12 22:12:58.358 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 22:12:58.375 -07:00 [DBG] Successfully validated the token.
2022-07-12 22:12:58.376 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 22:12:58.380 -07:00 [DBG] Authorization was successful.
2022-07-12 22:12:58.380 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)'
2022-07-12 22:12:58.395 -07:00 [INF] Route matched with {action = "GetLists", controller = "Lists"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Models.ListWithoutTitlesDto]]] GetLists() on controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API).
2022-07-12 22:12:58.396 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 22:12:58.396 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 22:12:58.396 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 22:12:58.396 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 22:12:58.396 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 22:12:58.396 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 22:12:58.399 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 22:12:58.537 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .OrderBy(l => l.ListId)
    .Where(l => l.UserId.ToString() == __claimId_0)
    .Include(l => l.User)'
2022-07-12 22:12:58.664 -07:00 [DBG] Including navigation: 'List.User'.
2022-07-12 22:12:58.882 -07:00 [DBG] Generated query execution expression: 
'queryContext => new SingleQueryingEnumerable<List>(
    (RelationalQueryContext)queryContext, 
    RelationalCommandCache.SelectExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: List.ListName (string) Required MaxLength(255), 1], [Property: List.UserId (int?) FK Index, 2] }
            1 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 3], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 4], [Property: User.Email (string) Required MaxLength(255), 5], [Property: User.Password (string) Required MaxLength(255), 6], [Property: User.UserName (string) Required MaxLength(255), 7], [Property: User.UserType (string), 8] }
        SELECT l.list_id, l.list_name, l.user_id, u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
        FROM lists AS l
        LEFT JOIN users AS u ON l.user_id == u.user_id
        WHERE CAST(l.user_id AS longtext) == @__claimId_0
        ORDER BY l.list_id ASC), 
    Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, List>, 
    NetflixTitles.API.DbContexts.netflix_appContext, 
    False, 
    False, 
    True
)'
2022-07-12 22:12:58.931 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 22:12:58.932 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 22:12:58.934 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:12:58.988 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:12:58.990 -07:00 [DBG] Executing DbCommand [Parameters=[@__claimId_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
FROM `lists` AS `l`
LEFT JOIN `users` AS `u` ON `l`.`user_id` = `u`.`user_id`
WHERE CAST(`l`.`user_id` AS char) = @__claimId_0
ORDER BY `l`.`list_id`
2022-07-12 22:12:59.154 -07:00 [INF] Executed DbCommand (139ms) [Parameters=[@__claimId_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
FROM `lists` AS `l`
LEFT JOIN `users` AS `u` ON `l`.`user_id` = `u`.`user_id`
WHERE CAST(`l`.`user_id` AS char) = @__claimId_0
ORDER BY `l`.`list_id`
2022-07-12 22:12:59.229 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:12:59.240 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:12:59.278 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:12:59.280 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:12:59.280 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:12:59.281 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:12:59.282 -07:00 [DBG] A data reader was disposed.
2022-07-12 22:12:59.282 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:12:59.283 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:12:59.297 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 22:12:59.298 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 22:12:59.299 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 22:12:59.299 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 22:12:59.299 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-12 22:12:59.299 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[NetflixTitles.API.Models.ListWithoutTitlesDto, NetflixTitles.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-07-12 22:12:59.324 -07:00 [INF] Executed action NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API) in 926.9589ms
2022-07-12 22:12:59.324 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.ListsController.GetLists (NetflixTitles.API)'
2022-07-12 22:12:59.324 -07:00 [DBG] Connection id "0HMJ4HOMDTBGO" completed keep alive response.
2022-07-12 22:12:59.326 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists - - - 200 288 application/json;+charset=utf-8 1004.2695ms
2022-07-12 22:35:37.677 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 22:35:37.840 -07:00 [DBG] Hosting starting
2022-07-12 22:35:37.870 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 22:35:37.880 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 22:35:37.904 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 22:35:37.924 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 22:35:37.930 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 22:35:37.939 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 22:35:37.940 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 22:35:37.952 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 22:35:37.954 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 22:35:38.158 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 22:35:38.352 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 22:35:38.353 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 22:35:38.354 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 22:35:38.356 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 22:35:38.357 -07:00 [INF] Hosting environment: Development
2022-07-12 22:35:38.357 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 22:35:38.357 -07:00 [DBG] Hosting started
2022-07-12 22:35:52.248 -07:00 [DBG] Connection id "0HMJ4I66DJ4FJ" received FIN.
2022-07-12 22:35:52.268 -07:00 [DBG] Connection id "0HMJ4I66DJ4FJ" accepted.
2022-07-12 22:35:52.272 -07:00 [DBG] Connection id "0HMJ4I66DJ4FJ" started.
2022-07-12 22:35:52.280 -07:00 [DBG] Connection id "0HMJ4I66DJ4FK" accepted.
2022-07-12 22:35:52.281 -07:00 [DBG] Connection id "0HMJ4I66DJ4FK" started.
2022-07-12 22:35:52.342 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 22:35:52.579 -07:00 [DBG] Connection id "0HMJ4I66DJ4FJ" stopped.
2022-07-12 22:35:52.614 -07:00 [DBG] Connection id "0HMJ4I66DJ4FJ" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 22:35:52.659 -07:00 [DBG] Connection 0HMJ4I66DJ4FK established using the following protocol: "Tls12"
2022-07-12 22:35:52.733 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57
2022-07-12 22:35:52.737 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 22:35:52.802 -07:00 [DBG] 1 candidate(s) found for the request path '/api/authentication/authenticate'
2022-07-12 22:35:52.809 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)' with route pattern 'api/authentication/authenticate' is valid for the request path '/api/authentication/authenticate'
2022-07-12 22:35:52.811 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 22:35:52.843 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 22:35:52.912 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 22:35:52.918 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 22:35:52.972 -07:00 [INF] Route matched with {action = "Authenticate", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] Authenticate(AuthenticationRequestBody) on controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API).
2022-07-12 22:35:52.974 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 22:35:52.975 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 22:35:52.976 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 22:35:52.976 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 22:35:52.976 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 22:35:52.978 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 22:35:53.430 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-12 22:35:54.410 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-12 22:35:54.417 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-12 22:35:54.426 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 22:35:54.431 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' using the name '' in request data ...
2022-07-12 22:35:54.432 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 22:35:54.434 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 22:35:54.442 -07:00 [DBG] Connection id "0HMJ4I66DJ4FK", Request id "0HMJ4I66DJ4FK:00000002": started reading request body.
2022-07-12 22:35:54.443 -07:00 [DBG] Connection id "0HMJ4I66DJ4FK", Request id "0HMJ4I66DJ4FK:00000002": done reading request body.
2022-07-12 22:35:54.582 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 22:35:54.582 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 22:35:54.582 -07:00 [DBG] Attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-12 22:35:54.599 -07:00 [DBG] Done attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-12 22:35:54.709 -07:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Where(u => u.Email == __userName_0)
    .Where(u => u.Password == __password_1)
    .Include(u => u.Lists)
    .ThenInclude(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-12 22:35:54.764 -07:00 [DBG] Including navigation: 'User.Lists'.
2022-07-12 22:35:54.806 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-12 22:35:54.814 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-12 22:35:55.107 -07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2022-07-12 22:35:55.130 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: new SingleQueryingEnumerable<User>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 1], [Property: User.Email (string) Required MaxLength(255), 2], [Property: User.Password (string) Required MaxLength(255), 3], [Property: User.UserName (string) Required MaxLength(255), 4], [Property: User.UserType (string), 5] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: List.ListName (string) Required MaxLength(255), 7], [Property: List.UserId (int?) FK Index, 8] }
                3 -> 6
                4 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: TitleList.ListId (int?) FK Index, 10], [Property: TitleList.TitleId (int?) FK Index, 11] }
                5 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 12], [Property: Title.Cast (string), 13], [Property: Title.Country (string) MaxLength(255), 14], [Property: Title.DateAdded (DateOnly?), 15], [Property: Title.Description (string) Required, 16], [Property: Title.Director (string) MaxLength(255), 17], [Property: Title.Duration (string) MaxLength(255), 18], [Property: Title.ListedIn (string) Required MaxLength(255), 19], [Property: Title.Rating (string) MaxLength(255), 20], [Property: Title.ReleaseYear (short?), 21], [Property: Title.TitleName (string) Required MaxLength(255), 22], [Property: Title.Type (string), 23], [Property: Title.UserRating (int?), 24], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 25] }
                6 -> 9
                7 -> 12
            SELECT t.user_id, t.date_created, t.email, t.password, t.user_name, t.user_type, t2.list_id, t2.list_name, t2.user_id, t2.id, t2.list_id0, t2.title_id, t2.title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
            FROM 
            (
                SELECT TOP(1) u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
                FROM users AS u
                WHERE (u.email == @__userName_0) && (u.password == @__password_1)
            ) AS t
            LEFT JOIN 
            (
                SELECT l.list_id, l.list_name, l.user_id, t1.id, t1.list_id AS list_id0, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched
                FROM lists AS l
                LEFT JOIN 
                (
                    SELECT t0.id, t0.list_id, t0.title_id, t3.title_id AS title_id0, t3.cast, t3.country, t3.date_added, t3.description, t3.director, t3.duration, t3.listed_in, t3.rating, t3.release_year, t3.title_name, t3.type, t3.user_rating, t3.watched
                    FROM title_lists AS t0
                    LEFT JOIN titles AS t3 ON t0.title_id == t3.title_id
                ) AS t1 ON l.list_id == t1.list_id
            ) AS t2 ON t.user_id == t2.user_id
            ORDER BY t.user_id ASC, t2.list_id ASC, t2.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, User>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 22:35:55.190 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 22:35:55.201 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2022-07-12 22:35:55.229 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:35:56.011 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:35:56.042 -07:00 [DBG] Executing DbCommand [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 22:35:56.114 -07:00 [INF] Executed DbCommand (84ms) [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-12 22:35:56.164 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:35:56.208 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:35:56.228 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:35:56.240 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:35:56.268 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:35:56.269 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:35:56.270 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:35:56.271 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:35:56.271 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:35:56.271 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:35:56.271 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:35:56.271 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:35:56.287 -07:00 [DBG] A data reader was disposed.
2022-07-12 22:35:56.291 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:35:56.293 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:35:56.419 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 22:35:56.422 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 22:35:56.422 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 22:35:56.422 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 22:35:56.423 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2022-07-12 22:35:56.424 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-07-12 22:35:56.438 -07:00 [INF] Executed action NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API) in 3456.4081ms
2022-07-12 22:35:56.442 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-12 22:35:56.447 -07:00 [DBG] Connection id "0HMJ4I66DJ4FK" completed keep alive response.
2022-07-12 22:35:56.464 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57 - 200 - text/plain;+charset=utf-8 3735.5587ms
2022-07-12 22:36:09.826 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists/11 - -
2022-07-12 22:36:09.834 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists/11'
2022-07-12 22:36:09.835 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)' with route pattern 'api/lists/{id}' is valid for the request path '/api/lists/11'
2022-07-12 22:36:09.835 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-12 22:36:09.850 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 22:36:09.944 -07:00 [DBG] Successfully validated the token.
2022-07-12 22:36:09.947 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 22:36:09.958 -07:00 [DBG] Authorization was successful.
2022-07-12 22:36:09.959 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-12 22:36:09.975 -07:00 [INF] Route matched with {action = "GetList", controller = "Lists"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Models.ListDto]] GetList(Int32) on controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API).
2022-07-12 22:36:09.975 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 22:36:09.975 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 22:36:09.976 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 22:36:09.976 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 22:36:09.976 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 22:36:09.976 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 22:36:10.178 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 22:36:10.180 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2022-07-12 22:36:10.181 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2022-07-12 22:36:10.183 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-12 22:36:10.184 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-12 22:36:10.184 -07:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2022-07-12 22:36:10.185 -07:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2022-07-12 22:36:10.199 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Any(l => l.ListId == __listId_0 && l.UserId.ToString() == __userClaim_1)'
2022-07-12 22:36:10.221 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: new SingleQueryingEnumerable<bool>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM lists AS l
                WHERE (l.list_id == @__listId_0) && (CAST(l.user_id AS longtext) == @__userClaim_1))), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, bool>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 22:36:10.239 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 22:36:10.240 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 22:36:10.242 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:36:10.249 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:36:10.251 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-12 22:36:10.285 -07:00 [INF] Executed DbCommand (34ms) [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-12 22:36:10.288 -07:00 [DBG] A data reader was disposed.
2022-07-12 22:36:10.289 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:36:10.289 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:36:10.294 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Where(l => l.ListId == __listId_0)
    .Include(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-12 22:36:10.296 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-12 22:36:10.297 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-12 22:36:10.315 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<List>(
    asyncEnumerable: new SingleQueryingEnumerable<List>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: List.ListName (string) Required MaxLength(255), 1], [Property: List.UserId (int?) FK Index, 2] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 3], [Property: TitleList.ListId (int?) FK Index, 4], [Property: TitleList.TitleId (int?) FK Index, 5] }
                3 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Title.Cast (string), 7], [Property: Title.Country (string) MaxLength(255), 8], [Property: Title.DateAdded (DateOnly?), 9], [Property: Title.Description (string) Required, 10], [Property: Title.Director (string) MaxLength(255), 11], [Property: Title.Duration (string) MaxLength(255), 12], [Property: Title.ListedIn (string) Required MaxLength(255), 13], [Property: Title.Rating (string) MaxLength(255), 14], [Property: Title.ReleaseYear (short?), 15], [Property: Title.TitleName (string) Required MaxLength(255), 16], [Property: Title.Type (string), 17], [Property: Title.UserRating (int?), 18], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 19] }
                4 -> 3
                5 -> 6
            SELECT t.list_id, t.list_name, t.user_id, t1.id, t1.list_id, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched
            FROM 
            (
                SELECT TOP(1) l.list_id, l.list_name, l.user_id
                FROM lists AS l
                WHERE l.list_id == @__listId_0
            ) AS t
            LEFT JOIN 
            (
                SELECT t0.id, t0.list_id, t0.title_id, t2.title_id AS title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
                FROM title_lists AS t0
                LEFT JOIN titles AS t2 ON t0.title_id == t2.title_id
            ) AS t1 ON t.list_id == t1.list_id
            ORDER BY t.list_id ASC, t1.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, List>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 22:36:10.318 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 22:36:10.318 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 22:36:10.318 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:36:10.370 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:36:10.370 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`list_id`, `t`.`list_name`, `t`.`user_id`, `t1`.`id`, `t1`.`list_id`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
FROM (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t2`.`title_id` AS `title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
    FROM `title_lists` AS `t0`
    LEFT JOIN `titles` AS `t2` ON `t0`.`title_id` = `t2`.`title_id`
) AS `t1` ON `t`.`list_id` = `t1`.`list_id`
ORDER BY `t`.`list_id`, `t1`.`id`
2022-07-12 22:36:10.376 -07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`list_id`, `t`.`list_name`, `t`.`user_id`, `t1`.`id`, `t1`.`list_id`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
FROM (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t2`.`title_id` AS `title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
    FROM `title_lists` AS `t0`
    LEFT JOIN `titles` AS `t2` ON `t0`.`title_id` = `t2`.`title_id`
) AS `t1` ON `t`.`list_id` = `t1`.`list_id`
ORDER BY `t`.`list_id`, `t1`.`id`
2022-07-12 22:36:10.378 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:36:10.379 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:36:10.380 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:36:10.381 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:36:10.381 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 22:36:10.382 -07:00 [DBG] A data reader was disposed.
2022-07-12 22:36:10.382 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:36:10.382 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 22:36:10.415 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 22:36:10.415 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 22:36:10.415 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 22:36:10.415 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 22:36:10.416 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-12 22:36:10.416 -07:00 [INF] Executing OkObjectResult, writing value of type 'NetflixTitles.API.Models.ListDto'.
2022-07-12 22:36:10.502 -07:00 [INF] Executed action NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API) in 526.2014ms
2022-07-12 22:36:10.503 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-12 22:36:10.503 -07:00 [DBG] Connection id "0HMJ4I66DJ4FK" completed keep alive response.
2022-07-12 22:36:10.504 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists/11 - - - 200 1146 application/json;+charset=utf-8 679.8238ms
2022-07-12 22:37:33.032 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/lists/11 application/json 23
2022-07-12 22:37:33.037 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists/11'
2022-07-12 22:37:33.039 -07:00 [DBG] Request matched endpoint '405 HTTP Method Not Supported'
2022-07-12 22:37:33.042 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 22:37:33.066 -07:00 [DBG] Successfully validated the token.
2022-07-12 22:37:33.066 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 22:37:33.068 -07:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2022-07-12 22:37:33.068 -07:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2022-07-12 22:37:33.070 -07:00 [DBG] Connection id "0HMJ4I66DJ4FK" completed keep alive response.
2022-07-12 22:37:33.070 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/lists/11 application/json 23 - 405 0 - 39.5872ms
2022-07-12 22:37:33.095 -07:00 [DBG] Connection id "0HMJ4I66DJ4FK", Request id "0HMJ4I66DJ4FK:00000004": started reading request body.
2022-07-12 22:37:33.136 -07:00 [DBG] Connection id "0HMJ4I66DJ4FK", Request id "0HMJ4I66DJ4FK:00000004": done reading request body.
2022-07-12 23:04:24.243 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 23:04:24.406 -07:00 [DBG] Hosting starting
2022-07-12 23:04:24.437 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 23:04:24.446 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 23:04:24.471 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 23:04:24.492 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 23:04:24.499 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 23:04:24.508 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 23:04:24.509 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 23:04:24.522 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 23:04:24.524 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 23:04:24.728 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 23:04:24.899 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 23:04:24.900 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 23:04:24.900 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 23:04:24.902 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 23:04:24.903 -07:00 [INF] Hosting environment: Development
2022-07-12 23:04:24.904 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 23:04:24.904 -07:00 [DBG] Hosting started
2022-07-12 23:04:31.268 -07:00 [DBG] Connection id "0HMJ4IM6NEAH7" received FIN.
2022-07-12 23:04:31.288 -07:00 [DBG] Connection id "0HMJ4IM6NEAH7" accepted.
2022-07-12 23:04:31.290 -07:00 [DBG] Connection id "0HMJ4IM6NEAH7" started.
2022-07-12 23:04:31.298 -07:00 [DBG] Connection id "0HMJ4IM6NEAH8" accepted.
2022-07-12 23:04:31.324 -07:00 [DBG] Connection id "0HMJ4IM6NEAH8" started.
2022-07-12 23:04:31.365 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 23:04:31.638 -07:00 [DBG] Connection id "0HMJ4IM6NEAH7" stopped.
2022-07-12 23:04:31.737 -07:00 [DBG] Connection id "0HMJ4IM6NEAH7" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 23:04:31.851 -07:00 [DBG] Connection 0HMJ4IM6NEAH8 established using the following protocol: "Tls12"
2022-07-12 23:04:31.918 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/lists/11/titles application/json 23
2022-07-12 23:04:31.921 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 23:04:31.982 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists/11/titles'
2022-07-12 23:04:31.988 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.TitlesController.CreateTitle (NetflixTitles.API)' with route pattern 'api/lists/{listId}/titles' is valid for the request path '/api/lists/11/titles'
2022-07-12 23:04:31.990 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.TitlesController.CreateTitle (NetflixTitles.API)'
2022-07-12 23:04:32.022 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 23:04:32.306 -07:00 [DBG] Successfully validated the token.
2022-07-12 23:04:32.309 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 23:04:32.320 -07:00 [DBG] Authorization was successful.
2022-07-12 23:04:32.323 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.TitlesController.CreateTitle (NetflixTitles.API)'
2022-07-12 23:04:32.378 -07:00 [INF] Route matched with {action = "CreateTitle", controller = "Titles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Models.TitleForCreationDto]] CreateTitle(Int32, NetflixTitles.API.Models.TitleForCreationDto) on controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API).
2022-07-12 23:04:32.380 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 23:04:32.381 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 23:04:32.382 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 23:04:32.383 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 23:04:32.383 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 23:04:32.384 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API)
2022-07-12 23:04:32.821 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-12 23:04:33.770 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-12 23:04:33.974 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API)
2022-07-12 23:04:33.984 -07:00 [DBG] Attempting to bind parameter 'listId' of type 'System.Int32' ...
2022-07-12 23:04:33.988 -07:00 [DBG] Attempting to bind parameter 'listId' of type 'System.Int32' using the name 'listId' in request data ...
2022-07-12 23:04:33.991 -07:00 [DBG] Done attempting to bind parameter 'listId' of type 'System.Int32'.
2022-07-12 23:04:33.991 -07:00 [DBG] Done attempting to bind parameter 'listId' of type 'System.Int32'.
2022-07-12 23:04:33.991 -07:00 [DBG] Attempting to validate the bound parameter 'listId' of type 'System.Int32' ...
2022-07-12 23:04:33.996 -07:00 [DBG] Done attempting to validate the bound parameter 'listId' of type 'System.Int32'.
2022-07-12 23:04:33.998 -07:00 [DBG] Attempting to bind parameter 'titleForCreationDto' of type 'NetflixTitles.API.Models.TitleForCreationDto' ...
2022-07-12 23:04:33.999 -07:00 [DBG] Attempting to bind parameter 'titleForCreationDto' of type 'NetflixTitles.API.Models.TitleForCreationDto' using the name '' in request data ...
2022-07-12 23:04:34.000 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 23:04:34.002 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 23:04:34.009 -07:00 [DBG] Connection id "0HMJ4IM6NEAH8", Request id "0HMJ4IM6NEAH8:00000002": started reading request body.
2022-07-12 23:04:34.009 -07:00 [DBG] Connection id "0HMJ4IM6NEAH8", Request id "0HMJ4IM6NEAH8:00000002": done reading request body.
2022-07-12 23:04:34.117 -07:00 [DBG] Done attempting to bind parameter 'titleForCreationDto' of type 'NetflixTitles.API.Models.TitleForCreationDto'.
2022-07-12 23:04:34.118 -07:00 [DBG] Done attempting to bind parameter 'titleForCreationDto' of type 'NetflixTitles.API.Models.TitleForCreationDto'.
2022-07-12 23:04:34.118 -07:00 [DBG] Attempting to validate the bound parameter 'titleForCreationDto' of type 'NetflixTitles.API.Models.TitleForCreationDto' ...
2022-07-12 23:04:34.132 -07:00 [DBG] Done attempting to validate the bound parameter 'titleForCreationDto' of type 'NetflixTitles.API.Models.TitleForCreationDto'.
2022-07-12 23:04:34.228 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Any(l => l.ListId == __listId_0 && l.UserId.ToString() == __userClaim_1)'
2022-07-12 23:04:34.452 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: new SingleQueryingEnumerable<bool>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM lists AS l
                WHERE (l.list_id == @__listId_0) && (CAST(l.user_id AS longtext) == @__userClaim_1))), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, bool>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 23:04:34.512 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 23:04:34.523 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2022-07-12 23:04:34.550 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:35.118 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:35.148 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-12 23:04:35.221 -07:00 [INF] Executed DbCommand (84ms) [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-12 23:04:35.246 -07:00 [DBG] A data reader was disposed.
2022-07-12 23:04:35.250 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:35.252 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:35.258 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Any(l => l.ListId == __listId_0)'
2022-07-12 23:04:35.267 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: new SingleQueryingEnumerable<bool>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM lists AS l
                WHERE l.list_id == @__listId_0)), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, bool>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 23:04:35.270 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 23:04:35.271 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 23:04:35.272 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:35.307 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:35.308 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0)
2022-07-12 23:04:35.427 -07:00 [INF] Executed DbCommand (119ms) [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0)
2022-07-12 23:04:35.431 -07:00 [DBG] A data reader was disposed.
2022-07-12 23:04:35.432 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:35.432 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:35.514 -07:00 [DBG] 'netflix_appContext' generated a temporary value for the property 'Id.TitleList'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 23:04:35.583 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 23:04:35.589 -07:00 [DBG] SaveChanges starting for 'netflix_appContext'.
2022-07-12 23:04:35.592 -07:00 [DBG] DetectChanges starting for 'netflix_appContext'.
2022-07-12 23:04:35.601 -07:00 [DBG] DetectChanges completed for 'netflix_appContext'.
2022-07-12 23:04:35.620 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:35.827 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:35.848 -07:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2022-07-12 23:04:35.989 -07:00 [DBG] Began transaction with isolation level 'Unspecified'.
2022-07-12 23:04:36.100 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 23:04:36.100 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 23:04:36.102 -07:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `title_lists` (`list_id`, `title_id`)
VALUES (@p0, @p1);
SELECT `id`
FROM `title_lists`
WHERE ROW_COUNT() = 1 AND `id` = LAST_INSERT_ID();
2022-07-12 23:04:36.107 -07:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `title_lists` (`list_id`, `title_id`)
VALUES (@p0, @p1);
SELECT `id`
FROM `title_lists`
WHERE ROW_COUNT() = 1 AND `id` = LAST_INSERT_ID();
2022-07-12 23:04:36.131 -07:00 [DBG] The foreign key property 'TitleList.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2022-07-12 23:04:36.140 -07:00 [DBG] A data reader was disposed.
2022-07-12 23:04:36.143 -07:00 [DBG] Committing transaction.
2022-07-12 23:04:36.151 -07:00 [DBG] Committed transaction.
2022-07-12 23:04:36.154 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:36.155 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:36.157 -07:00 [DBG] Disposing transaction.
2022-07-12 23:04:36.171 -07:00 [DBG] An entity of type 'TitleList' tracked by 'netflix_appContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 23:04:36.174 -07:00 [DBG] SaveChanges completed for 'netflix_appContext' with 1 entities written to the database.
2022-07-12 23:04:36.184 -07:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2022-07-12 23:04:36.190 -07:00 [INF] Executed action NetflixTitles.API.Controllers.TitlesController.CreateTitle (NetflixTitles.API) in 3802.534ms
2022-07-12 23:04:36.194 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.TitlesController.CreateTitle (NetflixTitles.API)'
2022-07-12 23:04:36.201 -07:00 [DBG] Connection id "0HMJ4IM6NEAH8" completed keep alive response.
2022-07-12 23:04:36.217 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/lists/11/titles application/json 23 - 200 0 - 4303.9530ms
2022-07-12 23:04:44.610 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists/11 application/json 23
2022-07-12 23:04:44.618 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists/11'
2022-07-12 23:04:44.619 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)' with route pattern 'api/lists/{id}' is valid for the request path '/api/lists/11'
2022-07-12 23:04:44.619 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-12 23:04:44.636 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 23:04:44.651 -07:00 [DBG] Successfully validated the token.
2022-07-12 23:04:44.652 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 23:04:44.655 -07:00 [DBG] Authorization was successful.
2022-07-12 23:04:44.655 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-12 23:04:44.674 -07:00 [INF] Route matched with {action = "GetList", controller = "Lists"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Models.ListDto]] GetList(Int32) on controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API).
2022-07-12 23:04:44.675 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 23:04:44.675 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 23:04:44.675 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 23:04:44.675 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 23:04:44.675 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 23:04:44.676 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 23:04:44.680 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-12 23:04:44.681 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2022-07-12 23:04:44.682 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2022-07-12 23:04:44.682 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-12 23:04:44.682 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-12 23:04:44.682 -07:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2022-07-12 23:04:44.683 -07:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2022-07-12 23:04:44.700 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 23:04:44.701 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 23:04:44.703 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:44.707 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:44.709 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-12 23:04:44.713 -07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-12 23:04:44.715 -07:00 [DBG] A data reader was disposed.
2022-07-12 23:04:44.715 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:44.715 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:44.734 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Where(l => l.ListId == __listId_0)
    .Include(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-12 23:04:44.763 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-12 23:04:44.778 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-12 23:04:44.915 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<List>(
    asyncEnumerable: new SingleQueryingEnumerable<List>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: List.ListName (string) Required MaxLength(255), 1], [Property: List.UserId (int?) FK Index, 2] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 3], [Property: TitleList.ListId (int?) FK Index, 4], [Property: TitleList.TitleId (int?) FK Index, 5] }
                3 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Title.Cast (string), 7], [Property: Title.Country (string) MaxLength(255), 8], [Property: Title.DateAdded (DateOnly?), 9], [Property: Title.Description (string) Required, 10], [Property: Title.Director (string) MaxLength(255), 11], [Property: Title.Duration (string) MaxLength(255), 12], [Property: Title.ListedIn (string) Required MaxLength(255), 13], [Property: Title.Rating (string) MaxLength(255), 14], [Property: Title.ReleaseYear (short?), 15], [Property: Title.TitleName (string) Required MaxLength(255), 16], [Property: Title.Type (string), 17], [Property: Title.UserRating (int?), 18], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 19] }
                4 -> 3
                5 -> 6
            SELECT t.list_id, t.list_name, t.user_id, t1.id, t1.list_id, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched
            FROM 
            (
                SELECT TOP(1) l.list_id, l.list_name, l.user_id
                FROM lists AS l
                WHERE l.list_id == @__listId_0
            ) AS t
            LEFT JOIN 
            (
                SELECT t0.id, t0.list_id, t0.title_id, t2.title_id AS title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
                FROM title_lists AS t0
                LEFT JOIN titles AS t2 ON t0.title_id == t2.title_id
            ) AS t1 ON t.list_id == t1.list_id
            ORDER BY t.list_id ASC, t1.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, List>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 23:04:44.928 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 23:04:44.928 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 23:04:44.928 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:44.978 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:44.978 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`list_id`, `t`.`list_name`, `t`.`user_id`, `t1`.`id`, `t1`.`list_id`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
FROM (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t2`.`title_id` AS `title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
    FROM `title_lists` AS `t0`
    LEFT JOIN `titles` AS `t2` ON `t0`.`title_id` = `t2`.`title_id`
) AS `t1` ON `t`.`list_id` = `t1`.`list_id`
ORDER BY `t`.`list_id`, `t1`.`id`
2022-07-12 23:04:45.086 -07:00 [INF] Executed DbCommand (108ms) [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`list_id`, `t`.`list_name`, `t`.`user_id`, `t1`.`id`, `t1`.`list_id`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
FROM (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t2`.`title_id` AS `title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
    FROM `title_lists` AS `t0`
    LEFT JOIN `titles` AS `t2` ON `t0`.`title_id` = `t2`.`title_id`
) AS `t1` ON `t`.`list_id` = `t1`.`list_id`
ORDER BY `t`.`list_id`, `t1`.`id`
2022-07-12 23:04:45.241 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 23:04:45.288 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 23:04:45.308 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 23:04:45.337 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 23:04:45.338 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 23:04:45.338 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 23:04:45.339 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-12 23:04:45.340 -07:00 [DBG] A data reader was disposed.
2022-07-12 23:04:45.340 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:45.341 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:04:45.363 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 23:04:45.366 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 23:04:45.366 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-12 23:04:45.367 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-12 23:04:45.368 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-12 23:04:45.369 -07:00 [INF] Executing OkObjectResult, writing value of type 'NetflixTitles.API.Models.ListDto'.
2022-07-12 23:04:45.469 -07:00 [INF] Executed action NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API) in 793.4558ms
2022-07-12 23:04:45.470 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-12 23:04:45.470 -07:00 [DBG] Connection id "0HMJ4IM6NEAH8" completed keep alive response.
2022-07-12 23:04:45.472 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists/11 application/json 23 - 200 1543 application/json;+charset=utf-8 862.9972ms
2022-07-12 23:04:45.473 -07:00 [DBG] Connection id "0HMJ4IM6NEAH8", Request id "0HMJ4IM6NEAH8:00000003": started reading request body.
2022-07-12 23:04:45.473 -07:00 [DBG] Connection id "0HMJ4IM6NEAH8", Request id "0HMJ4IM6NEAH8:00000003": done reading request body.
2022-07-12 23:08:10.885 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/lists/500/titles application/json 23
2022-07-12 23:08:10.890 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists/500/titles'
2022-07-12 23:08:10.891 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.TitlesController.CreateTitle (NetflixTitles.API)' with route pattern 'api/lists/{listId}/titles' is valid for the request path '/api/lists/500/titles'
2022-07-12 23:08:10.892 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.TitlesController.CreateTitle (NetflixTitles.API)'
2022-07-12 23:08:10.894 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 23:08:10.902 -07:00 [DBG] Successfully validated the token.
2022-07-12 23:08:10.903 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 23:08:10.905 -07:00 [DBG] Authorization was successful.
2022-07-12 23:08:10.906 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.TitlesController.CreateTitle (NetflixTitles.API)'
2022-07-12 23:08:10.908 -07:00 [INF] Route matched with {action = "CreateTitle", controller = "Titles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Models.TitleForCreationDto]] CreateTitle(Int32, NetflixTitles.API.Models.TitleForCreationDto) on controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API).
2022-07-12 23:08:10.909 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 23:08:10.909 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 23:08:10.909 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 23:08:10.909 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 23:08:10.909 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 23:08:10.909 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API)
2022-07-12 23:08:10.912 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API)
2022-07-12 23:08:10.913 -07:00 [DBG] Attempting to bind parameter 'listId' of type 'System.Int32' ...
2022-07-12 23:08:10.914 -07:00 [DBG] Attempting to bind parameter 'listId' of type 'System.Int32' using the name 'listId' in request data ...
2022-07-12 23:08:10.914 -07:00 [DBG] Done attempting to bind parameter 'listId' of type 'System.Int32'.
2022-07-12 23:08:10.914 -07:00 [DBG] Done attempting to bind parameter 'listId' of type 'System.Int32'.
2022-07-12 23:08:10.914 -07:00 [DBG] Attempting to validate the bound parameter 'listId' of type 'System.Int32' ...
2022-07-12 23:08:10.914 -07:00 [DBG] Done attempting to validate the bound parameter 'listId' of type 'System.Int32'.
2022-07-12 23:08:10.914 -07:00 [DBG] Attempting to bind parameter 'titleForCreationDto' of type 'NetflixTitles.API.Models.TitleForCreationDto' ...
2022-07-12 23:08:10.914 -07:00 [DBG] Attempting to bind parameter 'titleForCreationDto' of type 'NetflixTitles.API.Models.TitleForCreationDto' using the name '' in request data ...
2022-07-12 23:08:10.915 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-12 23:08:10.915 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-12 23:08:10.916 -07:00 [DBG] Connection id "0HMJ4IM6NEAH8", Request id "0HMJ4IM6NEAH8:00000004": started reading request body.
2022-07-12 23:08:10.916 -07:00 [DBG] Connection id "0HMJ4IM6NEAH8", Request id "0HMJ4IM6NEAH8:00000004": done reading request body.
2022-07-12 23:08:10.922 -07:00 [DBG] Done attempting to bind parameter 'titleForCreationDto' of type 'NetflixTitles.API.Models.TitleForCreationDto'.
2022-07-12 23:08:10.922 -07:00 [DBG] Done attempting to bind parameter 'titleForCreationDto' of type 'NetflixTitles.API.Models.TitleForCreationDto'.
2022-07-12 23:08:10.922 -07:00 [DBG] Attempting to validate the bound parameter 'titleForCreationDto' of type 'NetflixTitles.API.Models.TitleForCreationDto' ...
2022-07-12 23:08:10.936 -07:00 [DBG] Done attempting to validate the bound parameter 'titleForCreationDto' of type 'NetflixTitles.API.Models.TitleForCreationDto'.
2022-07-12 23:08:10.948 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 23:08:10.948 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 23:08:10.949 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:08:10.951 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:08:10.951 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-12 23:08:11.156 -07:00 [INF] Executed DbCommand (154ms) [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-12 23:08:11.307 -07:00 [DBG] A data reader was disposed.
2022-07-12 23:08:11.308 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:08:11.309 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:08:11.324 -07:00 [INF] Executing ForbidResult with authentication schemes ([]).
2022-07-12 23:08:11.336 -07:00 [INF] AuthenticationScheme: Bearer was forbidden.
2022-07-12 23:08:11.337 -07:00 [INF] Executed action NetflixTitles.API.Controllers.TitlesController.CreateTitle (NetflixTitles.API) in 427.542ms
2022-07-12 23:08:11.337 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.TitlesController.CreateTitle (NetflixTitles.API)'
2022-07-12 23:08:11.339 -07:00 [DBG] Connection id "0HMJ4IM6NEAH8" completed keep alive response.
2022-07-12 23:08:11.341 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/lists/500/titles application/json 23 - 403 0 - 456.9567ms
2022-07-12 23:09:01.179 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-12 23:09:01.356 -07:00 [DBG] Hosting starting
2022-07-12 23:09:01.391 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-12 23:09:01.399 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-12 23:09:01.427 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-12 23:09:01.448 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-12 23:09:01.455 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-12 23:09:01.465 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-12 23:09:01.465 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-12 23:09:01.479 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-12 23:09:01.481 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-12 23:09:01.689 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-12 23:09:01.888 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-12 23:09:01.891 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-12 23:09:01.891 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-12 23:09:01.893 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-12 23:09:01.915 -07:00 [INF] Hosting environment: Development
2022-07-12 23:09:01.916 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-12 23:09:01.916 -07:00 [DBG] Hosting started
2022-07-12 23:09:08.409 -07:00 [DBG] Connection id "0HMJ4IOPAF5O7" received FIN.
2022-07-12 23:09:08.430 -07:00 [DBG] Connection id "0HMJ4IOPAF5O7" accepted.
2022-07-12 23:09:08.432 -07:00 [DBG] Connection id "0HMJ4IOPAF5O7" started.
2022-07-12 23:09:08.491 -07:00 [DBG] Connection id "0HMJ4IOPAF5O8" accepted.
2022-07-12 23:09:08.492 -07:00 [DBG] Connection id "0HMJ4IOPAF5O8" started.
2022-07-12 23:09:08.559 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-12 23:09:08.662 -07:00 [DBG] Connection id "0HMJ4IOPAF5O7" stopped.
2022-07-12 23:09:08.718 -07:00 [DBG] Connection id "0HMJ4IOPAF5O7" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-12 23:09:08.826 -07:00 [DBG] Connection 0HMJ4IOPAF5O8 established using the following protocol: "Tls12"
2022-07-12 23:09:08.891 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists/500/titles application/json 23
2022-07-12 23:09:08.895 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-12 23:09:08.966 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists/500/titles'
2022-07-12 23:09:08.974 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)' with route pattern 'api/lists/{listId}/titles' is valid for the request path '/api/lists/500/titles'
2022-07-12 23:09:08.977 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)'
2022-07-12 23:09:09.029 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 23:09:09.296 -07:00 [DBG] Successfully validated the token.
2022-07-12 23:09:09.300 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 23:09:09.311 -07:00 [DBG] Authorization was successful.
2022-07-12 23:09:09.313 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)'
2022-07-12 23:09:09.364 -07:00 [INF] Route matched with {action = "GetTitlesForList", controller = "Titles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Models.TitleDto]]] GetTitlesForList(Int32) on controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API).
2022-07-12 23:09:09.367 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 23:09:09.367 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 23:09:09.368 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 23:09:09.369 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 23:09:09.369 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 23:09:09.370 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API)
2022-07-12 23:09:09.789 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-12 23:09:10.699 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-12 23:09:10.902 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API)
2022-07-12 23:09:10.911 -07:00 [DBG] Attempting to bind parameter 'listId' of type 'System.Int32' ...
2022-07-12 23:09:10.915 -07:00 [DBG] Attempting to bind parameter 'listId' of type 'System.Int32' using the name 'listId' in request data ...
2022-07-12 23:09:10.917 -07:00 [DBG] Done attempting to bind parameter 'listId' of type 'System.Int32'.
2022-07-12 23:09:10.917 -07:00 [DBG] Done attempting to bind parameter 'listId' of type 'System.Int32'.
2022-07-12 23:09:10.917 -07:00 [DBG] Attempting to validate the bound parameter 'listId' of type 'System.Int32' ...
2022-07-12 23:09:10.922 -07:00 [DBG] Done attempting to validate the bound parameter 'listId' of type 'System.Int32'.
2022-07-12 23:09:11.014 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Any(l => l.ListId == __listId_0)'
2022-07-12 23:09:11.206 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: new SingleQueryingEnumerable<bool>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM lists AS l
                WHERE l.list_id == @__listId_0)), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, bool>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 23:09:11.255 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 23:09:11.267 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2022-07-12 23:09:11.292 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:09:12.051 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:09:12.082 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0)
2022-07-12 23:09:12.153 -07:00 [INF] Executed DbCommand (83ms) [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0)
2022-07-12 23:09:12.180 -07:00 [DBG] A data reader was disposed.
2022-07-12 23:09:12.185 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:09:12.187 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:09:12.189 -07:00 [INF] List with id 500 was not found when accessing titles.
2022-07-12 23:09:12.199 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-12 23:09:12.202 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-12 23:09:12.203 -07:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2022-07-12 23:09:12.205 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2022-07-12 23:09:12.205 -07:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2022-07-12 23:09:12.367 -07:00 [INF] Executed action NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API) in 2991.903ms
2022-07-12 23:09:12.372 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)'
2022-07-12 23:09:12.377 -07:00 [DBG] Connection id "0HMJ4IOPAF5O8" completed keep alive response.
2022-07-12 23:09:12.412 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists/500/titles application/json 23 - 404 161 application/problem+json;+charset=utf-8 3525.4172ms
2022-07-12 23:09:12.424 -07:00 [DBG] Connection id "0HMJ4IOPAF5O8", Request id "0HMJ4IOPAF5O8:00000002": started reading request body.
2022-07-12 23:09:12.425 -07:00 [DBG] Connection id "0HMJ4IOPAF5O8", Request id "0HMJ4IOPAF5O8:00000002": done reading request body.
2022-07-12 23:09:18.166 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists/10/titles application/json 23
2022-07-12 23:09:18.173 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists/10/titles'
2022-07-12 23:09:18.173 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)' with route pattern 'api/lists/{listId}/titles' is valid for the request path '/api/lists/10/titles'
2022-07-12 23:09:18.174 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)'
2022-07-12 23:09:18.178 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 23:09:18.193 -07:00 [DBG] Successfully validated the token.
2022-07-12 23:09:18.194 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-12 23:09:18.197 -07:00 [DBG] Authorization was successful.
2022-07-12 23:09:18.198 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)'
2022-07-12 23:09:18.199 -07:00 [INF] Route matched with {action = "GetTitlesForList", controller = "Titles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Models.TitleDto]]] GetTitlesForList(Int32) on controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API).
2022-07-12 23:09:18.200 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-12 23:09:18.200 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-12 23:09:18.200 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-12 23:09:18.200 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-12 23:09:18.200 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-12 23:09:18.201 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API)
2022-07-12 23:09:18.203 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API)
2022-07-12 23:09:18.205 -07:00 [DBG] Attempting to bind parameter 'listId' of type 'System.Int32' ...
2022-07-12 23:09:18.207 -07:00 [DBG] Attempting to bind parameter 'listId' of type 'System.Int32' using the name 'listId' in request data ...
2022-07-12 23:09:18.207 -07:00 [DBG] Done attempting to bind parameter 'listId' of type 'System.Int32'.
2022-07-12 23:09:18.208 -07:00 [DBG] Done attempting to bind parameter 'listId' of type 'System.Int32'.
2022-07-12 23:09:18.208 -07:00 [DBG] Attempting to validate the bound parameter 'listId' of type 'System.Int32' ...
2022-07-12 23:09:18.208 -07:00 [DBG] Done attempting to validate the bound parameter 'listId' of type 'System.Int32'.
2022-07-12 23:09:18.228 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 23:09:18.230 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2022-07-12 23:09:18.233 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:09:18.241 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:09:18.243 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0)
2022-07-12 23:09:18.297 -07:00 [INF] Executed DbCommand (54ms) [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0)
2022-07-12 23:09:18.299 -07:00 [DBG] A data reader was disposed.
2022-07-12 23:09:18.300 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:09:18.300 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:09:18.307 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Any(l => l.ListId == __listId_0 && l.UserId.ToString() == __userClaim_1)'
2022-07-12 23:09:18.370 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: new SingleQueryingEnumerable<bool>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM lists AS l
                WHERE (l.list_id == @__listId_0) && (CAST(l.user_id AS longtext) == @__userClaim_1))), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, bool>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-12 23:09:18.383 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-12 23:09:18.383 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-12 23:09:18.384 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:09:18.414 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:09:18.414 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-12 23:09:18.473 -07:00 [INF] Executed DbCommand (59ms) [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-12 23:09:18.474 -07:00 [DBG] A data reader was disposed.
2022-07-12 23:09:18.474 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:09:18.474 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-12 23:09:18.478 -07:00 [INF] Executing ForbidResult with authentication schemes ([]).
2022-07-12 23:09:18.482 -07:00 [INF] AuthenticationScheme: Bearer was forbidden.
2022-07-12 23:09:18.483 -07:00 [INF] Executed action NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API) in 281.8683ms
2022-07-12 23:09:18.483 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)'
2022-07-12 23:09:18.484 -07:00 [DBG] Connection id "0HMJ4IOPAF5O8" completed keep alive response.
2022-07-12 23:09:18.487 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists/10/titles application/json 23 - 403 0 - 321.6627ms
2022-07-12 23:09:18.487 -07:00 [DBG] Connection id "0HMJ4IOPAF5O8", Request id "0HMJ4IOPAF5O8:00000003": started reading request body.
2022-07-12 23:09:18.487 -07:00 [DBG] Connection id "0HMJ4IOPAF5O8", Request id "0HMJ4IOPAF5O8:00000003": done reading request body.
2022-07-12 23:10:01.862 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/users/5 - -
2022-07-12 23:10:01.865 -07:00 [DBG] 1 candidate(s) found for the request path '/api/users/5'
2022-07-12 23:10:01.866 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)' with route pattern 'api/users/{id}' is valid for the request path '/api/users/5'
2022-07-12 23:10:01.866 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.UserController.GetUser (NetflixTitles.API)'
2022-07-12 23:10:01.869 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-12 23:10:01.874 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-12 23:10:01.882 -07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
ClaimsAuthorizationRequirement:Claim.Type=user_type and Claim.Value is one of the following values: (admin)
2022-07-12 23:10:01.895 -07:00 [INF] AuthenticationScheme: Bearer was challenged.
2022-07-12 23:10:01.896 -07:00 [DBG] Connection id "0HMJ4IOPAF5O8" completed keep alive response.
2022-07-12 23:10:01.898 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/users/5 - - - 401 0 - 36.0380ms
