2022-07-18 16:53:01.599 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-18 16:53:01.773 -07:00 [DBG] Hosting starting
2022-07-18 16:53:01.813 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-18 16:53:01.821 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-18 16:53:01.848 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-18 16:53:01.869 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-18 16:53:01.875 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-18 16:53:01.887 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-18 16:53:01.887 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-18 16:53:01.902 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-18 16:53:01.904 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-18 16:53:02.115 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-18 16:53:02.341 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-18 16:53:02.390 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-18 16:53:02.417 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-18 16:53:02.420 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-18 16:53:02.421 -07:00 [INF] Hosting environment: Development
2022-07-18 16:53:02.422 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-18 16:53:02.423 -07:00 [DBG] Hosting started
2022-07-18 16:53:14.522 -07:00 [DBG] Connection id "0HMJ932MVG19N" received FIN.
2022-07-18 16:53:14.543 -07:00 [DBG] Connection id "0HMJ932MVG19N" accepted.
2022-07-18 16:53:14.546 -07:00 [DBG] Connection id "0HMJ932MVG19N" started.
2022-07-18 16:53:14.554 -07:00 [DBG] Connection id "0HMJ932MVG19O" accepted.
2022-07-18 16:53:14.555 -07:00 [DBG] Connection id "0HMJ932MVG19O" started.
2022-07-18 16:53:14.625 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-18 16:53:14.750 -07:00 [DBG] Connection id "0HMJ932MVG19N" stopped.
2022-07-18 16:53:14.835 -07:00 [DBG] Connection id "0HMJ932MVG19N" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-18 16:53:14.916 -07:00 [DBG] Connection 0HMJ932MVG19O established using the following protocol: "Tls12"
2022-07-18 16:53:14.980 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57
2022-07-18 16:53:14.984 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-18 16:53:15.049 -07:00 [DBG] 1 candidate(s) found for the request path '/api/authentication/authenticate'
2022-07-18 16:53:15.056 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)' with route pattern 'api/authentication/authenticate' is valid for the request path '/api/authentication/authenticate'
2022-07-18 16:53:15.058 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-18 16:53:15.089 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-18 16:53:15.154 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-18 16:53:15.159 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-18 16:53:15.210 -07:00 [INF] Route matched with {action = "Authenticate", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] Authenticate(AuthenticationRequestBody) on controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API).
2022-07-18 16:53:15.212 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-18 16:53:15.213 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-18 16:53:15.214 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-18 16:53:15.214 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-18 16:53:15.214 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-18 16:53:15.216 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-18 16:53:15.681 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-18 16:53:16.587 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-18 16:53:16.594 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-18 16:53:16.601 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-18 16:53:16.605 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' using the name '' in request data ...
2022-07-18 16:53:16.606 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-18 16:53:16.608 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-18 16:53:16.617 -07:00 [DBG] Connection id "0HMJ932MVG19O", Request id "0HMJ932MVG19O:00000002": started reading request body.
2022-07-18 16:53:16.618 -07:00 [DBG] Connection id "0HMJ932MVG19O", Request id "0HMJ932MVG19O:00000002": done reading request body.
2022-07-18 16:53:16.752 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-18 16:53:16.752 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-18 16:53:16.753 -07:00 [DBG] Attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-18 16:53:16.770 -07:00 [DBG] Done attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-18 16:53:16.872 -07:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Where(u => u.Email == __userName_0)
    .Where(u => u.Password == __password_1)
    .Include(u => u.Lists)
    .ThenInclude(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-18 16:53:16.924 -07:00 [DBG] Including navigation: 'User.Lists'.
2022-07-18 16:53:16.962 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-18 16:53:16.969 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-18 16:53:17.247 -07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2022-07-18 16:53:17.268 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: new SingleQueryingEnumerable<User>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 1], [Property: User.Email (string) Required MaxLength(255), 2], [Property: User.Password (string) Required MaxLength(255), 3], [Property: User.UserName (string) Required MaxLength(255), 4], [Property: User.UserType (string), 5] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: List.ListName (string) Required MaxLength(255), 7], [Property: List.UserId (int?) FK Index, 8] }
                3 -> 6
                4 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: TitleList.ListId (int?) FK Index, 10], [Property: TitleList.TitleId (int?) FK Index, 11] }
                5 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 12], [Property: Title.Cast (string), 13], [Property: Title.Country (string) MaxLength(255), 14], [Property: Title.DateAdded (DateOnly?), 15], [Property: Title.Description (string) Required, 16], [Property: Title.Director (string) MaxLength(255), 17], [Property: Title.Duration (string) MaxLength(255), 18], [Property: Title.ListedIn (string) Required MaxLength(255), 19], [Property: Title.Rating (string) MaxLength(255), 20], [Property: Title.ReleaseYear (short?), 21], [Property: Title.TitleName (string) Required MaxLength(255), 22], [Property: Title.Type (string), 23], [Property: Title.UserRating (int?), 24], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 25] }
                6 -> 9
                7 -> 12
            SELECT t.user_id, t.date_created, t.email, t.password, t.user_name, t.user_type, t2.list_id, t2.list_name, t2.user_id, t2.id, t2.list_id0, t2.title_id, t2.title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
            FROM 
            (
                SELECT TOP(1) u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
                FROM users AS u
                WHERE (u.email == @__userName_0) && (u.password == @__password_1)
            ) AS t
            LEFT JOIN 
            (
                SELECT l.list_id, l.list_name, l.user_id, t1.id, t1.list_id AS list_id0, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched
                FROM lists AS l
                LEFT JOIN 
                (
                    SELECT t0.id, t0.list_id, t0.title_id, t3.title_id AS title_id0, t3.cast, t3.country, t3.date_added, t3.description, t3.director, t3.duration, t3.listed_in, t3.rating, t3.release_year, t3.title_name, t3.type, t3.user_rating, t3.watched
                    FROM title_lists AS t0
                    LEFT JOIN titles AS t3 ON t0.title_id == t3.title_id
                ) AS t1 ON l.list_id == t1.list_id
            ) AS t2 ON t.user_id == t2.user_id
            ORDER BY t.user_id ASC, t2.list_id ASC, t2.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, User>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-18 16:53:17.321 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 16:53:17.332 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2022-07-18 16:53:17.358 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:53:17.967 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:53:17.993 -07:00 [DBG] Executing DbCommand [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-18 16:53:18.071 -07:00 [INF] Executed DbCommand (85ms) [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-18 16:53:18.128 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.175 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.200 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.213 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.245 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.246 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.246 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.247 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.247 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.247 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.247 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.247 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.247 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.247 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.247 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.247 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.248 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.249 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.249 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:18.264 -07:00 [DBG] A data reader was disposed.
2022-07-18 16:53:18.269 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:53:18.271 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:53:18.401 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-18 16:53:18.404 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-18 16:53:18.404 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-18 16:53:18.404 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-18 16:53:18.406 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2022-07-18 16:53:18.406 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-07-18 16:53:18.422 -07:00 [INF] Executed action NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API) in 3202.0181ms
2022-07-18 16:53:18.426 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-18 16:53:18.430 -07:00 [DBG] Connection id "0HMJ932MVG19O" completed keep alive response.
2022-07-18 16:53:18.446 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57 - 200 - text/plain;+charset=utf-8 3471.2642ms
2022-07-18 16:53:32.881 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists/11 - -
2022-07-18 16:53:32.888 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists/11'
2022-07-18 16:53:32.889 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)' with route pattern 'api/lists/{id}' is valid for the request path '/api/lists/11'
2022-07-18 16:53:32.889 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-18 16:53:32.906 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-18 16:53:33.003 -07:00 [DBG] Successfully validated the token.
2022-07-18 16:53:33.007 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-18 16:53:33.019 -07:00 [DBG] Authorization was successful.
2022-07-18 16:53:33.021 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-18 16:53:33.038 -07:00 [INF] Route matched with {action = "GetList", controller = "Lists"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Models.ListDto]] GetList(Int32) on controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API).
2022-07-18 16:53:33.038 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-18 16:53:33.039 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-18 16:53:33.039 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-18 16:53:33.039 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-18 16:53:33.039 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-18 16:53:33.039 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-18 16:53:33.236 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-18 16:53:33.237 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2022-07-18 16:53:33.238 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2022-07-18 16:53:33.241 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-18 16:53:33.241 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-18 16:53:33.241 -07:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2022-07-18 16:53:33.242 -07:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2022-07-18 16:53:33.256 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Where(l => l.ListId == __listId_0)
    .Include(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-18 16:53:33.262 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-18 16:53:33.263 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-18 16:53:33.311 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<List>(
    asyncEnumerable: new SingleQueryingEnumerable<List>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: List.ListName (string) Required MaxLength(255), 1], [Property: List.UserId (int?) FK Index, 2] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 3], [Property: TitleList.ListId (int?) FK Index, 4], [Property: TitleList.TitleId (int?) FK Index, 5] }
                3 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Title.Cast (string), 7], [Property: Title.Country (string) MaxLength(255), 8], [Property: Title.DateAdded (DateOnly?), 9], [Property: Title.Description (string) Required, 10], [Property: Title.Director (string) MaxLength(255), 11], [Property: Title.Duration (string) MaxLength(255), 12], [Property: Title.ListedIn (string) Required MaxLength(255), 13], [Property: Title.Rating (string) MaxLength(255), 14], [Property: Title.ReleaseYear (short?), 15], [Property: Title.TitleName (string) Required MaxLength(255), 16], [Property: Title.Type (string), 17], [Property: Title.UserRating (int?), 18], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 19] }
                4 -> 3
                5 -> 6
            SELECT t.list_id, t.list_name, t.user_id, t1.id, t1.list_id, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched
            FROM 
            (
                SELECT TOP(1) l.list_id, l.list_name, l.user_id
                FROM lists AS l
                WHERE l.list_id == @__listId_0
            ) AS t
            LEFT JOIN 
            (
                SELECT t0.id, t0.list_id, t0.title_id, t2.title_id AS title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
                FROM title_lists AS t0
                LEFT JOIN titles AS t2 ON t0.title_id == t2.title_id
            ) AS t1 ON t.list_id == t1.list_id
            ORDER BY t.list_id ASC, t1.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, List>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-18 16:53:33.317 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 16:53:33.318 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-18 16:53:33.320 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:53:33.327 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:53:33.329 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`list_id`, `t`.`list_name`, `t`.`user_id`, `t1`.`id`, `t1`.`list_id`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
FROM (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t2`.`title_id` AS `title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
    FROM `title_lists` AS `t0`
    LEFT JOIN `titles` AS `t2` ON `t0`.`title_id` = `t2`.`title_id`
) AS `t1` ON `t`.`list_id` = `t1`.`list_id`
ORDER BY `t`.`list_id`, `t1`.`id`
2022-07-18 16:53:33.366 -07:00 [INF] Executed DbCommand (38ms) [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`list_id`, `t`.`list_name`, `t`.`user_id`, `t1`.`id`, `t1`.`list_id`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`
FROM (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t2`.`title_id` AS `title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
    FROM `title_lists` AS `t0`
    LEFT JOIN `titles` AS `t2` ON `t0`.`title_id` = `t2`.`title_id`
) AS `t1` ON `t`.`list_id` = `t1`.`list_id`
ORDER BY `t`.`list_id`, `t1`.`id`
2022-07-18 16:53:33.368 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.370 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.370 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.371 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.371 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.371 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.371 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.371 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.371 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.371 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.372 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.372 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.372 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.372 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:53:33.373 -07:00 [DBG] A data reader was disposed.
2022-07-18 16:53:33.373 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:53:33.374 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:53:33.379 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Any(l => l.ListId == __listId_0 && l.UserId.ToString() == __userClaim_1)'
2022-07-18 16:53:33.389 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: new SingleQueryingEnumerable<bool>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM lists AS l
                WHERE (l.list_id == @__listId_0) && (CAST(l.user_id AS longtext) == @__userClaim_1))), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, bool>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-18 16:53:33.405 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 16:53:33.422 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (17ms).
2022-07-18 16:53:33.423 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:53:33.667 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:53:33.669 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-18 16:53:33.850 -07:00 [INF] Executed DbCommand (158ms) [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-18 16:53:33.933 -07:00 [DBG] A data reader was disposed.
2022-07-18 16:53:33.933 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:53:33.934 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:53:33.977 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-18 16:53:33.978 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-18 16:53:33.978 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-18 16:53:33.978 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-18 16:53:33.978 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-18 16:53:33.979 -07:00 [INF] Executing OkObjectResult, writing value of type 'NetflixTitles.API.Models.ListDto'.
2022-07-18 16:53:34.060 -07:00 [INF] Executed action NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API) in 1020.3945ms
2022-07-18 16:53:34.060 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-18 16:53:34.061 -07:00 [DBG] Connection id "0HMJ932MVG19O" completed keep alive response.
2022-07-18 16:53:34.063 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists/11 - - - 200 3670 application/json;+charset=utf-8 1182.5362ms
2022-07-18 16:54:45.042 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-18 16:54:45.201 -07:00 [DBG] Hosting starting
2022-07-18 16:54:45.232 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-18 16:54:45.240 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-18 16:54:45.267 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-18 16:54:45.287 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-18 16:54:45.293 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-18 16:54:45.303 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-18 16:54:45.303 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-18 16:54:45.316 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-18 16:54:45.318 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-18 16:54:45.514 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-18 16:54:45.739 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-18 16:54:45.740 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-18 16:54:45.740 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-18 16:54:45.744 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-18 16:54:45.744 -07:00 [INF] Hosting environment: Development
2022-07-18 16:54:45.745 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-18 16:54:45.745 -07:00 [DBG] Hosting started
2022-07-18 16:54:48.260 -07:00 [DBG] Connection id "0HMJ933ITEJ9D" received FIN.
2022-07-18 16:54:48.283 -07:00 [DBG] Connection id "0HMJ933ITEJ9D" accepted.
2022-07-18 16:54:48.286 -07:00 [DBG] Connection id "0HMJ933ITEJ9D" started.
2022-07-18 16:54:48.320 -07:00 [DBG] Connection id "0HMJ933ITEJ9E" accepted.
2022-07-18 16:54:48.322 -07:00 [DBG] Connection id "0HMJ933ITEJ9E" started.
2022-07-18 16:54:48.365 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-18 16:54:48.612 -07:00 [DBG] Connection id "0HMJ933ITEJ9D" stopped.
2022-07-18 16:54:48.644 -07:00 [DBG] Connection id "0HMJ933ITEJ9D" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-18 16:54:48.660 -07:00 [DBG] Connection 0HMJ933ITEJ9E established using the following protocol: "Tls12"
2022-07-18 16:54:48.725 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists/11 - -
2022-07-18 16:54:48.728 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-18 16:54:48.796 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists/11'
2022-07-18 16:54:48.804 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)' with route pattern 'api/lists/{id}' is valid for the request path '/api/lists/11'
2022-07-18 16:54:48.806 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-18 16:54:48.858 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-18 16:54:49.130 -07:00 [DBG] Successfully validated the token.
2022-07-18 16:54:49.133 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-18 16:54:49.144 -07:00 [DBG] Authorization was successful.
2022-07-18 16:54:49.146 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-18 16:54:49.202 -07:00 [INF] Route matched with {action = "GetList", controller = "Lists"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Models.ListDto]] GetList(Int32) on controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API).
2022-07-18 16:54:49.204 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-18 16:54:49.205 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-18 16:54:49.206 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-18 16:54:49.207 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-18 16:54:49.207 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-18 16:54:49.208 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-18 16:54:49.626 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-18 16:54:50.562 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-18 16:54:50.767 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.ListsController (NetflixTitles.API)
2022-07-18 16:54:50.775 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2022-07-18 16:54:50.779 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2022-07-18 16:54:50.781 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-18 16:54:50.781 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-18 16:54:50.782 -07:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2022-07-18 16:54:50.786 -07:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2022-07-18 16:54:50.889 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Where(l => l.ListId == __listId_0)
    .Include(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .Include(l => l.User)
    .FirstOrDefault()'
2022-07-18 16:54:50.940 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-18 16:54:50.978 -07:00 [DBG] Including navigation: 'List.User'.
2022-07-18 16:54:50.984 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-18 16:54:51.288 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<List>(
    asyncEnumerable: new SingleQueryingEnumerable<List>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: List.ListName (string) Required MaxLength(255), 1], [Property: List.UserId (int?) FK Index, 2] }
                1 -> 0
                2 -> 3
                3 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: TitleList.ListId (int?) FK Index, 5], [Property: TitleList.TitleId (int?) FK Index, 6] }
                4 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: Title.Cast (string), 8], [Property: Title.Country (string) MaxLength(255), 9], [Property: Title.DateAdded (DateOnly?), 10], [Property: Title.Description (string) Required, 11], [Property: Title.Director (string) MaxLength(255), 12], [Property: Title.Duration (string) MaxLength(255), 13], [Property: Title.ListedIn (string) Required MaxLength(255), 14], [Property: Title.Rating (string) MaxLength(255), 15], [Property: Title.ReleaseYear (short?), 16], [Property: Title.TitleName (string) Required MaxLength(255), 17], [Property: Title.Type (string), 18], [Property: Title.UserRating (int?), 19], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 20] }
                5 -> 4
                6 -> 7
                7 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 3], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 21], [Property: User.Email (string) Required MaxLength(255), 22], [Property: User.Password (string) Required MaxLength(255), 23], [Property: User.UserName (string) Required MaxLength(255), 24], [Property: User.UserType (string), 25] }
            SELECT t.list_id, t.list_name, t.user_id, t.user_id0, t1.id, t1.list_id, t1.title_id, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched, t.date_created, t.email, t.password, t.user_name, t.user_type
            FROM 
            (
                SELECT TOP(1) l.list_id, l.list_name, l.user_id, u.user_id AS user_id0, u.date_created, u.email, u.password, u.user_name, u.user_type
                FROM lists AS l
                LEFT JOIN users AS u ON l.user_id == u.user_id
                WHERE l.list_id == @__listId_0
            ) AS t
            LEFT JOIN 
            (
                SELECT t0.id, t0.list_id, t0.title_id, t2.title_id AS title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched
                FROM title_lists AS t0
                LEFT JOIN titles AS t2 ON t0.title_id == t2.title_id
            ) AS t1 ON t.list_id == t1.list_id
            ORDER BY t.list_id ASC, t.user_id0 ASC, t1.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, List>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-18 16:54:51.340 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 16:54:51.351 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2022-07-18 16:54:51.376 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:54:52.048 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:54:52.075 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`list_id`, `t`.`list_name`, `t`.`user_id`, `t`.`user_id0`, `t1`.`id`, `t1`.`list_id`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`
FROM (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `u`.`user_id` AS `user_id0`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `lists` AS `l`
    LEFT JOIN `users` AS `u` ON `l`.`user_id` = `u`.`user_id`
    WHERE `l`.`list_id` = @__listId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t2`.`title_id` AS `title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
    FROM `title_lists` AS `t0`
    LEFT JOIN `titles` AS `t2` ON `t0`.`title_id` = `t2`.`title_id`
) AS `t1` ON `t`.`list_id` = `t1`.`list_id`
ORDER BY `t`.`list_id`, `t`.`user_id0`, `t1`.`id`
2022-07-18 16:54:52.159 -07:00 [INF] Executed DbCommand (90ms) [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`list_id`, `t`.`list_name`, `t`.`user_id`, `t`.`user_id0`, `t1`.`id`, `t1`.`list_id`, `t1`.`title_id`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`
FROM (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `u`.`user_id` AS `user_id0`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `lists` AS `l`
    LEFT JOIN `users` AS `u` ON `l`.`user_id` = `u`.`user_id`
    WHERE `l`.`list_id` = @__listId_0
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t2`.`title_id` AS `title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched`
    FROM `title_lists` AS `t0`
    LEFT JOIN `titles` AS `t2` ON `t0`.`title_id` = `t2`.`title_id`
) AS `t1` ON `t`.`list_id` = `t1`.`list_id`
ORDER BY `t`.`list_id`, `t`.`user_id0`, `t1`.`id`
2022-07-18 16:54:52.214 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.247 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.284 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.296 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.337 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.338 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.338 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.338 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.338 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.339 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.339 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.339 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.339 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.339 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.339 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 16:54:52.355 -07:00 [DBG] A data reader was disposed.
2022-07-18 16:54:52.358 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:54:52.361 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:54:52.371 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Any(l => l.ListId == __listId_0 && l.UserId.ToString() == __userClaim_1)'
2022-07-18 16:54:52.388 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: new SingleQueryingEnumerable<bool>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM lists AS l
                WHERE (l.list_id == @__listId_0) && (CAST(l.user_id AS longtext) == @__userClaim_1))), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, bool>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-18 16:54:52.406 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 16:54:52.406 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-18 16:54:52.408 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:54:52.518 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:54:52.546 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-18 16:54:52.723 -07:00 [INF] Executed DbCommand (201ms) [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-18 16:54:52.734 -07:00 [DBG] A data reader was disposed.
2022-07-18 16:54:52.735 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:54:52.735 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 16:54:52.789 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-18 16:54:52.794 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-18 16:54:52.794 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-18 16:54:52.794 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-18 16:54:52.796 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-18 16:54:52.797 -07:00 [INF] Executing OkObjectResult, writing value of type 'NetflixTitles.API.Models.ListDto'.
2022-07-18 16:54:52.982 -07:00 [INF] Executed action NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API) in 3767.8803ms
2022-07-18 16:54:52.986 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.ListsController.GetList (NetflixTitles.API)'
2022-07-18 16:54:52.991 -07:00 [DBG] Connection id "0HMJ933ITEJ9E" completed keep alive response.
2022-07-18 16:54:53.008 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists/11 - - - 200 3674 application/json;+charset=utf-8 4285.9196ms
2022-07-18 17:21:26.115 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-18 17:21:27.022 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-18 17:21:27.216 -07:00 [DBG] DetectChanges starting for 'netflix_appContext'.
2022-07-18 17:21:27.219 -07:00 [DBG] DetectChanges completed for 'netflix_appContext'.
2022-07-18 17:24:04.613 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-18 17:24:05.558 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-18 17:24:05.599 -07:00 [DBG] Migrating using database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.610 -07:00 [DBG] Opening connection to database '' on server 'localhost'.
2022-07-18 17:24:05.633 -07:00 [DBG] Opened connection to database '' on server 'localhost'.
2022-07-18 17:24:05.704 -07:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2022-07-18 17:24:05.713 -07:00 [DBG] Created DbCommand for 'ExecuteScalar' (6ms).
2022-07-18 17:24:05.716 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.732 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.742 -07:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='netflix_app' AND TABLE_NAME='__EFMigrationsHistory';
2022-07-18 17:24:05.766 -07:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='netflix_app' AND TABLE_NAME='__EFMigrationsHistory';
2022-07-18 17:24:05.769 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.770 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.771 -07:00 [DBG] Opening connection to database '' on server 'localhost'.
2022-07-18 17:24:05.785 -07:00 [DBG] Opened connection to database '' on server 'localhost'.
2022-07-18 17:24:05.897 -07:00 [DBG] DetectChanges starting for 'netflix_appContext'.
2022-07-18 17:24:05.900 -07:00 [DBG] DetectChanges completed for 'netflix_appContext'.
2022-07-18 17:24:05.930 -07:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2022-07-18 17:24:05.930 -07:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2022-07-18 17:24:05.930 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.934 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.935 -07:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE `__EFMigrationsHistory` (
    `MigrationId` varchar(150) CHARACTER SET utf8mb4 NOT NULL,
    `ProductVersion` varchar(32) CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK___EFMigrationsHistory` PRIMARY KEY (`MigrationId`)
) CHARACTER SET=utf8mb4;
2022-07-18 17:24:05.957 -07:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE `__EFMigrationsHistory` (
    `MigrationId` varchar(150) CHARACTER SET utf8mb4 NOT NULL,
    `ProductVersion` varchar(32) CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK___EFMigrationsHistory` PRIMARY KEY (`MigrationId`)
) CHARACTER SET=utf8mb4;
2022-07-18 17:24:05.958 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.958 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.959 -07:00 [DBG] Opening connection to database '' on server 'localhost'.
2022-07-18 17:24:05.973 -07:00 [DBG] Opened connection to database '' on server 'localhost'.
2022-07-18 17:24:05.974 -07:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2022-07-18 17:24:05.974 -07:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2022-07-18 17:24:05.974 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.974 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.975 -07:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='netflix_app' AND TABLE_NAME='__EFMigrationsHistory';
2022-07-18 17:24:05.980 -07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='netflix_app' AND TABLE_NAME='__EFMigrationsHistory';
2022-07-18 17:24:05.980 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.980 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.982 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 17:24:05.983 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-18 17:24:05.983 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.983 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.984 -07:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
2022-07-18 17:24:05.989 -07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
2022-07-18 17:24:05.992 -07:00 [DBG] A data reader was disposed.
2022-07-18 17:24:05.992 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:05.992 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:06.005 -07:00 [INF] Applying migration '20220719002127_FirstMigration'.
2022-07-18 17:24:06.040 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:06.041 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:06.043 -07:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2022-07-18 17:24:06.048 -07:00 [DBG] Began transaction with isolation level 'Unspecified'.
2022-07-18 17:24:06.049 -07:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2022-07-18 17:24:06.049 -07:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2022-07-18 17:24:06.049 -07:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20220719002127_FirstMigration', '6.0.6');
2022-07-18 17:24:06.051 -07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20220719002127_FirstMigration', '6.0.6');
2022-07-18 17:24:06.053 -07:00 [DBG] Committing transaction.
2022-07-18 17:24:06.056 -07:00 [DBG] Committed transaction.
2022-07-18 17:24:06.057 -07:00 [DBG] Disposing transaction.
2022-07-18 17:24:06.057 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:24:06.057 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:46:01.101 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-18 17:46:02.007 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-18 17:46:02.216 -07:00 [DBG] DetectChanges starting for 'netflix_appContext'.
2022-07-18 17:46:02.220 -07:00 [DBG] DetectChanges completed for 'netflix_appContext'.
2022-07-18 17:46:02.221 -07:00 [DBG] DetectChanges starting for 'netflix_appContext'.
2022-07-18 17:46:02.221 -07:00 [DBG] DetectChanges completed for 'netflix_appContext'.
2022-07-18 17:46:02.232 -07:00 [DBG] DetectChanges starting for 'netflix_appContext'.
2022-07-18 17:46:02.232 -07:00 [DBG] DetectChanges completed for 'netflix_appContext'.
2022-07-18 17:46:02.232 -07:00 [DBG] DetectChanges starting for 'netflix_appContext'.
2022-07-18 17:46:02.232 -07:00 [DBG] DetectChanges completed for 'netflix_appContext'.
2022-07-18 17:50:22.464 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-18 17:50:23.378 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-18 17:50:23.419 -07:00 [DBG] Migrating using database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.429 -07:00 [DBG] Opening connection to database '' on server 'localhost'.
2022-07-18 17:50:23.449 -07:00 [DBG] Opened connection to database '' on server 'localhost'.
2022-07-18 17:50:23.516 -07:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2022-07-18 17:50:23.522 -07:00 [DBG] Created DbCommand for 'ExecuteScalar' (5ms).
2022-07-18 17:50:23.525 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.542 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.552 -07:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='netflix_app' AND TABLE_NAME='__EFMigrationsHistory';
2022-07-18 17:50:23.578 -07:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='netflix_app' AND TABLE_NAME='__EFMigrationsHistory';
2022-07-18 17:50:23.580 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.582 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.583 -07:00 [DBG] Opening connection to database '' on server 'localhost'.
2022-07-18 17:50:23.595 -07:00 [DBG] Opened connection to database '' on server 'localhost'.
2022-07-18 17:50:23.598 -07:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2022-07-18 17:50:23.599 -07:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2022-07-18 17:50:23.599 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.602 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.603 -07:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='netflix_app' AND TABLE_NAME='__EFMigrationsHistory';
2022-07-18 17:50:23.606 -07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='netflix_app' AND TABLE_NAME='__EFMigrationsHistory';
2022-07-18 17:50:23.606 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.606 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.641 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 17:50:23.641 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-18 17:50:23.641 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.642 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.642 -07:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
2022-07-18 17:50:23.646 -07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
2022-07-18 17:50:23.649 -07:00 [DBG] A data reader was disposed.
2022-07-18 17:50:23.649 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.649 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.663 -07:00 [INF] Applying migration '20220719004602_NetflixTitlesDBAddUserRatingAndWatchedToTitleLists'.
2022-07-18 17:50:23.710 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.711 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.713 -07:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2022-07-18 17:50:23.718 -07:00 [DBG] Began transaction with isolation level 'Unspecified'.
2022-07-18 17:50:23.719 -07:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2022-07-18 17:50:23.720 -07:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2022-07-18 17:50:23.721 -07:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE `title_lists` ADD `UserRating` int NULL;
2022-07-18 17:50:23.734 -07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE `title_lists` ADD `UserRating` int NULL;
2022-07-18 17:50:23.735 -07:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2022-07-18 17:50:23.735 -07:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2022-07-18 17:50:23.735 -07:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE `title_lists` ADD `Watched` tinyint(1) NULL;
2022-07-18 17:50:23.742 -07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE `title_lists` ADD `Watched` tinyint(1) NULL;
2022-07-18 17:50:23.742 -07:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2022-07-18 17:50:23.742 -07:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2022-07-18 17:50:23.742 -07:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE `titles` DROP COLUMN `UserRating`;
2022-07-18 17:50:23.749 -07:00 [ERR] Failed executing DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE `titles` DROP COLUMN `UserRating`;
2022-07-18 17:50:23.753 -07:00 [DBG] Disposing transaction.
2022-07-18 17:50:23.754 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 17:50:23.754 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:10.145 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-18 18:05:10.309 -07:00 [DBG] Hosting starting
2022-07-18 18:05:10.347 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-18 18:05:10.355 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-18 18:05:10.382 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-18 18:05:10.402 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-18 18:05:10.408 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-18 18:05:10.418 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-18 18:05:10.418 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-18 18:05:10.431 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-18 18:05:10.433 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-18 18:05:10.634 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-18 18:05:10.802 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-18 18:05:10.805 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-18 18:05:10.805 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-18 18:05:10.807 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-18 18:05:10.808 -07:00 [INF] Hosting environment: Development
2022-07-18 18:05:10.808 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-18 18:05:10.808 -07:00 [DBG] Hosting started
2022-07-18 18:05:13.910 -07:00 [DBG] Connection id "0HMJ94AU8CJ8R" received FIN.
2022-07-18 18:05:13.931 -07:00 [DBG] Connection id "0HMJ94AU8CJ8R" accepted.
2022-07-18 18:05:13.933 -07:00 [DBG] Connection id "0HMJ94AU8CJ8R" started.
2022-07-18 18:05:13.967 -07:00 [DBG] Connection id "0HMJ94AU8CJ8S" accepted.
2022-07-18 18:05:13.969 -07:00 [DBG] Connection id "0HMJ94AU8CJ8S" started.
2022-07-18 18:05:14.043 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-18 18:05:14.259 -07:00 [DBG] Connection id "0HMJ94AU8CJ8R" stopped.
2022-07-18 18:05:14.266 -07:00 [DBG] Connection id "0HMJ94AU8CJ8R" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-18 18:05:14.284 -07:00 [DBG] Connection 0HMJ94AU8CJ8S established using the following protocol: "Tls12"
2022-07-18 18:05:14.347 -07:00 [INF] Request starting HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57
2022-07-18 18:05:14.351 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-18 18:05:14.422 -07:00 [DBG] 1 candidate(s) found for the request path '/api/authentication/authenticate'
2022-07-18 18:05:14.429 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)' with route pattern 'api/authentication/authenticate' is valid for the request path '/api/authentication/authenticate'
2022-07-18 18:05:14.431 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-18 18:05:14.466 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-18 18:05:14.565 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-18 18:05:14.570 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-18 18:05:14.629 -07:00 [INF] Route matched with {action = "Authenticate", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] Authenticate(AuthenticationRequestBody) on controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API).
2022-07-18 18:05:14.632 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-18 18:05:14.632 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-18 18:05:14.633 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-18 18:05:14.634 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-18 18:05:14.635 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-18 18:05:14.636 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-18 18:05:15.104 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-18 18:05:16.072 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-18 18:05:16.080 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.AuthenticationController (NetflixTitles.API)
2022-07-18 18:05:16.087 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-18 18:05:16.091 -07:00 [DBG] Attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' using the name '' in request data ...
2022-07-18 18:05:16.092 -07:00 [DBG] Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonPatchInputFormatter' for content type 'application/json'.
2022-07-18 18:05:16.094 -07:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonInputFormatter' for content type 'application/json'.
2022-07-18 18:05:16.101 -07:00 [DBG] Connection id "0HMJ94AU8CJ8S", Request id "0HMJ94AU8CJ8S:00000002": started reading request body.
2022-07-18 18:05:16.102 -07:00 [DBG] Connection id "0HMJ94AU8CJ8S", Request id "0HMJ94AU8CJ8S:00000002": done reading request body.
2022-07-18 18:05:16.240 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-18 18:05:16.240 -07:00 [DBG] Done attempting to bind parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-18 18:05:16.240 -07:00 [DBG] Attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody' ...
2022-07-18 18:05:16.258 -07:00 [DBG] Done attempting to validate the bound parameter 'authenticationRequestBody' of type 'NetflixTitles.API.Controllers.AuthenticationController+AuthenticationRequestBody'.
2022-07-18 18:05:16.361 -07:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Where(u => u.Email == __userName_0)
    .Where(u => u.Password == __password_1)
    .Include(u => u.Lists)
    .ThenInclude(l => l.TitleLists)
    .ThenInclude(tl => tl.Title)
    .FirstOrDefault()'
2022-07-18 18:05:16.415 -07:00 [DBG] Including navigation: 'User.Lists'.
2022-07-18 18:05:16.452 -07:00 [DBG] Including navigation: 'List.TitleLists'.
2022-07-18 18:05:16.459 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-18 18:05:16.739 -07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2022-07-18 18:05:16.761 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: new SingleQueryingEnumerable<User>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.DateCreated (DateTime?) ValueGenerated.OnAdd, 1], [Property: User.Email (string) Required MaxLength(255), 2], [Property: User.Password (string) Required MaxLength(255), 3], [Property: User.UserName (string) Required MaxLength(255), 4], [Property: User.UserType (string), 5] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: List.ListId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: List.ListName (string) Required MaxLength(255), 7], [Property: List.UserId (int?) FK Index, 8] }
                3 -> 6
                4 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: TitleList.ListId (int?) FK Index, 10], [Property: TitleList.TitleId (int?) FK Index, 11], [Property: TitleList.UserRating (int?), 12], [Property: TitleList.Watched (bool?), 13] }
                5 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 14], [Property: Title.Cast (string), 15], [Property: Title.Country (string) MaxLength(255), 16], [Property: Title.DateAdded (DateOnly?), 17], [Property: Title.Description (string) Required, 18], [Property: Title.Director (string) MaxLength(255), 19], [Property: Title.Duration (string) MaxLength(255), 20], [Property: Title.ListedIn (string) Required MaxLength(255), 21], [Property: Title.Rating (string) MaxLength(255), 22], [Property: Title.ReleaseYear (short?), 23], [Property: Title.TitleName (string) Required MaxLength(255), 24], [Property: Title.Type (string), 25], [Property: Title.UserRating (int?), 26], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 27] }
                6 -> 9
                7 -> 14
            SELECT t.user_id, t.date_created, t.email, t.password, t.user_name, t.user_type, t2.list_id, t2.list_name, t2.user_id, t2.id, t2.list_id0, t2.title_id, t2.UserRating, t2.Watched, t2.title_id0, t2.cast, t2.country, t2.date_added, t2.description, t2.director, t2.duration, t2.listed_in, t2.rating, t2.release_year, t2.title_name, t2.type, t2.user_rating, t2.watched0
            FROM 
            (
                SELECT TOP(1) u.user_id, u.date_created, u.email, u.password, u.user_name, u.user_type
                FROM users AS u
                WHERE (u.email == @__userName_0) && (u.password == @__password_1)
            ) AS t
            LEFT JOIN 
            (
                SELECT l.list_id, l.list_name, l.user_id, t1.id, t1.list_id AS list_id0, t1.title_id, t1.UserRating, t1.Watched, t1.title_id0, t1.cast, t1.country, t1.date_added, t1.description, t1.director, t1.duration, t1.listed_in, t1.rating, t1.release_year, t1.title_name, t1.type, t1.user_rating, t1.watched0
                FROM lists AS l
                LEFT JOIN 
                (
                    SELECT t0.id, t0.list_id, t0.title_id, t0.UserRating, t0.Watched, t3.title_id AS title_id0, t3.cast, t3.country, t3.date_added, t3.description, t3.director, t3.duration, t3.listed_in, t3.rating, t3.release_year, t3.title_name, t3.type, t3.user_rating, t3.watched AS watched0
                    FROM title_lists AS t0
                    LEFT JOIN titles AS t3 ON t0.title_id == t3.title_id
                ) AS t1 ON l.list_id == t1.list_id
            ) AS t2 ON t.user_id == t2.user_id
            ORDER BY t.user_id ASC, t2.list_id ASC, t2.id ASC), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, User>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-18 18:05:16.816 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 18:05:16.827 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2022-07-18 18:05:16.855 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:17.312 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:17.337 -07:00 [DBG] Executing DbCommand [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`UserRating`, `t2`.`Watched`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched0`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`UserRating`, `t1`.`Watched`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched0`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t0`.`UserRating`, `t0`.`Watched`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched` AS `watched0`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-18 18:05:17.406 -07:00 [INF] Executed DbCommand (77ms) [Parameters=[@__userName_0='?' (Size = 255), @__password_1='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`user_id`, `t`.`date_created`, `t`.`email`, `t`.`password`, `t`.`user_name`, `t`.`user_type`, `t2`.`list_id`, `t2`.`list_name`, `t2`.`user_id`, `t2`.`id`, `t2`.`list_id0`, `t2`.`title_id`, `t2`.`UserRating`, `t2`.`Watched`, `t2`.`title_id0`, `t2`.`cast`, `t2`.`country`, `t2`.`date_added`, `t2`.`description`, `t2`.`director`, `t2`.`duration`, `t2`.`listed_in`, `t2`.`rating`, `t2`.`release_year`, `t2`.`title_name`, `t2`.`type`, `t2`.`user_rating`, `t2`.`watched0`
FROM (
    SELECT `u`.`user_id`, `u`.`date_created`, `u`.`email`, `u`.`password`, `u`.`user_name`, `u`.`user_type`
    FROM `users` AS `u`
    WHERE (`u`.`email` = @__userName_0) AND (`u`.`password` = @__password_1)
    LIMIT 1
) AS `t`
LEFT JOIN (
    SELECT `l`.`list_id`, `l`.`list_name`, `l`.`user_id`, `t1`.`id`, `t1`.`list_id` AS `list_id0`, `t1`.`title_id`, `t1`.`UserRating`, `t1`.`Watched`, `t1`.`title_id0`, `t1`.`cast`, `t1`.`country`, `t1`.`date_added`, `t1`.`description`, `t1`.`director`, `t1`.`duration`, `t1`.`listed_in`, `t1`.`rating`, `t1`.`release_year`, `t1`.`title_name`, `t1`.`type`, `t1`.`user_rating`, `t1`.`watched0`
    FROM `lists` AS `l`
    LEFT JOIN (
        SELECT `t0`.`id`, `t0`.`list_id`, `t0`.`title_id`, `t0`.`UserRating`, `t0`.`Watched`, `t3`.`title_id` AS `title_id0`, `t3`.`cast`, `t3`.`country`, `t3`.`date_added`, `t3`.`description`, `t3`.`director`, `t3`.`duration`, `t3`.`listed_in`, `t3`.`rating`, `t3`.`release_year`, `t3`.`title_name`, `t3`.`type`, `t3`.`user_rating`, `t3`.`watched` AS `watched0`
        FROM `title_lists` AS `t0`
        LEFT JOIN `titles` AS `t3` ON `t0`.`title_id` = `t3`.`title_id`
    ) AS `t1` ON `l`.`list_id` = `t1`.`list_id`
) AS `t2` ON `t`.`user_id` = `t2`.`user_id`
ORDER BY `t`.`user_id`, `t2`.`list_id`, `t2`.`id`
2022-07-18 18:05:17.453 -07:00 [DBG] Context 'netflix_appContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.495 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.515 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.530 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.557 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.558 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.559 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.559 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.559 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.560 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.560 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.560 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.560 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.560 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.560 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.560 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.561 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.561 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.561 -07:00 [DBG] Context 'netflix_appContext' started tracking 'List' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:17.577 -07:00 [DBG] A data reader was disposed.
2022-07-18 18:05:17.581 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:17.583 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:17.708 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-18 18:05:17.711 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-18 18:05:17.711 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-18 18:05:17.711 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-18 18:05:17.713 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2022-07-18 18:05:17.713 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2022-07-18 18:05:17.730 -07:00 [INF] Executed action NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API) in 3089.2994ms
2022-07-18 18:05:17.734 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.AuthenticationController.Authenticate (NetflixTitles.API)'
2022-07-18 18:05:17.739 -07:00 [DBG] Connection id "0HMJ94AU8CJ8S" completed keep alive response.
2022-07-18 18:05:17.756 -07:00 [INF] Request finished HTTP/1.1 POST https://localhost:7073/api/authentication/authenticate application/json 57 - 200 - text/plain;+charset=utf-8 3413.8700ms
2022-07-18 18:05:46.130 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists/11/titles - -
2022-07-18 18:05:46.144 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists/11/titles'
2022-07-18 18:05:46.146 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)' with route pattern 'api/lists/{listId}/titles' is valid for the request path '/api/lists/11/titles'
2022-07-18 18:05:46.146 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)'
2022-07-18 18:05:46.170 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-18 18:05:46.261 -07:00 [DBG] Successfully validated the token.
2022-07-18 18:05:46.264 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-18 18:05:46.275 -07:00 [DBG] Authorization was successful.
2022-07-18 18:05:46.277 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)'
2022-07-18 18:05:46.293 -07:00 [INF] Route matched with {action = "GetTitlesForList", controller = "Titles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Models.TitleDto]]] GetTitlesForList(Int32) on controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API).
2022-07-18 18:05:46.293 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-18 18:05:46.293 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-18 18:05:46.294 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-18 18:05:46.294 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-18 18:05:46.294 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-18 18:05:46.294 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API)
2022-07-18 18:05:46.485 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API)
2022-07-18 18:05:46.486 -07:00 [DBG] Attempting to bind parameter 'listId' of type 'System.Int32' ...
2022-07-18 18:05:46.487 -07:00 [DBG] Attempting to bind parameter 'listId' of type 'System.Int32' using the name 'listId' in request data ...
2022-07-18 18:05:46.489 -07:00 [DBG] Done attempting to bind parameter 'listId' of type 'System.Int32'.
2022-07-18 18:05:46.489 -07:00 [DBG] Done attempting to bind parameter 'listId' of type 'System.Int32'.
2022-07-18 18:05:46.489 -07:00 [DBG] Attempting to validate the bound parameter 'listId' of type 'System.Int32' ...
2022-07-18 18:05:46.491 -07:00 [DBG] Done attempting to validate the bound parameter 'listId' of type 'System.Int32'.
2022-07-18 18:05:46.504 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Any(l => l.ListId == __listId_0)'
2022-07-18 18:05:46.523 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: new SingleQueryingEnumerable<bool>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM lists AS l
                WHERE l.list_id == @__listId_0)), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, bool>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-18 18:05:46.534 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 18:05:46.535 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-18 18:05:46.537 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:46.593 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:46.595 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0)
2022-07-18 18:05:46.687 -07:00 [INF] Executed DbCommand (92ms) [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0)
2022-07-18 18:05:46.691 -07:00 [DBG] A data reader was disposed.
2022-07-18 18:05:46.692 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:46.693 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:46.697 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Any(l => l.ListId == __listId_0 && l.UserId.ToString() == __userClaim_1)'
2022-07-18 18:05:46.707 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: new SingleQueryingEnumerable<bool>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM lists AS l
                WHERE (l.list_id == @__listId_0) && (CAST(l.user_id AS longtext) == @__userClaim_1))), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, bool>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-18 18:05:46.717 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 18:05:46.717 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-18 18:05:46.717 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:46.879 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:46.880 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-18 18:05:47.073 -07:00 [INF] Executed DbCommand (167ms) [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-18 18:05:47.091 -07:00 [DBG] A data reader was disposed.
2022-07-18 18:05:47.118 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:47.119 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:47.218 -07:00 [DBG] Compiling query expression: 
'DbSet<TitleList>()
    .Where(tl => tl.ListId == __listId_0)
    .Include(t => t.Title)'
2022-07-18 18:05:47.223 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-18 18:05:47.247 -07:00 [DBG] Generated query execution expression: 
'queryContext => new SingleQueryingEnumerable<TitleList>(
    (RelationalQueryContext)queryContext, 
    RelationalCommandCache.SelectExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TitleList.ListId (int?) FK Index, 1], [Property: TitleList.TitleId (int?) FK Index, 2], [Property: TitleList.UserRating (int?), 3], [Property: TitleList.Watched (bool?), 4] }
            1 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Title.Cast (string), 6], [Property: Title.Country (string) MaxLength(255), 7], [Property: Title.DateAdded (DateOnly?), 8], [Property: Title.Description (string) Required, 9], [Property: Title.Director (string) MaxLength(255), 10], [Property: Title.Duration (string) MaxLength(255), 11], [Property: Title.ListedIn (string) Required MaxLength(255), 12], [Property: Title.Rating (string) MaxLength(255), 13], [Property: Title.ReleaseYear (short?), 14], [Property: Title.TitleName (string) Required MaxLength(255), 15], [Property: Title.Type (string), 16], [Property: Title.UserRating (int?), 17], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 18] }
        SELECT t.id, t.list_id, t.title_id, t.UserRating, t.Watched, t0.title_id, t0.cast, t0.country, t0.date_added, t0.description, t0.director, t0.duration, t0.listed_in, t0.rating, t0.release_year, t0.title_name, t0.type, t0.user_rating, t0.watched
        FROM title_lists AS t
        LEFT JOIN titles AS t0 ON t.title_id == t0.title_id
        WHERE t.list_id == @__listId_0), 
    Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, TitleList>, 
    NetflixTitles.API.DbContexts.netflix_appContext, 
    False, 
    False, 
    True
)'
2022-07-18 18:05:47.251 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 18:05:47.251 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-18 18:05:47.252 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:47.301 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:47.302 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`id`, `t`.`list_id`, `t`.`title_id`, `t`.`UserRating`, `t`.`Watched`, `t0`.`title_id`, `t0`.`cast`, `t0`.`country`, `t0`.`date_added`, `t0`.`description`, `t0`.`director`, `t0`.`duration`, `t0`.`listed_in`, `t0`.`rating`, `t0`.`release_year`, `t0`.`title_name`, `t0`.`type`, `t0`.`user_rating`, `t0`.`watched`
FROM `title_lists` AS `t`
LEFT JOIN `titles` AS `t0` ON `t`.`title_id` = `t0`.`title_id`
WHERE `t`.`list_id` = @__listId_0
2022-07-18 18:05:47.386 -07:00 [INF] Executed DbCommand (83ms) [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`id`, `t`.`list_id`, `t`.`title_id`, `t`.`UserRating`, `t`.`Watched`, `t0`.`title_id`, `t0`.`cast`, `t0`.`country`, `t0`.`date_added`, `t0`.`description`, `t0`.`director`, `t0`.`duration`, `t0`.`listed_in`, `t0`.`rating`, `t0`.`release_year`, `t0`.`title_name`, `t0`.`type`, `t0`.`user_rating`, `t0`.`watched`
FROM `title_lists` AS `t`
LEFT JOIN `titles` AS `t0` ON `t`.`title_id` = `t0`.`title_id`
WHERE `t`.`list_id` = @__listId_0
2022-07-18 18:05:47.424 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:47.426 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:47.432 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:47.433 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:47.433 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:47.433 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:47.434 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:47.434 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:47.434 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:47.434 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:47.434 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:47.435 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:47.435 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:05:47.435 -07:00 [DBG] A data reader was disposed.
2022-07-18 18:05:47.435 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:47.435 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:05:47.496 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-18 18:05:47.496 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-18 18:05:47.496 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-18 18:05:47.496 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-18 18:05:47.497 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-18 18:05:47.497 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[NetflixTitles.API.Models.TitleDto, NetflixTitles.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-07-18 18:05:47.573 -07:00 [INF] Executed action NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API) in 1278.8298ms
2022-07-18 18:05:47.573 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)'
2022-07-18 18:05:47.575 -07:00 [DBG] Connection id "0HMJ94AU8CJ8S" completed keep alive response.
2022-07-18 18:05:47.576 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists/11/titles - - - 200 3577 application/json;+charset=utf-8 1448.4221ms
2022-07-18 18:15:20.128 -07:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2022-07-18 18:15:20.296 -07:00 [DBG] Hosting starting
2022-07-18 18:15:20.328 -07:00 [INF] User profile is available. Using '/Users/chandlerpotter/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2022-07-18 18:15:20.337 -07:00 [DBG] Reading data from file '/Users/chandlerpotter/.aspnet/DataProtection-Keys/key-2c2b681e-5d66-4926-8d25-12ef831d143a.xml'.
2022-07-18 18:15:20.363 -07:00 [DBG] Found key {2c2b681e-5d66-4926-8d25-12ef831d143a}.
2022-07-18 18:15:20.383 -07:00 [DBG] Considering key {2c2b681e-5d66-4926-8d25-12ef831d143a} with expiration date 2022-08-30 02:56:11Z as default key.
2022-07-18 18:15:20.389 -07:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2022-07-18 18:15:20.398 -07:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2022-07-18 18:15:20.399 -07:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2022-07-18 18:15:20.411 -07:00 [DBG] Using key {2c2b681e-5d66-4926-8d25-12ef831d143a} as the default key.
2022-07-18 18:15:20.413 -07:00 [DBG] Key ring with default key {2c2b681e-5d66-4926-8d25-12ef831d143a} was loaded during application startup.
2022-07-18 18:15:20.612 -07:00 [DBG] Using development certificate: CN=localhost (Thumbprint: 8E52971A6A589C1DFB045CCF462DA2B18BE72287)
2022-07-18 18:15:20.788 -07:00 [INF] Now listening on: https://localhost:7073
2022-07-18 18:15:20.841 -07:00 [INF] Now listening on: http://localhost:5170
2022-07-18 18:15:20.841 -07:00 [DBG] Loaded hosting startup assembly NetflixTitles.API
2022-07-18 18:15:20.844 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2022-07-18 18:15:20.845 -07:00 [INF] Hosting environment: Development
2022-07-18 18:15:20.846 -07:00 [INF] Content root path: /Users/chandlerpotter/Projects/NetflixTitles/NetflixTitles.API/
2022-07-18 18:15:20.847 -07:00 [DBG] Hosting started
2022-07-18 18:15:25.370 -07:00 [DBG] Connection id "0HMJ94GKFN91H" received FIN.
2022-07-18 18:15:25.391 -07:00 [DBG] Connection id "0HMJ94GKFN91H" accepted.
2022-07-18 18:15:25.394 -07:00 [DBG] Connection id "0HMJ94GKFN91H" started.
2022-07-18 18:15:25.426 -07:00 [DBG] Connection id "0HMJ94GKFN91I" accepted.
2022-07-18 18:15:25.428 -07:00 [DBG] Connection id "0HMJ94GKFN91I" started.
2022-07-18 18:15:25.491 -07:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2022-07-18 18:15:25.832 -07:00 [DBG] Connection id "0HMJ94GKFN91H" stopped.
2022-07-18 18:15:25.832 -07:00 [DBG] Connection 0HMJ94GKFN91I established using the following protocol: "Tls12"
2022-07-18 18:15:25.862 -07:00 [DBG] Connection id "0HMJ94GKFN91H" sending FIN because: "The Socket transport's send loop completed gracefully."
2022-07-18 18:15:25.960 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/lists/11/titles - -
2022-07-18 18:15:25.964 -07:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2022-07-18 18:15:26.031 -07:00 [DBG] 1 candidate(s) found for the request path '/api/lists/11/titles'
2022-07-18 18:15:26.039 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)' with route pattern 'api/lists/{listId}/titles' is valid for the request path '/api/lists/11/titles'
2022-07-18 18:15:26.042 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)'
2022-07-18 18:15:26.099 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-18 18:15:26.390 -07:00 [DBG] Successfully validated the token.
2022-07-18 18:15:26.393 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-18 18:15:26.405 -07:00 [DBG] Authorization was successful.
2022-07-18 18:15:26.408 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)'
2022-07-18 18:15:26.464 -07:00 [INF] Route matched with {action = "GetTitlesForList", controller = "Titles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[NetflixTitles.API.Models.TitleDto]]] GetTitlesForList(Int32) on controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API).
2022-07-18 18:15:26.466 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-18 18:15:26.467 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-18 18:15:26.468 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-18 18:15:26.468 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-18 18:15:26.469 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-18 18:15:26.470 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API)
2022-07-18 18:15:26.891 -07:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2022-07-18 18:15:27.882 -07:00 [INF] Entity Framework Core 6.0.6 initialized 'netflix_appContext' using provider 'Pomelo.EntityFrameworkCore.MySql:6.0.1' with options: MaxPoolSize=1024 ServerVersion 8.0.29-mysql 
2022-07-18 18:15:28.102 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.TitlesController (NetflixTitles.API)
2022-07-18 18:15:28.110 -07:00 [DBG] Attempting to bind parameter 'listId' of type 'System.Int32' ...
2022-07-18 18:15:28.115 -07:00 [DBG] Attempting to bind parameter 'listId' of type 'System.Int32' using the name 'listId' in request data ...
2022-07-18 18:15:28.117 -07:00 [DBG] Done attempting to bind parameter 'listId' of type 'System.Int32'.
2022-07-18 18:15:28.117 -07:00 [DBG] Done attempting to bind parameter 'listId' of type 'System.Int32'.
2022-07-18 18:15:28.117 -07:00 [DBG] Attempting to validate the bound parameter 'listId' of type 'System.Int32' ...
2022-07-18 18:15:28.123 -07:00 [DBG] Done attempting to validate the bound parameter 'listId' of type 'System.Int32'.
2022-07-18 18:15:28.221 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Any(l => l.ListId == __listId_0)'
2022-07-18 18:15:28.425 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: new SingleQueryingEnumerable<bool>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM lists AS l
                WHERE l.list_id == @__listId_0)), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, bool>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-18 18:15:28.481 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 18:15:28.496 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2022-07-18 18:15:28.525 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:15:29.082 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:15:29.105 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0)
2022-07-18 18:15:29.179 -07:00 [INF] Executed DbCommand (80ms) [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE `l`.`list_id` = @__listId_0)
2022-07-18 18:15:29.207 -07:00 [DBG] A data reader was disposed.
2022-07-18 18:15:29.211 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:15:29.213 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:15:29.220 -07:00 [DBG] Compiling query expression: 
'DbSet<List>()
    .Any(l => l.ListId == __listId_0 && l.UserId.ToString() == __userClaim_1)'
2022-07-18 18:15:29.270 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: new SingleQueryingEnumerable<bool>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM lists AS l
                WHERE (l.list_id == @__listId_0) && (CAST(l.user_id AS longtext) == @__userClaim_1))), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, bool>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-18 18:15:29.283 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 18:15:29.284 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-18 18:15:29.285 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:15:29.292 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:15:29.293 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-18 18:15:29.376 -07:00 [INF] Executed DbCommand (83ms) [Parameters=[@__listId_0='?' (DbType = Int32), @__userClaim_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `lists` AS `l`
    WHERE (`l`.`list_id` = @__listId_0) AND (CAST(`l`.`user_id` AS char) = @__userClaim_1))
2022-07-18 18:15:29.378 -07:00 [DBG] A data reader was disposed.
2022-07-18 18:15:29.379 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:15:29.379 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:15:29.401 -07:00 [DBG] Compiling query expression: 
'DbSet<TitleList>()
    .Where(tl => tl.ListId == __listId_0)
    .Include(t => t.Title)'
2022-07-18 18:15:29.432 -07:00 [DBG] Including navigation: 'TitleList.Title'.
2022-07-18 18:15:29.523 -07:00 [DBG] Generated query execution expression: 
'queryContext => new SingleQueryingEnumerable<TitleList>(
    (RelationalQueryContext)queryContext, 
    RelationalCommandCache.SelectExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: TitleList.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TitleList.ListId (int?) FK Index, 1], [Property: TitleList.TitleId (int?) FK Index, 2], [Property: TitleList.UserRating (int?), 3], [Property: TitleList.Watched (bool?) ValueGenerated.OnAdd, 4] }
            1 -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Title.Cast (string), 6], [Property: Title.Country (string) MaxLength(255), 7], [Property: Title.DateAdded (DateOnly?), 8], [Property: Title.Description (string) Required, 9], [Property: Title.Director (string) MaxLength(255), 10], [Property: Title.Duration (string) MaxLength(255), 11], [Property: Title.ListedIn (string) Required MaxLength(255), 12], [Property: Title.Rating (string) MaxLength(255), 13], [Property: Title.ReleaseYear (short?), 14], [Property: Title.TitleName (string) Required MaxLength(255), 15], [Property: Title.Type (string), 16], [Property: Title.UserRating (int?), 17], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 18] }
        SELECT t.id, t.list_id, t.title_id, t.UserRating, t.Watched, t0.title_id, t0.cast, t0.country, t0.date_added, t0.description, t0.director, t0.duration, t0.listed_in, t0.rating, t0.release_year, t0.title_name, t0.type, t0.user_rating, t0.watched
        FROM title_lists AS t
        LEFT JOIN titles AS t0 ON t.title_id == t0.title_id
        WHERE t.list_id == @__listId_0), 
    Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, TitleList>, 
    NetflixTitles.API.DbContexts.netflix_appContext, 
    False, 
    False, 
    True
)'
2022-07-18 18:15:29.532 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 18:15:29.532 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-18 18:15:29.533 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:15:29.663 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:15:29.664 -07:00 [DBG] Executing DbCommand [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`id`, `t`.`list_id`, `t`.`title_id`, `t`.`UserRating`, `t`.`Watched`, `t0`.`title_id`, `t0`.`cast`, `t0`.`country`, `t0`.`date_added`, `t0`.`description`, `t0`.`director`, `t0`.`duration`, `t0`.`listed_in`, `t0`.`rating`, `t0`.`release_year`, `t0`.`title_name`, `t0`.`type`, `t0`.`user_rating`, `t0`.`watched`
FROM `title_lists` AS `t`
LEFT JOIN `titles` AS `t0` ON `t`.`title_id` = `t0`.`title_id`
WHERE `t`.`list_id` = @__listId_0
2022-07-18 18:15:29.850 -07:00 [INF] Executed DbCommand (186ms) [Parameters=[@__listId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`id`, `t`.`list_id`, `t`.`title_id`, `t`.`UserRating`, `t`.`Watched`, `t0`.`title_id`, `t0`.`cast`, `t0`.`country`, `t0`.`date_added`, `t0`.`description`, `t0`.`director`, `t0`.`duration`, `t0`.`listed_in`, `t0`.`rating`, `t0`.`release_year`, `t0`.`title_name`, `t0`.`type`, `t0`.`user_rating`, `t0`.`watched`
FROM `title_lists` AS `t`
LEFT JOIN `titles` AS `t0` ON `t`.`title_id` = `t0`.`title_id`
WHERE `t`.`list_id` = @__listId_0
2022-07-18 18:15:29.908 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:15:29.951 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:15:29.999 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:15:30.001 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:15:30.003 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:15:30.004 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:15:30.004 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:15:30.004 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:15:30.004 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:15:30.006 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:15:30.006 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:15:30.006 -07:00 [DBG] Context 'netflix_appContext' started tracking 'TitleList' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:15:30.006 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:15:30.007 -07:00 [DBG] A data reader was disposed.
2022-07-18 18:15:30.007 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:15:30.007 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:15:30.047 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-18 18:15:30.052 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-18 18:15:30.052 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-18 18:15:30.052 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-18 18:15:30.054 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-18 18:15:30.054 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[NetflixTitles.API.Models.TitleDto, NetflixTitles.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-07-18 18:15:30.223 -07:00 [INF] Executed action NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API) in 3747.26ms
2022-07-18 18:15:30.244 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.TitlesController.GetTitlesForList (NetflixTitles.API)'
2022-07-18 18:15:30.251 -07:00 [DBG] Connection id "0HMJ94GKFN91I" completed keep alive response.
2022-07-18 18:15:30.268 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/lists/11/titles - - - 200 3577 application/json;+charset=utf-8 4311.3927ms
2022-07-18 18:16:17.292 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/titles/45 - -
2022-07-18 18:16:17.303 -07:00 [DBG] 1 candidate(s) found for the request path '/api/titles/45'
2022-07-18 18:16:17.305 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AllTitlesController.GetTitle (NetflixTitles.API)' with route pattern 'api/titles/{id}' is valid for the request path '/api/titles/45'
2022-07-18 18:16:17.305 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AllTitlesController.GetTitle (NetflixTitles.API)'
2022-07-18 18:16:17.314 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-18 18:16:17.323 -07:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2022-07-18 18:16:17.330 -07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2022-07-18 18:16:17.342 -07:00 [INF] AuthenticationScheme: Bearer was challenged.
2022-07-18 18:16:17.345 -07:00 [DBG] Connection id "0HMJ94GKFN91I" completed keep alive response.
2022-07-18 18:16:17.347 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/titles/45 - - - 401 0 - 55.7217ms
2022-07-18 18:16:37.154 -07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7073/api/titles/45 - -
2022-07-18 18:16:37.155 -07:00 [DBG] 1 candidate(s) found for the request path '/api/titles/45'
2022-07-18 18:16:37.156 -07:00 [DBG] Endpoint 'NetflixTitles.API.Controllers.AllTitlesController.GetTitle (NetflixTitles.API)' with route pattern 'api/titles/{id}' is valid for the request path '/api/titles/45'
2022-07-18 18:16:37.156 -07:00 [DBG] Request matched endpoint 'NetflixTitles.API.Controllers.AllTitlesController.GetTitle (NetflixTitles.API)'
2022-07-18 18:16:37.161 -07:00 [DBG] Static files was skipped as the request already matched an endpoint.
2022-07-18 18:16:37.177 -07:00 [DBG] Successfully validated the token.
2022-07-18 18:16:37.177 -07:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2022-07-18 18:16:37.179 -07:00 [DBG] Authorization was successful.
2022-07-18 18:16:37.179 -07:00 [INF] Executing endpoint 'NetflixTitles.API.Controllers.AllTitlesController.GetTitle (NetflixTitles.API)'
2022-07-18 18:16:37.197 -07:00 [INF] Route matched with {action = "GetTitle", controller = "AllTitles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[NetflixTitles.API.Models.TitleDto]] GetTitle(Int32) on controller NetflixTitles.API.Controllers.AllTitlesController (NetflixTitles.API).
2022-07-18 18:16:37.197 -07:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2022-07-18 18:16:37.198 -07:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2022-07-18 18:16:37.198 -07:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2022-07-18 18:16:37.198 -07:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2022-07-18 18:16:37.198 -07:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2022-07-18 18:16:37.198 -07:00 [DBG] Executing controller factory for controller NetflixTitles.API.Controllers.AllTitlesController (NetflixTitles.API)
2022-07-18 18:16:37.203 -07:00 [DBG] Executed controller factory for controller NetflixTitles.API.Controllers.AllTitlesController (NetflixTitles.API)
2022-07-18 18:16:37.205 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2022-07-18 18:16:37.206 -07:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2022-07-18 18:16:37.206 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-18 18:16:37.206 -07:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2022-07-18 18:16:37.207 -07:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2022-07-18 18:16:37.208 -07:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2022-07-18 18:16:37.229 -07:00 [DBG] Compiling query expression: 
'DbSet<Title>()
    .Where(t => (int?)t.TitleId == __titleId_0)
    .FirstOrDefault()'
2022-07-18 18:16:37.272 -07:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Title>(
    asyncEnumerable: new SingleQueryingEnumerable<Title>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache.SelectExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Title.TitleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Title.Cast (string), 1], [Property: Title.Country (string) MaxLength(255), 2], [Property: Title.DateAdded (DateOnly?), 3], [Property: Title.Description (string) Required, 4], [Property: Title.Director (string) MaxLength(255), 5], [Property: Title.Duration (string) MaxLength(255), 6], [Property: Title.ListedIn (string) Required MaxLength(255), 7], [Property: Title.Rating (string) MaxLength(255), 8], [Property: Title.ReleaseYear (short?), 9], [Property: Title.TitleName (string) Required MaxLength(255), 10], [Property: Title.Type (string), 11], [Property: Title.UserRating (int?), 12], [Property: Title.Watched (bool?) ValueGenerated.OnAdd, 13] }
            SELECT TOP(1) t.title_id, t.cast, t.country, t.date_added, t.description, t.director, t.duration, t.listed_in, t.rating, t.release_year, t.title_name, t.type, t.user_rating, t.watched
            FROM titles AS t
            WHERE t.title_id == @__titleId_0), 
        Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, Title>, 
        NetflixTitles.API.DbContexts.netflix_appContext, 
        False, 
        False, 
        True
    ), 
    cancellationToken: queryContext.CancellationToken)'
2022-07-18 18:16:37.279 -07:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2022-07-18 18:16:37.279 -07:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2022-07-18 18:16:37.281 -07:00 [DBG] Opening connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:16:37.285 -07:00 [DBG] Opened connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:16:37.286 -07:00 [DBG] Executing DbCommand [Parameters=[@__titleId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`title_id`, `t`.`cast`, `t`.`country`, `t`.`date_added`, `t`.`description`, `t`.`director`, `t`.`duration`, `t`.`listed_in`, `t`.`rating`, `t`.`release_year`, `t`.`title_name`, `t`.`type`, `t`.`user_rating`, `t`.`watched`
FROM `titles` AS `t`
WHERE `t`.`title_id` = @__titleId_0
LIMIT 1
2022-07-18 18:16:37.289 -07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__titleId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `t`.`title_id`, `t`.`cast`, `t`.`country`, `t`.`date_added`, `t`.`description`, `t`.`director`, `t`.`duration`, `t`.`listed_in`, `t`.`rating`, `t`.`release_year`, `t`.`title_name`, `t`.`type`, `t`.`user_rating`, `t`.`watched`
FROM `titles` AS `t`
WHERE `t`.`title_id` = @__titleId_0
LIMIT 1
2022-07-18 18:16:37.292 -07:00 [DBG] Context 'netflix_appContext' started tracking 'Title' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2022-07-18 18:16:37.293 -07:00 [DBG] A data reader was disposed.
2022-07-18 18:16:37.294 -07:00 [DBG] Closing connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:16:37.294 -07:00 [DBG] Closed connection to database 'netflix_app' on server 'localhost'.
2022-07-18 18:16:37.305 -07:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter"]
2022-07-18 18:16:37.315 -07:00 [DBG] No information found on request to perform content negotiation.
2022-07-18 18:16:37.315 -07:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2022-07-18 18:16:37.315 -07:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2022-07-18 18:16:37.315 -07:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter' and content type 'application/json' to write the response.
2022-07-18 18:16:37.315 -07:00 [INF] Executing OkObjectResult, writing value of type 'NetflixTitles.API.Models.TitleDto'.
2022-07-18 18:16:37.347 -07:00 [INF] Executed action NetflixTitles.API.Controllers.AllTitlesController.GetTitle (NetflixTitles.API) in 123.2792ms
2022-07-18 18:16:37.373 -07:00 [INF] Executed endpoint 'NetflixTitles.API.Controllers.AllTitlesController.GetTitle (NetflixTitles.API)'
2022-07-18 18:16:37.373 -07:00 [DBG] Connection id "0HMJ94GKFN91I" completed keep alive response.
2022-07-18 18:16:37.375 -07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7073/api/titles/45 - - - 200 588 application/json;+charset=utf-8 221.0545ms
